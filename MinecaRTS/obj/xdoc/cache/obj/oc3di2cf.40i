id: MinecaRTS
language: CSharp
name:
  Default: MinecaRTS
qualifiedName:
  Default: MinecaRTS
type: Assembly
modifiers: {}
items:
- id: MinecaRTS
  commentId: N:MinecaRTS
  language: CSharp
  name:
    CSharp: MinecaRTS
    VB: MinecaRTS
  nameWithType:
    CSharp: MinecaRTS
    VB: MinecaRTS
  qualifiedName:
    CSharp: MinecaRTS
    VB: MinecaRTS
  type: Namespace
  assemblies:
  - MinecaRTS
  modifiers: {}
  items:
  - id: MinecaRTS.Bot
    commentId: T:MinecaRTS.Bot
    language: CSharp
    name:
      CSharp: Bot
      VB: Bot
    nameWithType:
      CSharp: Bot
      VB: Bot
    qualifiedName:
      CSharp: MinecaRTS.Bot
      VB: MinecaRTS.Bot
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Bots/Bot.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Bot
      path: MinecaRTS/Bots/Bot.cs
      startLine: 9
    syntax:
      content:
        CSharp: 'public abstract class Bot : Player, IHandleMessages'
        VB: >-
          Public MustInherit Class Bot

              Inherits Player

              Implements IHandleMessages
    inheritance:
    - System.Object
    - MinecaRTS.Player
    implements:
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.Player.ID
    - MinecaRTS.Player.Data
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: MinecaRTS.Bot.#ctor(MinecaRTS.PlayerData)
      commentId: M:MinecaRTS.Bot.#ctor(MinecaRTS.PlayerData)
      language: CSharp
      name:
        CSharp: Bot(PlayerData)
        VB: Bot(PlayerData)
      nameWithType:
        CSharp: Bot.Bot(PlayerData)
        VB: Bot.Bot(PlayerData)
      qualifiedName:
        CSharp: MinecaRTS.Bot.Bot(MinecaRTS.PlayerData)
        VB: MinecaRTS.Bot.Bot(MinecaRTS.PlayerData)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Bot.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Bots/Bot.cs
        startLine: 11
      syntax:
        content:
          CSharp: public Bot(PlayerData data)
          VB: Public Sub New(data As PlayerData)
        parameters:
        - id: data
          type: MinecaRTS.PlayerData
      overload: MinecaRTS.Bot.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Bot.HandleInput
      commentId: M:MinecaRTS.Bot.HandleInput
      language: CSharp
      name:
        CSharp: HandleInput()
        VB: HandleInput()
      nameWithType:
        CSharp: Bot.HandleInput()
        VB: Bot.HandleInput()
      qualifiedName:
        CSharp: MinecaRTS.Bot.HandleInput()
        VB: MinecaRTS.Bot.HandleInput()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Bot.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleInput
        path: MinecaRTS/Bots/Bot.cs
        startLine: 15
      syntax:
        content:
          CSharp: public override void HandleInput()
          VB: Public Overrides Sub HandleInput
      overload: MinecaRTS.Bot.HandleInput*
      overridden: MinecaRTS.Player.HandleInput
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Bot.OnUnitSpawn(MinecaRTS.Unit)
      commentId: M:MinecaRTS.Bot.OnUnitSpawn(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: OnUnitSpawn(Unit)
        VB: OnUnitSpawn(Unit)
      nameWithType:
        CSharp: Bot.OnUnitSpawn(Unit)
        VB: Bot.OnUnitSpawn(Unit)
      qualifiedName:
        CSharp: MinecaRTS.Bot.OnUnitSpawn(MinecaRTS.Unit)
        VB: MinecaRTS.Bot.OnUnitSpawn(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Bot.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: OnUnitSpawn
        path: MinecaRTS/Bots/Bot.cs
        startLine: 19
      syntax:
        content:
          CSharp: public abstract void OnUnitSpawn(Unit newUnit)
          VB: Public MustOverride Sub OnUnitSpawn(newUnit As Unit)
        parameters:
        - id: newUnit
          type: MinecaRTS.Unit
      overload: MinecaRTS.Bot.OnUnitSpawn*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.Bot.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
      commentId: M:MinecaRTS.Bot.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
      language: CSharp
      name:
        CSharp: OnProductionBuildingTaskComplete(ProductionBuilding)
        VB: OnProductionBuildingTaskComplete(ProductionBuilding)
      nameWithType:
        CSharp: Bot.OnProductionBuildingTaskComplete(ProductionBuilding)
        VB: Bot.OnProductionBuildingTaskComplete(ProductionBuilding)
      qualifiedName:
        CSharp: MinecaRTS.Bot.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
        VB: MinecaRTS.Bot.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Bot.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: OnProductionBuildingTaskComplete
        path: MinecaRTS/Bots/Bot.cs
        startLine: 20
      syntax:
        content:
          CSharp: public abstract void OnProductionBuildingTaskComplete(ProductionBuilding prodBuild)
          VB: Public MustOverride Sub OnProductionBuildingTaskComplete(prodBuild As ProductionBuilding)
        parameters:
        - id: prodBuild
          type: MinecaRTS.ProductionBuilding
      overload: MinecaRTS.Bot.OnProductionBuildingTaskComplete*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.Bot.OnSupplyChange
      commentId: M:MinecaRTS.Bot.OnSupplyChange
      language: CSharp
      name:
        CSharp: OnSupplyChange()
        VB: OnSupplyChange()
      nameWithType:
        CSharp: Bot.OnSupplyChange()
        VB: Bot.OnSupplyChange()
      qualifiedName:
        CSharp: MinecaRTS.Bot.OnSupplyChange()
        VB: MinecaRTS.Bot.OnSupplyChange()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Bot.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: OnSupplyChange
        path: MinecaRTS/Bots/Bot.cs
        startLine: 21
      syntax:
        content:
          CSharp: public abstract void OnSupplyChange()
          VB: Public MustOverride Sub OnSupplyChange
      overload: MinecaRTS.Bot.OnSupplyChange*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.Bot.OnBuildingComplete(MinecaRTS.Building)
      commentId: M:MinecaRTS.Bot.OnBuildingComplete(MinecaRTS.Building)
      language: CSharp
      name:
        CSharp: OnBuildingComplete(Building)
        VB: OnBuildingComplete(Building)
      nameWithType:
        CSharp: Bot.OnBuildingComplete(Building)
        VB: Bot.OnBuildingComplete(Building)
      qualifiedName:
        CSharp: MinecaRTS.Bot.OnBuildingComplete(MinecaRTS.Building)
        VB: MinecaRTS.Bot.OnBuildingComplete(MinecaRTS.Building)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Bot.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: OnBuildingComplete
        path: MinecaRTS/Bots/Bot.cs
        startLine: 22
      syntax:
        content:
          CSharp: public abstract void OnBuildingComplete(Building building)
          VB: Public MustOverride Sub OnBuildingComplete(building As Building)
        parameters:
        - id: building
          type: MinecaRTS.Building
      overload: MinecaRTS.Bot.OnBuildingComplete*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.Bot.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.Bot.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: Bot.HandleMessage(Message)
        VB: Bot.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.Bot.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.Bot.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Bot.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Bots/Bot.cs
        startLine: 24
      syntax:
        content:
          CSharp: public override sealed void HandleMessage(Message message)
          VB: Public NotOverridable Overrides Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.Bot.HandleMessage*
      overridden: MinecaRTS.Player.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - override
        - sealed
        VB:
        - Public
        - Overrides
        - NotOverridable
    - id: MinecaRTS.Bot.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Bot.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: Bot.Render(SpriteBatch)
        VB: Bot.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Bot.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Bot.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Bot.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Bots/Bot.cs
        startLine: 42
      syntax:
        content:
          CSharp: public override void Render(SpriteBatch spriteBatch)
          VB: Public Overrides Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Bot.Render*
      overridden: MinecaRTS.Player.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: MinecaRTS.CollisionCellData
    commentId: T:MinecaRTS.CollisionCellData
    language: CSharp
    name:
      CSharp: CollisionCellData
      VB: CollisionCellData
    nameWithType:
      CSharp: CollisionCellData
      VB: CollisionCellData
    qualifiedName:
      CSharp: MinecaRTS.CollisionCellData
      VB: MinecaRTS.CollisionCellData
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Core/CollisionCellData.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: CollisionCellData
      path: MinecaRTS/Core/CollisionCellData.cs
      startLine: 11
    syntax:
      content:
        CSharp: public class CollisionCellData
        VB: Public Class CollisionCellData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.CollisionCellData.Item(System.Int32,System.Int32)
      commentId: P:MinecaRTS.CollisionCellData.Item(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32, Int32]
        VB: Item(Int32, Int32)
      nameWithType:
        CSharp: CollisionCellData.Item[Int32, Int32]
        VB: CollisionCellData.Item(Int32, Int32)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.Item[System.Int32, System.Int32]
        VB: MinecaRTS.CollisionCellData.Item(System.Int32, System.Int32)
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: this[]
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 16
      syntax:
        content:
          CSharp: public HashSet<Unit> this[int col, int row] { get; }
          VB: Public ReadOnly Property Item(col As Integer, row As Integer) As HashSet(Of Unit)
        parameters:
        - id: col
          type: System.Int32
        - id: row
          type: System.Int32
        return:
          type: System.Collections.Generic.HashSet{MinecaRTS.Unit}
      overload: MinecaRTS.CollisionCellData.Item*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.CollisionCellData.Item(Microsoft.Xna.Framework.Point)
      commentId: P:MinecaRTS.CollisionCellData.Item(Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: Item[Point]
        VB: Item(Point)
      nameWithType:
        CSharp: CollisionCellData.Item[Point]
        VB: CollisionCellData.Item(Point)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.Item[Microsoft.Xna.Framework.Point]
        VB: MinecaRTS.CollisionCellData.Item(Microsoft.Xna.Framework.Point)
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: this[]
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 26
      syntax:
        content:
          CSharp: public HashSet<Unit> this[Point cellIndex] { get; }
          VB: Public ReadOnly Property Item(cellIndex As Point) As HashSet(Of Unit)
        parameters:
        - id: cellIndex
          type: Microsoft.Xna.Framework.Point
        return:
          type: System.Collections.Generic.HashSet{MinecaRTS.Unit}
      overload: MinecaRTS.CollisionCellData.Item*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.CollisionCellData.#ctor(MinecaRTS.Grid)
      commentId: M:MinecaRTS.CollisionCellData.#ctor(MinecaRTS.Grid)
      language: CSharp
      name:
        CSharp: CollisionCellData(Grid)
        VB: CollisionCellData(Grid)
      nameWithType:
        CSharp: CollisionCellData.CollisionCellData(Grid)
        VB: CollisionCellData.CollisionCellData(Grid)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.CollisionCellData(MinecaRTS.Grid)
        VB: MinecaRTS.CollisionCellData.CollisionCellData(MinecaRTS.Grid)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 31
      syntax:
        content:
          CSharp: public CollisionCellData(Grid grid)
          VB: Public Sub New(grid As Grid)
        parameters:
        - id: grid
          type: MinecaRTS.Grid
      overload: MinecaRTS.CollisionCellData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.CollisionCellData.Grid
      commentId: P:MinecaRTS.CollisionCellData.Grid
      language: CSharp
      name:
        CSharp: Grid
        VB: Grid
      nameWithType:
        CSharp: CollisionCellData.Grid
        VB: CollisionCellData.Grid
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.Grid
        VB: MinecaRTS.CollisionCellData.Grid
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Grid
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 46
      syntax:
        content:
          CSharp: public Grid Grid { get; }
          VB: Public ReadOnly Property Grid As Grid
        parameters: []
        return:
          type: MinecaRTS.Grid
      overload: MinecaRTS.CollisionCellData.Grid*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.CollisionCellData.AddUnit(MinecaRTS.Unit)
      commentId: M:MinecaRTS.CollisionCellData.AddUnit(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: AddUnit(Unit)
        VB: AddUnit(Unit)
      nameWithType:
        CSharp: CollisionCellData.AddUnit(Unit)
        VB: CollisionCellData.AddUnit(Unit)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.AddUnit(MinecaRTS.Unit)
        VB: MinecaRTS.CollisionCellData.AddUnit(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddUnit
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 51
      syntax:
        content:
          CSharp: public void AddUnit(Unit u)
          VB: Public Sub AddUnit(u As Unit)
        parameters:
        - id: u
          type: MinecaRTS.Unit
      overload: MinecaRTS.CollisionCellData.AddUnit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.CollisionCellData.RemoveUnit(MinecaRTS.Unit)
      commentId: M:MinecaRTS.CollisionCellData.RemoveUnit(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: RemoveUnit(Unit)
        VB: RemoveUnit(Unit)
      nameWithType:
        CSharp: CollisionCellData.RemoveUnit(Unit)
        VB: CollisionCellData.RemoveUnit(Unit)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.RemoveUnit(MinecaRTS.Unit)
        VB: MinecaRTS.CollisionCellData.RemoveUnit(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RemoveUnit
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 56
      syntax:
        content:
          CSharp: public void RemoveUnit(Unit u)
          VB: Public Sub RemoveUnit(u As Unit)
        parameters:
        - id: u
          type: MinecaRTS.Unit
      overload: MinecaRTS.CollisionCellData.RemoveUnit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.CollisionCellData.UnitMoved(MinecaRTS.Unit)
      commentId: M:MinecaRTS.CollisionCellData.UnitMoved(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: UnitMoved(Unit)
        VB: UnitMoved(Unit)
      nameWithType:
        CSharp: CollisionCellData.UnitMoved(Unit)
        VB: CollisionCellData.UnitMoved(Unit)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.UnitMoved(MinecaRTS.Unit)
        VB: MinecaRTS.CollisionCellData.UnitMoved(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: UnitMoved
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 61
      syntax:
        content:
          CSharp: public void UnitMoved(Unit u)
          VB: Public Sub UnitMoved(u As Unit)
        parameters:
        - id: u
          type: MinecaRTS.Unit
      overload: MinecaRTS.CollisionCellData.UnitMoved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsPos(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.CollisionCellData.GetUnitsInSameCellAsPos(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: GetUnitsInSameCellAsPos(Vector2)
        VB: GetUnitsInSameCellAsPos(Vector2)
      nameWithType:
        CSharp: CollisionCellData.GetUnitsInSameCellAsPos(Vector2)
        VB: CollisionCellData.GetUnitsInSameCellAsPos(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsPos(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsPos(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetUnitsInSameCellAsPos
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 67
      syntax:
        content:
          CSharp: public HashSet<Unit> GetUnitsInSameCellAsPos(Vector2 pos)
          VB: Public Function GetUnitsInSameCellAsPos(pos As Vector2) As HashSet(Of Unit)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: System.Collections.Generic.HashSet{MinecaRTS.Unit}
      overload: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsPos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundPos(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.CollisionCellData.GetUnitsInCellsAroundPos(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: GetUnitsInCellsAroundPos(Vector2)
        VB: GetUnitsInCellsAroundPos(Vector2)
      nameWithType:
        CSharp: CollisionCellData.GetUnitsInCellsAroundPos(Vector2)
        VB: CollisionCellData.GetUnitsInCellsAroundPos(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundPos(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundPos(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetUnitsInCellsAroundPos
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 72
      syntax:
        content:
          CSharp: public List<HashSet<Unit>> GetUnitsInCellsAroundPos(Vector2 pos)
          VB: Public Function GetUnitsInCellsAroundPos(pos As Vector2) As List(Of HashSet(Of Unit))
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: System.Collections.Generic.List{System.Collections.Generic.HashSet{MinecaRTS.Unit}}
      overload: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundPos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsUnit(MinecaRTS.Unit)
      commentId: M:MinecaRTS.CollisionCellData.GetUnitsInSameCellAsUnit(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: GetUnitsInSameCellAsUnit(Unit)
        VB: GetUnitsInSameCellAsUnit(Unit)
      nameWithType:
        CSharp: CollisionCellData.GetUnitsInSameCellAsUnit(Unit)
        VB: CollisionCellData.GetUnitsInSameCellAsUnit(Unit)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsUnit(MinecaRTS.Unit)
        VB: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsUnit(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetUnitsInSameCellAsUnit
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 82
      syntax:
        content:
          CSharp: public HashSet<Unit> GetUnitsInSameCellAsUnit(Unit u)
          VB: Public Function GetUnitsInSameCellAsUnit(u As Unit) As HashSet(Of Unit)
        parameters:
        - id: u
          type: MinecaRTS.Unit
        return:
          type: System.Collections.Generic.HashSet{MinecaRTS.Unit}
      overload: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsUnit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundUnit(MinecaRTS.Unit)
      commentId: M:MinecaRTS.CollisionCellData.GetUnitsInCellsAroundUnit(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: GetUnitsInCellsAroundUnit(Unit)
        VB: GetUnitsInCellsAroundUnit(Unit)
      nameWithType:
        CSharp: CollisionCellData.GetUnitsInCellsAroundUnit(Unit)
        VB: CollisionCellData.GetUnitsInCellsAroundUnit(Unit)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundUnit(MinecaRTS.Unit)
        VB: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundUnit(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetUnitsInCellsAroundUnit
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 87
      syntax:
        content:
          CSharp: public List<HashSet<Unit>> GetUnitsInCellsAroundUnit(Unit u)
          VB: Public Function GetUnitsInCellsAroundUnit(u As Unit) As List(Of HashSet(Of Unit))
        parameters:
        - id: u
          type: MinecaRTS.Unit
        return:
          type: System.Collections.Generic.List{System.Collections.Generic.HashSet{MinecaRTS.Unit}}
      overload: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundUnit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.CollisionCellData.GetCellIndexesAroundPos(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.CollisionCellData.GetCellIndexesAroundPos(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: GetCellIndexesAroundPos(Vector2)
        VB: GetCellIndexesAroundPos(Vector2)
      nameWithType:
        CSharp: CollisionCellData.GetCellIndexesAroundPos(Vector2)
        VB: CollisionCellData.GetCellIndexesAroundPos(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.GetCellIndexesAroundPos(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.CollisionCellData.GetCellIndexesAroundPos(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetCellIndexesAroundPos
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 92
      syntax:
        content:
          CSharp: public List<Point> GetCellIndexesAroundPos(Vector2 pos)
          VB: Public Function GetCellIndexesAroundPos(pos As Vector2) As List(Of Point)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: System.Collections.Generic.List{Microsoft.Xna.Framework.Point}
      overload: MinecaRTS.CollisionCellData.GetCellIndexesAroundPos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex(Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex(Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: GetUnitsInCellFromIndex(Point)
        VB: GetUnitsInCellFromIndex(Point)
      nameWithType:
        CSharp: CollisionCellData.GetUnitsInCellFromIndex(Point)
        VB: CollisionCellData.GetUnitsInCellFromIndex(Point)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex(Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex(Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetUnitsInCellFromIndex
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 111
      syntax:
        content:
          CSharp: public HashSet<Unit> GetUnitsInCellFromIndex(Point index)
          VB: Public Function GetUnitsInCellFromIndex(index As Point) As HashSet(Of Unit)
        parameters:
        - id: index
          type: Microsoft.Xna.Framework.Point
        return:
          type: System.Collections.Generic.HashSet{MinecaRTS.Unit}
      overload: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex(System.Int32,System.Int32)
      commentId: M:MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: GetUnitsInCellFromIndex(Int32, Int32)
        VB: GetUnitsInCellFromIndex(Int32, Int32)
      nameWithType:
        CSharp: CollisionCellData.GetUnitsInCellFromIndex(Int32, Int32)
        VB: CollisionCellData.GetUnitsInCellFromIndex(Int32, Int32)
      qualifiedName:
        CSharp: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex(System.Int32, System.Int32)
        VB: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex(System.Int32, System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/CollisionCellData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetUnitsInCellFromIndex
        path: MinecaRTS/Core/CollisionCellData.cs
        startLine: 116
      syntax:
        content:
          CSharp: public HashSet<Unit> GetUnitsInCellFromIndex(int col, int row)
          VB: Public Function GetUnitsInCellFromIndex(col As Integer, row As Integer) As HashSet(Of Unit)
        parameters:
        - id: col
          type: System.Int32
        - id: row
          type: System.Int32
        return:
          type: System.Collections.Generic.HashSet{MinecaRTS.Unit}
      overload: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.FogOfWarData
    commentId: T:MinecaRTS.FogOfWarData
    language: CSharp
    name:
      CSharp: FogOfWarData
      VB: FogOfWarData
    nameWithType:
      CSharp: FogOfWarData
      VB: FogOfWarData
    qualifiedName:
      CSharp: MinecaRTS.FogOfWarData
      VB: MinecaRTS.FogOfWarData
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Core/FogOfWarData.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: FogOfWarData
      path: MinecaRTS/Core/FogOfWarData.cs
      startLine: 11
    syntax:
      content:
        CSharp: public class FogOfWarData
        VB: Public Class FogOfWarData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.FogOfWarData.#ctor(MinecaRTS.Grid,MinecaRTS.CollisionCellData,MinecaRTS.World)
      commentId: M:MinecaRTS.FogOfWarData.#ctor(MinecaRTS.Grid,MinecaRTS.CollisionCellData,MinecaRTS.World)
      language: CSharp
      name:
        CSharp: FogOfWarData(Grid, CollisionCellData, World)
        VB: FogOfWarData(Grid, CollisionCellData, World)
      nameWithType:
        CSharp: FogOfWarData.FogOfWarData(Grid, CollisionCellData, World)
        VB: FogOfWarData.FogOfWarData(Grid, CollisionCellData, World)
      qualifiedName:
        CSharp: MinecaRTS.FogOfWarData.FogOfWarData(MinecaRTS.Grid, MinecaRTS.CollisionCellData, MinecaRTS.World)
        VB: MinecaRTS.FogOfWarData.FogOfWarData(MinecaRTS.Grid, MinecaRTS.CollisionCellData, MinecaRTS.World)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/FogOfWarData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Core/FogOfWarData.cs
        startLine: 46
      syntax:
        content:
          CSharp: public FogOfWarData(Grid grid, CollisionCellData collisionCells, World world)
          VB: Public Sub New(grid As Grid, collisionCells As CollisionCellData, world As World)
        parameters:
        - id: grid
          type: MinecaRTS.Grid
        - id: collisionCells
          type: MinecaRTS.CollisionCellData
        - id: world
          type: MinecaRTS.World
      overload: MinecaRTS.FogOfWarData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.FogOfWarData.TeamCanSeeCell(MinecaRTS.Team,System.Int32,System.Int32)
      commentId: M:MinecaRTS.FogOfWarData.TeamCanSeeCell(MinecaRTS.Team,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: TeamCanSeeCell(Team, Int32, Int32)
        VB: TeamCanSeeCell(Team, Int32, Int32)
      nameWithType:
        CSharp: FogOfWarData.TeamCanSeeCell(Team, Int32, Int32)
        VB: FogOfWarData.TeamCanSeeCell(Team, Int32, Int32)
      qualifiedName:
        CSharp: MinecaRTS.FogOfWarData.TeamCanSeeCell(MinecaRTS.Team, System.Int32, System.Int32)
        VB: MinecaRTS.FogOfWarData.TeamCanSeeCell(MinecaRTS.Team, System.Int32, System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/FogOfWarData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TeamCanSeeCell
        path: MinecaRTS/Core/FogOfWarData.cs
        startLine: 106
      syntax:
        content:
          CSharp: public bool TeamCanSeeCell(Team team, int col, int row)
          VB: Public Function TeamCanSeeCell(team As Team, col As Integer, row As Integer) As Boolean
        parameters:
        - id: team
          type: MinecaRTS.Team
        - id: col
          type: System.Int32
        - id: row
          type: System.Int32
        return:
          type: System.Boolean
      overload: MinecaRTS.FogOfWarData.TeamCanSeeCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.FogOfWarData.TeamCanSeeCell(MinecaRTS.Team,Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.FogOfWarData.TeamCanSeeCell(MinecaRTS.Team,Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: TeamCanSeeCell(Team, Point)
        VB: TeamCanSeeCell(Team, Point)
      nameWithType:
        CSharp: FogOfWarData.TeamCanSeeCell(Team, Point)
        VB: FogOfWarData.TeamCanSeeCell(Team, Point)
      qualifiedName:
        CSharp: MinecaRTS.FogOfWarData.TeamCanSeeCell(MinecaRTS.Team, Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.FogOfWarData.TeamCanSeeCell(MinecaRTS.Team, Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/FogOfWarData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TeamCanSeeCell
        path: MinecaRTS/Core/FogOfWarData.cs
        startLine: 117
      syntax:
        content:
          CSharp: public bool TeamCanSeeCell(Team team, Point cellIndex)
          VB: Public Function TeamCanSeeCell(team As Team, cellIndex As Point) As Boolean
        parameters:
        - id: team
          type: MinecaRTS.Team
        - id: cellIndex
          type: Microsoft.Xna.Framework.Point
        return:
          type: System.Boolean
      overload: MinecaRTS.FogOfWarData.TeamCanSeeCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.FogOfWarData.TeamCanSeePos(MinecaRTS.Team,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.FogOfWarData.TeamCanSeePos(MinecaRTS.Team,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: TeamCanSeePos(Team, Vector2)
        VB: TeamCanSeePos(Team, Vector2)
      nameWithType:
        CSharp: FogOfWarData.TeamCanSeePos(Team, Vector2)
        VB: FogOfWarData.TeamCanSeePos(Team, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.FogOfWarData.TeamCanSeePos(MinecaRTS.Team, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.FogOfWarData.TeamCanSeePos(MinecaRTS.Team, Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/FogOfWarData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TeamCanSeePos
        path: MinecaRTS/Core/FogOfWarData.cs
        startLine: 122
      syntax:
        content:
          CSharp: public bool TeamCanSeePos(Team team, Vector2 pos)
          VB: Public Function TeamCanSeePos(team As Team, pos As Vector2) As Boolean
        parameters:
        - id: team
          type: MinecaRTS.Team
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: System.Boolean
      overload: MinecaRTS.FogOfWarData.TeamCanSeePos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.FogOfWarData.TeamHasExploredCell(MinecaRTS.Team,System.Int32,System.Int32)
      commentId: M:MinecaRTS.FogOfWarData.TeamHasExploredCell(MinecaRTS.Team,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: TeamHasExploredCell(Team, Int32, Int32)
        VB: TeamHasExploredCell(Team, Int32, Int32)
      nameWithType:
        CSharp: FogOfWarData.TeamHasExploredCell(Team, Int32, Int32)
        VB: FogOfWarData.TeamHasExploredCell(Team, Int32, Int32)
      qualifiedName:
        CSharp: MinecaRTS.FogOfWarData.TeamHasExploredCell(MinecaRTS.Team, System.Int32, System.Int32)
        VB: MinecaRTS.FogOfWarData.TeamHasExploredCell(MinecaRTS.Team, System.Int32, System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/FogOfWarData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TeamHasExploredCell
        path: MinecaRTS/Core/FogOfWarData.cs
        startLine: 127
      syntax:
        content:
          CSharp: public bool TeamHasExploredCell(Team team, int col, int row)
          VB: Public Function TeamHasExploredCell(team As Team, col As Integer, row As Integer) As Boolean
        parameters:
        - id: team
          type: MinecaRTS.Team
        - id: col
          type: System.Int32
        - id: row
          type: System.Int32
        return:
          type: System.Boolean
      overload: MinecaRTS.FogOfWarData.TeamHasExploredCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.FogOfWarData.TeamHasExploredCell(MinecaRTS.Team,Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.FogOfWarData.TeamHasExploredCell(MinecaRTS.Team,Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: TeamHasExploredCell(Team, Point)
        VB: TeamHasExploredCell(Team, Point)
      nameWithType:
        CSharp: FogOfWarData.TeamHasExploredCell(Team, Point)
        VB: FogOfWarData.TeamHasExploredCell(Team, Point)
      qualifiedName:
        CSharp: MinecaRTS.FogOfWarData.TeamHasExploredCell(MinecaRTS.Team, Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.FogOfWarData.TeamHasExploredCell(MinecaRTS.Team, Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/FogOfWarData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TeamHasExploredCell
        path: MinecaRTS/Core/FogOfWarData.cs
        startLine: 138
      syntax:
        content:
          CSharp: public bool TeamHasExploredCell(Team team, Point cellIndex)
          VB: Public Function TeamHasExploredCell(team As Team, cellIndex As Point) As Boolean
        parameters:
        - id: team
          type: MinecaRTS.Team
        - id: cellIndex
          type: Microsoft.Xna.Framework.Point
        return:
          type: System.Boolean
      overload: MinecaRTS.FogOfWarData.TeamHasExploredCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.FogOfWarData.TeamHasExploredPos(MinecaRTS.Team,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.FogOfWarData.TeamHasExploredPos(MinecaRTS.Team,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: TeamHasExploredPos(Team, Vector2)
        VB: TeamHasExploredPos(Team, Vector2)
      nameWithType:
        CSharp: FogOfWarData.TeamHasExploredPos(Team, Vector2)
        VB: FogOfWarData.TeamHasExploredPos(Team, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.FogOfWarData.TeamHasExploredPos(MinecaRTS.Team, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.FogOfWarData.TeamHasExploredPos(MinecaRTS.Team, Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/FogOfWarData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TeamHasExploredPos
        path: MinecaRTS/Core/FogOfWarData.cs
        startLine: 143
      syntax:
        content:
          CSharp: public bool TeamHasExploredPos(Team team, Vector2 pos)
          VB: Public Function TeamHasExploredPos(team As Team, pos As Vector2) As Boolean
        parameters:
        - id: team
          type: MinecaRTS.Team
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: System.Boolean
      overload: MinecaRTS.FogOfWarData.TeamHasExploredPos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.FogOfWarData.BuildingAdded(MinecaRTS.Building)
      commentId: M:MinecaRTS.FogOfWarData.BuildingAdded(MinecaRTS.Building)
      language: CSharp
      name:
        CSharp: BuildingAdded(Building)
        VB: BuildingAdded(Building)
      nameWithType:
        CSharp: FogOfWarData.BuildingAdded(Building)
        VB: FogOfWarData.BuildingAdded(Building)
      qualifiedName:
        CSharp: MinecaRTS.FogOfWarData.BuildingAdded(MinecaRTS.Building)
        VB: MinecaRTS.FogOfWarData.BuildingAdded(MinecaRTS.Building)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/FogOfWarData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: BuildingAdded
        path: MinecaRTS/Core/FogOfWarData.cs
        startLine: 150
      syntax:
        content:
          CSharp: public void BuildingAdded(Building b)
          VB: Public Sub BuildingAdded(b As Building)
        parameters:
        - id: b
          type: MinecaRTS.Building
      overload: MinecaRTS.FogOfWarData.BuildingAdded*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.FogOfWarData.UnitMoved(MinecaRTS.Unit)
      commentId: M:MinecaRTS.FogOfWarData.UnitMoved(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: UnitMoved(Unit)
        VB: UnitMoved(Unit)
      nameWithType:
        CSharp: FogOfWarData.UnitMoved(Unit)
        VB: FogOfWarData.UnitMoved(Unit)
      qualifiedName:
        CSharp: MinecaRTS.FogOfWarData.UnitMoved(MinecaRTS.Unit)
        VB: MinecaRTS.FogOfWarData.UnitMoved(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/FogOfWarData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: UnitMoved
        path: MinecaRTS/Core/FogOfWarData.cs
        startLine: 165
      syntax:
        content:
          CSharp: public void UnitMoved(Unit u)
          VB: Public Sub UnitMoved(u As Unit)
        parameters:
        - id: u
          type: MinecaRTS.Unit
      overload: MinecaRTS.FogOfWarData.UnitMoved*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.FogOfWarData.UnitAdded(MinecaRTS.Unit)
      commentId: M:MinecaRTS.FogOfWarData.UnitAdded(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: UnitAdded(Unit)
        VB: UnitAdded(Unit)
      nameWithType:
        CSharp: FogOfWarData.UnitAdded(Unit)
        VB: FogOfWarData.UnitAdded(Unit)
      qualifiedName:
        CSharp: MinecaRTS.FogOfWarData.UnitAdded(MinecaRTS.Unit)
        VB: MinecaRTS.FogOfWarData.UnitAdded(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/FogOfWarData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: UnitAdded
        path: MinecaRTS/Core/FogOfWarData.cs
        startLine: 210
      syntax:
        content:
          CSharp: public void UnitAdded(Unit u)
          VB: Public Sub UnitAdded(u As Unit)
        parameters:
        - id: u
          type: MinecaRTS.Unit
      overload: MinecaRTS.FogOfWarData.UnitAdded*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.Player
    commentId: T:MinecaRTS.Player
    language: CSharp
    name:
      CSharp: Player
      VB: Player
    nameWithType:
      CSharp: Player
      VB: Player
    qualifiedName:
      CSharp: MinecaRTS.Player
      VB: MinecaRTS.Player
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Bots/Player.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Player
      path: MinecaRTS/Bots/Player.cs
      startLine: 9
    syntax:
      content:
        CSharp: 'public abstract class Player : IHandleMessages'
        VB: >-
          Public MustInherit Class Player

              Implements IHandleMessages
    inheritance:
    - System.Object
    implements:
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: MinecaRTS.Player.ID
      commentId: P:MinecaRTS.Player.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: Player.ID
        VB: Player.ID
      qualifiedName:
        CSharp: MinecaRTS.Player.ID
        VB: MinecaRTS.Player.ID
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Player.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ID
        path: MinecaRTS/Bots/Player.cs
        startLine: 14
      syntax:
        content:
          CSharp: public ulong ID { get; }
          VB: Public ReadOnly Property ID As ULong
        parameters: []
        return:
          type: System.UInt64
      overload: MinecaRTS.Player.ID*
      implements:
      - MinecaRTS.IHandleMessages.ID
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Player.Data
      commentId: P:MinecaRTS.Player.Data
      language: CSharp
      name:
        CSharp: Data
        VB: Data
      nameWithType:
        CSharp: Player.Data
        VB: Player.Data
      qualifiedName:
        CSharp: MinecaRTS.Player.Data
        VB: MinecaRTS.Player.Data
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Player.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Data
        path: MinecaRTS/Bots/Player.cs
        startLine: 19
      syntax:
        content:
          CSharp: protected PlayerData Data { get; }
          VB: Protected ReadOnly Property Data As PlayerData
        parameters: []
        return:
          type: MinecaRTS.PlayerData
      overload: MinecaRTS.Player.Data*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: MinecaRTS.Player.#ctor(MinecaRTS.PlayerData)
      commentId: M:MinecaRTS.Player.#ctor(MinecaRTS.PlayerData)
      language: CSharp
      name:
        CSharp: Player(PlayerData)
        VB: Player(PlayerData)
      nameWithType:
        CSharp: Player.Player(PlayerData)
        VB: Player.Player(PlayerData)
      qualifiedName:
        CSharp: MinecaRTS.Player.Player(MinecaRTS.PlayerData)
        VB: MinecaRTS.Player.Player(MinecaRTS.PlayerData)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Player.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Bots/Player.cs
        startLine: 24
      syntax:
        content:
          CSharp: public Player(PlayerData data)
          VB: Public Sub New(data As PlayerData)
        parameters:
        - id: data
          type: MinecaRTS.PlayerData
      overload: MinecaRTS.Player.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Player.HandleInput
      commentId: M:MinecaRTS.Player.HandleInput
      language: CSharp
      name:
        CSharp: HandleInput()
        VB: HandleInput()
      nameWithType:
        CSharp: Player.HandleInput()
        VB: Player.HandleInput()
      qualifiedName:
        CSharp: MinecaRTS.Player.HandleInput()
        VB: MinecaRTS.Player.HandleInput()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Player.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleInput
        path: MinecaRTS/Bots/Player.cs
        startLine: 31
      syntax:
        content:
          CSharp: public abstract void HandleInput()
          VB: Public MustOverride Sub HandleInput
      overload: MinecaRTS.Player.HandleInput*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.Player.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.Player.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: Player.HandleMessage(Message)
        VB: Player.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.Player.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.Player.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Player.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Bots/Player.cs
        startLine: 32
      syntax:
        content:
          CSharp: public abstract void HandleMessage(Message message)
          VB: Public MustOverride Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.Player.HandleMessage*
      implements:
      - MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.Player.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Player.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: Player.Render(SpriteBatch)
        VB: Player.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Player.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Player.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/Player.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Bots/Player.cs
        startLine: 33
      syntax:
        content:
          CSharp: public abstract void Render(SpriteBatch spriteBatch)
          VB: Public MustOverride Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Player.Render*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: MinecaRTS.MinecartO
    commentId: T:MinecaRTS.MinecartO
    language: CSharp
    name:
      CSharp: MinecartO
      VB: MinecartO
    nameWithType:
      CSharp: MinecartO
      VB: MinecartO
    qualifiedName:
      CSharp: MinecaRTS.MinecartO
      VB: MinecaRTS.MinecartO
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Bots/MinecartO.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: MinecartO
      path: MinecaRTS/Bots/MinecartO.cs
      startLine: 9
    syntax:
      content:
        CSharp: 'public class MinecartO : Bot, IHandleMessages'
        VB: >-
          Public Class MinecartO

              Inherits Bot

              Implements IHandleMessages
    inheritance:
    - System.Object
    - MinecaRTS.Player
    - MinecaRTS.Bot
    implements:
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.Bot.HandleMessage(MinecaRTS.Message)
    - MinecaRTS.Bot.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Player.ID
    - MinecaRTS.Player.Data
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.MinecartO.#ctor(MinecaRTS.PlayerData)
      commentId: M:MinecaRTS.MinecartO.#ctor(MinecaRTS.PlayerData)
      language: CSharp
      name:
        CSharp: MinecartO(PlayerData)
        VB: MinecartO(PlayerData)
      nameWithType:
        CSharp: MinecartO.MinecartO(PlayerData)
        VB: MinecartO.MinecartO(PlayerData)
      qualifiedName:
        CSharp: MinecaRTS.MinecartO.MinecartO(MinecaRTS.PlayerData)
        VB: MinecaRTS.MinecartO.MinecartO(MinecaRTS.PlayerData)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/MinecartO.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Bots/MinecartO.cs
        startLine: 13
      syntax:
        content:
          CSharp: public MinecartO(PlayerData data)
          VB: Public Sub New(data As PlayerData)
        parameters:
        - id: data
          type: MinecaRTS.PlayerData
      overload: MinecaRTS.MinecartO.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.MinecartO.HandleInput
      commentId: M:MinecaRTS.MinecartO.HandleInput
      language: CSharp
      name:
        CSharp: HandleInput()
        VB: HandleInput()
      nameWithType:
        CSharp: MinecartO.HandleInput()
        VB: MinecartO.HandleInput()
      qualifiedName:
        CSharp: MinecaRTS.MinecartO.HandleInput()
        VB: MinecaRTS.MinecartO.HandleInput()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/MinecartO.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleInput
        path: MinecaRTS/Bots/MinecartO.cs
        startLine: 17
      syntax:
        content:
          CSharp: public override void HandleInput()
          VB: Public Overrides Sub HandleInput
      overload: MinecaRTS.MinecartO.HandleInput*
      overridden: MinecaRTS.Bot.HandleInput
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.MinecartO.OnUnitSpawn(MinecaRTS.Unit)
      commentId: M:MinecaRTS.MinecartO.OnUnitSpawn(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: OnUnitSpawn(Unit)
        VB: OnUnitSpawn(Unit)
      nameWithType:
        CSharp: MinecartO.OnUnitSpawn(Unit)
        VB: MinecartO.OnUnitSpawn(Unit)
      qualifiedName:
        CSharp: MinecaRTS.MinecartO.OnUnitSpawn(MinecaRTS.Unit)
        VB: MinecaRTS.MinecartO.OnUnitSpawn(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/MinecartO.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: OnUnitSpawn
        path: MinecaRTS/Bots/MinecartO.cs
        startLine: 22
      syntax:
        content:
          CSharp: public override void OnUnitSpawn(Unit newUnit)
          VB: Public Overrides Sub OnUnitSpawn(newUnit As Unit)
        parameters:
        - id: newUnit
          type: MinecaRTS.Unit
      overload: MinecaRTS.MinecartO.OnUnitSpawn*
      overridden: MinecaRTS.Bot.OnUnitSpawn(MinecaRTS.Unit)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.MinecartO.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
      commentId: M:MinecaRTS.MinecartO.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
      language: CSharp
      name:
        CSharp: OnProductionBuildingTaskComplete(ProductionBuilding)
        VB: OnProductionBuildingTaskComplete(ProductionBuilding)
      nameWithType:
        CSharp: MinecartO.OnProductionBuildingTaskComplete(ProductionBuilding)
        VB: MinecartO.OnProductionBuildingTaskComplete(ProductionBuilding)
      qualifiedName:
        CSharp: MinecaRTS.MinecartO.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
        VB: MinecaRTS.MinecartO.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/MinecartO.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: OnProductionBuildingTaskComplete
        path: MinecaRTS/Bots/MinecartO.cs
        startLine: 33
      syntax:
        content:
          CSharp: public override void OnProductionBuildingTaskComplete(ProductionBuilding prodBuild)
          VB: Public Overrides Sub OnProductionBuildingTaskComplete(prodBuild As ProductionBuilding)
        parameters:
        - id: prodBuild
          type: MinecaRTS.ProductionBuilding
      overload: MinecaRTS.MinecartO.OnProductionBuildingTaskComplete*
      overridden: MinecaRTS.Bot.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.MinecartO.OnSupplyChange
      commentId: M:MinecaRTS.MinecartO.OnSupplyChange
      language: CSharp
      name:
        CSharp: OnSupplyChange()
        VB: OnSupplyChange()
      nameWithType:
        CSharp: MinecartO.OnSupplyChange()
        VB: MinecartO.OnSupplyChange()
      qualifiedName:
        CSharp: MinecaRTS.MinecartO.OnSupplyChange()
        VB: MinecaRTS.MinecartO.OnSupplyChange()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/MinecartO.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: OnSupplyChange
        path: MinecaRTS/Bots/MinecartO.cs
        startLine: 38
      syntax:
        content:
          CSharp: public override void OnSupplyChange()
          VB: Public Overrides Sub OnSupplyChange
      overload: MinecaRTS.MinecartO.OnSupplyChange*
      overridden: MinecaRTS.Bot.OnSupplyChange
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.MinecartO.OnBuildingComplete(MinecaRTS.Building)
      commentId: M:MinecaRTS.MinecartO.OnBuildingComplete(MinecaRTS.Building)
      language: CSharp
      name:
        CSharp: OnBuildingComplete(Building)
        VB: OnBuildingComplete(Building)
      nameWithType:
        CSharp: MinecartO.OnBuildingComplete(Building)
        VB: MinecartO.OnBuildingComplete(Building)
      qualifiedName:
        CSharp: MinecaRTS.MinecartO.OnBuildingComplete(MinecaRTS.Building)
        VB: MinecaRTS.MinecartO.OnBuildingComplete(MinecaRTS.Building)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/MinecartO.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: OnBuildingComplete
        path: MinecaRTS/Bots/MinecartO.cs
        startLine: 54
      syntax:
        content:
          CSharp: public override void OnBuildingComplete(Building building)
          VB: Public Overrides Sub OnBuildingComplete(building As Building)
        parameters:
        - id: building
          type: MinecaRTS.Building
      overload: MinecaRTS.MinecartO.OnBuildingComplete*
      overridden: MinecaRTS.Bot.OnBuildingComplete(MinecaRTS.Building)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: MinecaRTS.Button
    commentId: T:MinecaRTS.Button
    language: CSharp
    name:
      CSharp: Button
      VB: Button
    nameWithType:
      CSharp: Button
      VB: Button
    qualifiedName:
      CSharp: MinecaRTS.Button
      VB: MinecaRTS.Button
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Render/Button.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Button
      path: MinecaRTS/Render/Button.cs
      startLine: 11
    syntax:
      content:
        CSharp: public class Button
        VB: Public Class Button
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Button.parentPanel
      commentId: F:MinecaRTS.Button.parentPanel
      language: CSharp
      name:
        CSharp: parentPanel
        VB: parentPanel
      nameWithType:
        CSharp: Button.parentPanel
        VB: Button.parentPanel
      qualifiedName:
        CSharp: MinecaRTS.Button.parentPanel
        VB: MinecaRTS.Button.parentPanel
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Button.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: parentPanel
        path: MinecaRTS/Render/Button.cs
        startLine: 16
      syntax:
        content:
          CSharp: public Panel parentPanel
          VB: Public parentPanel As Panel
        return:
          type: MinecaRTS.Panel
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Button.Name
      commentId: P:MinecaRTS.Button.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Button.Name
        VB: Button.Name
      qualifiedName:
        CSharp: MinecaRTS.Button.Name
        VB: MinecaRTS.Button.Name
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Button.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Name
        path: MinecaRTS/Render/Button.cs
        startLine: 18
      syntax:
        content:
          CSharp: public string Name { get; }
          VB: Public ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: MinecaRTS.Button.Name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Button.RenderRect
      commentId: P:MinecaRTS.Button.RenderRect
      language: CSharp
      name:
        CSharp: RenderRect
        VB: RenderRect
      nameWithType:
        CSharp: Button.RenderRect
        VB: Button.RenderRect
      qualifiedName:
        CSharp: MinecaRTS.Button.RenderRect
        VB: MinecaRTS.Button.RenderRect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Button.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderRect
        path: MinecaRTS/Render/Button.cs
        startLine: 23
      syntax:
        content:
          CSharp: public Rectangle RenderRect { get; }
          VB: Public ReadOnly Property RenderRect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Button.RenderRect*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Button.#ctor(System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MinecaRTS.Panel)
      commentId: M:MinecaRTS.Button.#ctor(System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MinecaRTS.Panel)
      language: CSharp
      name:
        CSharp: Button(String, Vector2, Vector2, Panel)
        VB: Button(String, Vector2, Vector2, Panel)
      nameWithType:
        CSharp: Button.Button(String, Vector2, Vector2, Panel)
        VB: Button.Button(String, Vector2, Vector2, Panel)
      qualifiedName:
        CSharp: MinecaRTS.Button.Button(System.String, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MinecaRTS.Panel)
        VB: MinecaRTS.Button.Button(System.String, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MinecaRTS.Panel)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Button.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Render/Button.cs
        startLine: 31
      syntax:
        content:
          CSharp: public Button(string name, Vector2 pos, Vector2 scale, Panel panel)
          VB: Public Sub New(name As String, pos As Vector2, scale As Vector2, panel As Panel)
        parameters:
        - id: name
          type: System.String
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: scale
          type: Microsoft.Xna.Framework.Vector2
        - id: panel
          type: MinecaRTS.Panel
      overload: MinecaRTS.Button.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Button.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Button.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: Button.Render(SpriteBatch)
        VB: Button.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Button.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Button.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Button.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Render/Button.cs
        startLine: 39
      syntax:
        content:
          CSharp: public void Render(SpriteBatch spriteBatch)
          VB: Public Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Button.Render*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.DepositBox
    commentId: T:MinecaRTS.DepositBox
    language: CSharp
    name:
      CSharp: DepositBox
      VB: DepositBox
    nameWithType:
      CSharp: DepositBox
      VB: DepositBox
    qualifiedName:
      CSharp: MinecaRTS.DepositBox
      VB: MinecaRTS.DepositBox
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Buildings/DepositBox.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: DepositBox
      path: MinecaRTS/Entities/Buildings/DepositBox.cs
      startLine: 10
    syntax:
      content:
        CSharp: 'public class DepositBox : Building, IRenderable, IHandleMessages, ICanAcceptResources'
        VB: >-
          Public Class DepositBox

              Inherits Building

              Implements IRenderable, IHandleMessages, ICanAcceptResources
    inheritance:
    - System.Object
    - MinecaRTS.Entity
    - MinecaRTS.Building
    implements:
    - MinecaRTS.IRenderable
    - MinecaRTS.IHandleMessages
    - MinecaRTS.ICanAcceptResources
    inheritedMembers:
    - MinecaRTS.Building.ActiveTexture
    - MinecaRTS.Building.IsActive
    - MinecaRTS.Building.Team
    - MinecaRTS.Building.Construct
    - MinecaRTS.Building.Update
    - MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32)
    - MinecaRTS.Building.ExitState
    - MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Entity.Pos
    - MinecaRTS.Entity.Scale
    - MinecaRTS.Entity.ID
    - MinecaRTS.Entity.RenderPos
    - MinecaRTS.Entity.CollisionRect
    - MinecaRTS.Entity.RenderRect
    - MinecaRTS.Entity.Mid
    - MinecaRTS.Entity.RenderMid
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.DepositBox.MAX_HEALTH
      commentId: F:MinecaRTS.DepositBox.MAX_HEALTH
      language: CSharp
      name:
        CSharp: MAX_HEALTH
        VB: MAX_HEALTH
      nameWithType:
        CSharp: DepositBox.MAX_HEALTH
        VB: DepositBox.MAX_HEALTH
      qualifiedName:
        CSharp: MinecaRTS.DepositBox.MAX_HEALTH
        VB: MinecaRTS.DepositBox.MAX_HEALTH
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/DepositBox.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MAX_HEALTH
        path: MinecaRTS/Entities/Buildings/DepositBox.cs
        startLine: 12
      syntax:
        content:
          CSharp: public const int MAX_HEALTH = 100
          VB: Public Const MAX_HEALTH As Integer = 100
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.DepositBox.ACTIVE_TEXTURE
      commentId: F:MinecaRTS.DepositBox.ACTIVE_TEXTURE
      language: CSharp
      name:
        CSharp: ACTIVE_TEXTURE
        VB: ACTIVE_TEXTURE
      nameWithType:
        CSharp: DepositBox.ACTIVE_TEXTURE
        VB: DepositBox.ACTIVE_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.DepositBox.ACTIVE_TEXTURE
        VB: MinecaRTS.DepositBox.ACTIVE_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/DepositBox.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ACTIVE_TEXTURE
        path: MinecaRTS/Entities/Buildings/DepositBox.cs
        startLine: 13
      syntax:
        content:
          CSharp: public static Texture2D ACTIVE_TEXTURE
          VB: Public Shared ACTIVE_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.DepositBox.CONSTRUCTION_TEXTURE
      commentId: F:MinecaRTS.DepositBox.CONSTRUCTION_TEXTURE
      language: CSharp
      name:
        CSharp: CONSTRUCTION_TEXTURE
        VB: CONSTRUCTION_TEXTURE
      nameWithType:
        CSharp: DepositBox.CONSTRUCTION_TEXTURE
        VB: DepositBox.CONSTRUCTION_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.DepositBox.CONSTRUCTION_TEXTURE
        VB: MinecaRTS.DepositBox.CONSTRUCTION_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/DepositBox.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CONSTRUCTION_TEXTURE
        path: MinecaRTS/Entities/Buildings/DepositBox.cs
        startLine: 14
      syntax:
        content:
          CSharp: public static Texture2D CONSTRUCTION_TEXTURE
          VB: Public Shared CONSTRUCTION_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.DepositBox.Wood
      commentId: P:MinecaRTS.DepositBox.Wood
      language: CSharp
      name:
        CSharp: Wood
        VB: Wood
      nameWithType:
        CSharp: DepositBox.Wood
        VB: DepositBox.Wood
      qualifiedName:
        CSharp: MinecaRTS.DepositBox.Wood
        VB: MinecaRTS.DepositBox.Wood
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/DepositBox.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Wood
        path: MinecaRTS/Entities/Buildings/DepositBox.cs
        startLine: 19
      syntax:
        content:
          CSharp: public uint Wood { get; }
          VB: Public ReadOnly Property Wood As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: MinecaRTS.DepositBox.Wood*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.DepositBox.Stone
      commentId: P:MinecaRTS.DepositBox.Stone
      language: CSharp
      name:
        CSharp: Stone
        VB: Stone
      nameWithType:
        CSharp: DepositBox.Stone
        VB: DepositBox.Stone
      qualifiedName:
        CSharp: MinecaRTS.DepositBox.Stone
        VB: MinecaRTS.DepositBox.Stone
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/DepositBox.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Stone
        path: MinecaRTS/Entities/Buildings/DepositBox.cs
        startLine: 24
      syntax:
        content:
          CSharp: public uint Stone { get; }
          VB: Public ReadOnly Property Stone As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: MinecaRTS.DepositBox.Stone*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.DepositBox.#ctor(Microsoft.Xna.Framework.Vector2,MinecaRTS.Team)
      commentId: M:MinecaRTS.DepositBox.#ctor(Microsoft.Xna.Framework.Vector2,MinecaRTS.Team)
      language: CSharp
      name:
        CSharp: DepositBox(Vector2, Team)
        VB: DepositBox(Vector2, Team)
      nameWithType:
        CSharp: DepositBox.DepositBox(Vector2, Team)
        VB: DepositBox.DepositBox(Vector2, Team)
      qualifiedName:
        CSharp: MinecaRTS.DepositBox.DepositBox(Microsoft.Xna.Framework.Vector2, MinecaRTS.Team)
        VB: MinecaRTS.DepositBox.DepositBox(Microsoft.Xna.Framework.Vector2, MinecaRTS.Team)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/DepositBox.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Entities/Buildings/DepositBox.cs
        startLine: 29
      syntax:
        content:
          CSharp: public DepositBox(Vector2 pos, Team team)
          VB: Public Sub New(pos As Vector2, team As Team)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: team
          type: MinecaRTS.Team
      overload: MinecaRTS.DepositBox.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.DepositBox.AcceptResources(System.UInt32,System.UInt32)
      commentId: M:MinecaRTS.DepositBox.AcceptResources(System.UInt32,System.UInt32)
      language: CSharp
      name:
        CSharp: AcceptResources(UInt32, UInt32)
        VB: AcceptResources(UInt32, UInt32)
      nameWithType:
        CSharp: DepositBox.AcceptResources(UInt32, UInt32)
        VB: DepositBox.AcceptResources(UInt32, UInt32)
      qualifiedName:
        CSharp: MinecaRTS.DepositBox.AcceptResources(System.UInt32, System.UInt32)
        VB: MinecaRTS.DepositBox.AcceptResources(System.UInt32, System.UInt32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/DepositBox.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AcceptResources
        path: MinecaRTS/Entities/Buildings/DepositBox.cs
        startLine: 33
      syntax:
        content:
          CSharp: public void AcceptResources(uint woodAmount, uint stoneAmount)
          VB: Public Sub AcceptResources(woodAmount As UInteger, stoneAmount As UInteger)
        parameters:
        - id: woodAmount
          type: System.UInt32
        - id: stoneAmount
          type: System.UInt32
      overload: MinecaRTS.DepositBox.AcceptResources*
      implements:
      - MinecaRTS.ICanAcceptResources.AcceptResources(System.UInt32,System.UInt32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.DepositBox.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.DepositBox.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: DepositBox.HandleMessage(Message)
        VB: DepositBox.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.DepositBox.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.DepositBox.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/DepositBox.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Entities/Buildings/DepositBox.cs
        startLine: 39
      syntax:
        content:
          CSharp: public override void HandleMessage(Message message)
          VB: Public Overrides Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.DepositBox.HandleMessage*
      overridden: MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: MinecaRTS.IHandleMessages
    commentId: T:MinecaRTS.IHandleMessages
    language: CSharp
    name:
      CSharp: IHandleMessages
      VB: IHandleMessages
    nameWithType:
      CSharp: IHandleMessages
      VB: IHandleMessages
    qualifiedName:
      CSharp: MinecaRTS.IHandleMessages
      VB: MinecaRTS.IHandleMessages
    type: Interface
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Messaging/IHandleMessages.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: IHandleMessages
      path: MinecaRTS/Messaging/IHandleMessages.cs
      startLine: 8
    syntax:
      content:
        CSharp: public interface IHandleMessages
        VB: Public Interface IHandleMessages
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: MinecaRTS.IHandleMessages.ID
      commentId: P:MinecaRTS.IHandleMessages.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: IHandleMessages.ID
        VB: IHandleMessages.ID
      qualifiedName:
        CSharp: MinecaRTS.IHandleMessages.ID
        VB: MinecaRTS.IHandleMessages.ID
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/IHandleMessages.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ID
        path: MinecaRTS/Messaging/IHandleMessages.cs
        startLine: 10
      syntax:
        content:
          CSharp: ulong ID { get; }
          VB: ReadOnly Property ID As ULong
        parameters: []
        return:
          type: System.UInt64
      overload: MinecaRTS.IHandleMessages.ID*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: IHandleMessages.HandleMessage(Message)
        VB: IHandleMessages.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/IHandleMessages.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Messaging/IHandleMessages.cs
        startLine: 15
      syntax:
        content:
          CSharp: void HandleMessage(Message message)
          VB: Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.IHandleMessages.HandleMessage*
      modifiers:
        CSharp: []
        VB: []
  - id: MinecaRTS.Minecart
    commentId: T:MinecaRTS.Minecart
    language: CSharp
    name:
      CSharp: Minecart
      VB: Minecart
    nameWithType:
      CSharp: Minecart
      VB: Minecart
    qualifiedName:
      CSharp: MinecaRTS.Minecart
      VB: MinecaRTS.Minecart
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Units/Minecart.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Minecart
      path: MinecaRTS/Entities/Units/Minecart.cs
      startLine: 11
    syntax:
      content:
        CSharp: 'public class Minecart : Unit, IRenderable, IHandleMessages'
        VB: >-
          Public Class Minecart

              Inherits Unit

              Implements IRenderable, IHandleMessages
    inheritance:
    - System.Object
    - MinecaRTS.Entity
    - MinecaRTS.Unit
    implements:
    - MinecaRTS.IRenderable
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.Unit.NEIGHBOUR_RADIUS
    - MinecaRTS.Unit.lastHeading
    - MinecaRTS.Unit.heading
    - MinecaRTS.Unit.Speed
    - MinecaRTS.Unit.Team
    - MinecaRTS.Unit.Vel
    - MinecaRTS.Unit.pathHandler
    - MinecaRTS.Unit.lastMid
    - MinecaRTS.Unit.Data
    - MinecaRTS.Unit.Steering
    - MinecaRTS.Unit.animation
    - MinecaRTS.Unit.FollowPath
    - MinecaRTS.Unit.Stop
    - MinecaRTS.Unit.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Unit.HandleMessage(MinecaRTS.Message)
    - MinecaRTS.Entity.Pos
    - MinecaRTS.Entity.Scale
    - MinecaRTS.Entity.ID
    - MinecaRTS.Entity.RenderPos
    - MinecaRTS.Entity.CollisionRect
    - MinecaRTS.Entity.RenderRect
    - MinecaRTS.Entity.Mid
    - MinecaRTS.Entity.RenderMid
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Minecart.emptySS
      commentId: F:MinecaRTS.Minecart.emptySS
      language: CSharp
      name:
        CSharp: emptySS
        VB: emptySS
      nameWithType:
        CSharp: Minecart.emptySS
        VB: Minecart.emptySS
      qualifiedName:
        CSharp: MinecaRTS.Minecart.emptySS
        VB: MinecaRTS.Minecart.emptySS
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: emptySS
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 13
      syntax:
        content:
          CSharp: public static SpriteSheet emptySS
          VB: Public Shared emptySS As SpriteSheet
        return:
          type: MinecaRTS.SpriteSheet
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Minecart.emptyAnimFrames
      commentId: F:MinecaRTS.Minecart.emptyAnimFrames
      language: CSharp
      name:
        CSharp: emptyAnimFrames
        VB: emptyAnimFrames
      nameWithType:
        CSharp: Minecart.emptyAnimFrames
        VB: Minecart.emptyAnimFrames
      qualifiedName:
        CSharp: MinecaRTS.Minecart.emptyAnimFrames
        VB: MinecaRTS.Minecart.emptyAnimFrames
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: emptyAnimFrames
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 15
      syntax:
        content:
          CSharp: public static Dictionary<Dir, List<Frame>> emptyAnimFrames
          VB: Public Shared emptyAnimFrames As Dictionary(Of Dir, List(Of Frame))
        return:
          type: System.Collections.Generic.Dictionary{MinecaRTS.Dir,System.Collections.Generic.List{MinecaRTS.Frame}}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Minecart.BASE_SPEED
      commentId: F:MinecaRTS.Minecart.BASE_SPEED
      language: CSharp
      name:
        CSharp: BASE_SPEED
        VB: BASE_SPEED
      nameWithType:
        CSharp: Minecart.BASE_SPEED
        VB: Minecart.BASE_SPEED
      qualifiedName:
        CSharp: MinecaRTS.Minecart.BASE_SPEED
        VB: MinecaRTS.Minecart.BASE_SPEED
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: BASE_SPEED
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 17
      syntax:
        content:
          CSharp: public const float BASE_SPEED = 0.8F
          VB: Public Const BASE_SPEED As Single = 0.8F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Minecart.TRACK_SPEED
      commentId: F:MinecaRTS.Minecart.TRACK_SPEED
      language: CSharp
      name:
        CSharp: TRACK_SPEED
        VB: TRACK_SPEED
      nameWithType:
        CSharp: Minecart.TRACK_SPEED
        VB: Minecart.TRACK_SPEED
      qualifiedName:
        CSharp: MinecaRTS.Minecart.TRACK_SPEED
        VB: MinecaRTS.Minecart.TRACK_SPEED
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TRACK_SPEED
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 18
      syntax:
        content:
          CSharp: public const float TRACK_SPEED = 7F
          VB: Public Const TRACK_SPEED As Single = 7F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Minecart.TargetDepositBox
      commentId: F:MinecaRTS.Minecart.TargetDepositBox
      language: CSharp
      name:
        CSharp: TargetDepositBox
        VB: TargetDepositBox
      nameWithType:
        CSharp: Minecart.TargetDepositBox
        VB: Minecart.TargetDepositBox
      qualifiedName:
        CSharp: MinecaRTS.Minecart.TargetDepositBox
        VB: MinecaRTS.Minecart.TargetDepositBox
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TargetDepositBox
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 20
      syntax:
        content:
          CSharp: public DepositBox TargetDepositBox
          VB: Public TargetDepositBox As DepositBox
        return:
          type: MinecaRTS.DepositBox
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Minecart.TargetTownHall
      commentId: F:MinecaRTS.Minecart.TargetTownHall
      language: CSharp
      name:
        CSharp: TargetTownHall
        VB: TargetTownHall
      nameWithType:
        CSharp: Minecart.TargetTownHall
        VB: Minecart.TargetTownHall
      qualifiedName:
        CSharp: MinecaRTS.Minecart.TargetTownHall
        VB: MinecaRTS.Minecart.TargetTownHall
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TargetTownHall
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 21
      syntax:
        content:
          CSharp: public TownHall TargetTownHall
          VB: Public TargetTownHall As TownHall
        return:
          type: MinecaRTS.TownHall
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Minecart.Wood
      commentId: P:MinecaRTS.Minecart.Wood
      language: CSharp
      name:
        CSharp: Wood
        VB: Wood
      nameWithType:
        CSharp: Minecart.Wood
        VB: Minecart.Wood
      qualifiedName:
        CSharp: MinecaRTS.Minecart.Wood
        VB: MinecaRTS.Minecart.Wood
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Wood
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 26
      syntax:
        content:
          CSharp: public uint Wood { get; }
          VB: Public ReadOnly Property Wood As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: MinecaRTS.Minecart.Wood*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Minecart.Stone
      commentId: P:MinecaRTS.Minecart.Stone
      language: CSharp
      name:
        CSharp: Stone
        VB: Stone
      nameWithType:
        CSharp: Minecart.Stone
        VB: Minecart.Stone
      qualifiedName:
        CSharp: MinecaRTS.Minecart.Stone
        VB: MinecaRTS.Minecart.Stone
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Stone
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 31
      syntax:
        content:
          CSharp: public uint Stone { get; }
          VB: Public ReadOnly Property Stone As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: MinecaRTS.Minecart.Stone*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Minecart.FSM
      commentId: P:MinecaRTS.Minecart.FSM
      language: CSharp
      name:
        CSharp: FSM
        VB: FSM
      nameWithType:
        CSharp: Minecart.FSM
        VB: Minecart.FSM
      qualifiedName:
        CSharp: MinecaRTS.Minecart.FSM
        VB: MinecaRTS.Minecart.FSM
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: FSM
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 38
      syntax:
        content:
          CSharp: public StateMachine<Minecart> FSM { get; }
          VB: Public ReadOnly Property FSM As StateMachine(Of Minecart)
        parameters: []
        return:
          type: MinecaRTS.StateMachine{MinecaRTS.Minecart}
      overload: MinecaRTS.Minecart.FSM*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Minecart.#ctor(MinecaRTS.PlayerData,MinecaRTS.Team,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Minecart.#ctor(MinecaRTS.PlayerData,MinecaRTS.Team,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: Minecart(PlayerData, Team, Vector2, Vector2)
        VB: Minecart(PlayerData, Team, Vector2, Vector2)
      nameWithType:
        CSharp: Minecart.Minecart(PlayerData, Team, Vector2, Vector2)
        VB: Minecart.Minecart(PlayerData, Team, Vector2, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Minecart.Minecart(MinecaRTS.PlayerData, MinecaRTS.Team, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Minecart.Minecart(MinecaRTS.PlayerData, MinecaRTS.Team, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 43
      syntax:
        content:
          CSharp: public Minecart(PlayerData data, Team team, Vector2 pos, Vector2 scale)
          VB: Public Sub New(data As PlayerData, team As Team, pos As Vector2, scale As Vector2)
        parameters:
        - id: data
          type: MinecaRTS.PlayerData
        - id: team
          type: MinecaRTS.Team
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: scale
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Minecart.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Minecart.Update
      commentId: M:MinecaRTS.Minecart.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Minecart.Update()
        VB: Minecart.Update()
      qualifiedName:
        CSharp: MinecaRTS.Minecart.Update()
        VB: MinecaRTS.Minecart.Update()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 52
      syntax:
        content:
          CSharp: public override void Update()
          VB: Public Overrides Sub Update
      overload: MinecaRTS.Minecart.Update*
      overridden: MinecaRTS.Unit.Update
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Minecart.EmptySelf
      commentId: M:MinecaRTS.Minecart.EmptySelf
      language: CSharp
      name:
        CSharp: EmptySelf()
        VB: EmptySelf()
      nameWithType:
        CSharp: Minecart.EmptySelf()
        VB: Minecart.EmptySelf()
      qualifiedName:
        CSharp: MinecaRTS.Minecart.EmptySelf()
        VB: MinecaRTS.Minecart.EmptySelf()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: EmptySelf
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 76
      syntax:
        content:
          CSharp: public void EmptySelf()
          VB: Public Sub EmptySelf
      overload: MinecaRTS.Minecart.EmptySelf*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Minecart.MoveTowards(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Minecart.MoveTowards(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: MoveTowards(Vector2)
        VB: MoveTowards(Vector2)
      nameWithType:
        CSharp: Minecart.MoveTowards(Vector2)
        VB: Minecart.MoveTowards(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Minecart.MoveTowards(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Minecart.MoveTowards(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MoveTowards
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 82
      syntax:
        content:
          CSharp: public override void MoveTowards(Vector2 pos)
          VB: Public Overrides Sub MoveTowards(pos As Vector2)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Minecart.MoveTowards*
      overridden: MinecaRTS.Unit.MoveTowards(Microsoft.Xna.Framework.Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Minecart.AcceptResources(System.UInt32,System.UInt32)
      commentId: M:MinecaRTS.Minecart.AcceptResources(System.UInt32,System.UInt32)
      language: CSharp
      name:
        CSharp: AcceptResources(UInt32, UInt32)
        VB: AcceptResources(UInt32, UInt32)
      nameWithType:
        CSharp: Minecart.AcceptResources(UInt32, UInt32)
        VB: Minecart.AcceptResources(UInt32, UInt32)
      qualifiedName:
        CSharp: MinecaRTS.Minecart.AcceptResources(System.UInt32, System.UInt32)
        VB: MinecaRTS.Minecart.AcceptResources(System.UInt32, System.UInt32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AcceptResources
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 108
      syntax:
        content:
          CSharp: public void AcceptResources(uint woodAmount, uint stoneAmount)
          VB: Public Sub AcceptResources(woodAmount As UInteger, stoneAmount As UInteger)
        parameters:
        - id: woodAmount
          type: System.UInt32
        - id: stoneAmount
          type: System.UInt32
      overload: MinecaRTS.Minecart.AcceptResources*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Minecart.ExitState
      commentId: M:MinecaRTS.Minecart.ExitState
      language: CSharp
      name:
        CSharp: ExitState()
        VB: ExitState()
      nameWithType:
        CSharp: Minecart.ExitState()
        VB: Minecart.ExitState()
      qualifiedName:
        CSharp: MinecaRTS.Minecart.ExitState()
        VB: MinecaRTS.Minecart.ExitState()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ExitState
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 114
      syntax:
        content:
          CSharp: public override void ExitState()
          VB: Public Overrides Sub ExitState
      overload: MinecaRTS.Minecart.ExitState*
      overridden: MinecaRTS.Unit.ExitState
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Minecart.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Minecart.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderDebug(SpriteBatch)
        VB: RenderDebug(SpriteBatch)
      nameWithType:
        CSharp: Minecart.RenderDebug(SpriteBatch)
        VB: Minecart.RenderDebug(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Minecart.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Minecart.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Minecart.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderDebug
        path: MinecaRTS/Entities/Units/Minecart.cs
        startLine: 119
      syntax:
        content:
          CSharp: public override void RenderDebug(SpriteBatch spriteBatch)
          VB: Public Overrides Sub RenderDebug(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Minecart.RenderDebug*
      overridden: MinecaRTS.Unit.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: MinecaRTS.MinecartPathHandler
    commentId: T:MinecaRTS.MinecartPathHandler
    language: CSharp
    name:
      CSharp: MinecartPathHandler
      VB: MinecartPathHandler
    nameWithType:
      CSharp: MinecartPathHandler
      VB: MinecartPathHandler
    qualifiedName:
      CSharp: MinecaRTS.MinecartPathHandler
      VB: MinecaRTS.MinecartPathHandler
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Pathing/MinecartPathHandler.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: MinecartPathHandler
      path: MinecaRTS/Pathing/MinecartPathHandler.cs
      startLine: 9
    syntax:
      content:
        CSharp: 'public class MinecartPathHandler : PathHandler, IHandleMessages'
        VB: >-
          Public Class MinecartPathHandler

              Inherits PathHandler

              Implements IHandleMessages
    inheritance:
    - System.Object
    - MinecaRTS.PathHandler
    implements:
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.PathHandler.owner
    - MinecaRTS.PathHandler.Owner
    - MinecaRTS.PathHandler.buildingPathingTowards
    - MinecaRTS.PathHandler.ID
    - MinecaRTS.PathHandler.pathfinder
    - MinecaRTS.PathHandler.grid
    - MinecaRTS.PathHandler.path
    - MinecaRTS.PathHandler.pathIndex
    - MinecaRTS.PathHandler.estimatedTicksToReachNextCell
    - MinecaRTS.PathHandler.ticksSpentTravellingToCell
    - MinecaRTS.PathHandler.HasPath
    - MinecaRTS.PathHandler.TargetCell
    - MinecaRTS.PathHandler.Update
    - MinecaRTS.PathHandler.GetEstimatedTicksToReachCell(MinecaRTS.Cell)
    - MinecaRTS.PathHandler.FinalisePath
    - MinecaRTS.PathHandler.RenderPath(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.PathHandler.TrackScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
    - MinecaRTS.PathHandler.ConsiderationConditionWood(MinecaRTS.Cell)
    - MinecaRTS.PathHandler.ConsiderationConditionStone(MinecaRTS.Cell)
    - MinecaRTS.PathHandler.TerminationConditionWood(MinecaRTS.Cell)
    - MinecaRTS.PathHandler.TerminationConditionStone(MinecaRTS.Cell)
    - MinecaRTS.PathHandler.TerminationConditionFindTrack(MinecaRTS.Cell)
    - MinecaRTS.PathHandler.GreedyConsiderationCondition(MinecaRTS.Cell)
    - MinecaRTS.PathHandler.GreedyTerminationCondition(MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell})
    - MinecaRTS.PathHandler.GreedyScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.MinecartPathHandler.#ctor(MinecaRTS.Unit,MinecaRTS.Grid)
      commentId: M:MinecaRTS.MinecartPathHandler.#ctor(MinecaRTS.Unit,MinecaRTS.Grid)
      language: CSharp
      name:
        CSharp: MinecartPathHandler(Unit, Grid)
        VB: MinecartPathHandler(Unit, Grid)
      nameWithType:
        CSharp: MinecartPathHandler.MinecartPathHandler(Unit, Grid)
        VB: MinecartPathHandler.MinecartPathHandler(Unit, Grid)
      qualifiedName:
        CSharp: MinecaRTS.MinecartPathHandler.MinecartPathHandler(MinecaRTS.Unit, MinecaRTS.Grid)
        VB: MinecaRTS.MinecartPathHandler.MinecartPathHandler(MinecaRTS.Unit, MinecaRTS.Grid)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/MinecartPathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Pathing/MinecartPathHandler.cs
        startLine: 13
      syntax:
        content:
          CSharp: public MinecartPathHandler(Unit owner, Grid grid)
          VB: Public Sub New(owner As Unit, grid As Grid)
        parameters:
        - id: owner
          type: MinecaRTS.Unit
        - id: grid
          type: MinecaRTS.Grid
      overload: MinecaRTS.MinecartPathHandler.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.MinecartPathHandler.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.MinecartPathHandler.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: MinecartPathHandler.HandleMessage(Message)
        VB: MinecartPathHandler.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.MinecartPathHandler.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.MinecartPathHandler.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/MinecartPathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Pathing/MinecartPathHandler.cs
        startLine: 17
      syntax:
        content:
          CSharp: public override void HandleMessage(Message message)
          VB: Public Overrides Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.MinecartPathHandler.HandleMessage*
      overridden: MinecaRTS.PathHandler.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.MinecartPathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.MinecartPathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: GetPathTo(Vector2)
        VB: GetPathTo(Vector2)
      nameWithType:
        CSharp: MinecartPathHandler.GetPathTo(Vector2)
        VB: MinecartPathHandler.GetPathTo(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.MinecartPathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.MinecartPathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/MinecartPathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetPathTo
        path: MinecaRTS/Pathing/MinecartPathHandler.cs
        startLine: 39
      syntax:
        content:
          CSharp: public override void GetPathTo(Vector2 targetPos)
          VB: Public Overrides Sub GetPathTo(targetPos As Vector2)
        parameters:
        - id: targetPos
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.MinecartPathHandler.GetPathTo*
      overridden: MinecaRTS.PathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.MinecartPathHandler.GetPathToPosFollowingTracks(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.MinecartPathHandler.GetPathToPosFollowingTracks(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: GetPathToPosFollowingTracks(Vector2)
        VB: GetPathToPosFollowingTracks(Vector2)
      nameWithType:
        CSharp: MinecartPathHandler.GetPathToPosFollowingTracks(Vector2)
        VB: MinecartPathHandler.GetPathToPosFollowingTracks(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.MinecartPathHandler.GetPathToPosFollowingTracks(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.MinecartPathHandler.GetPathToPosFollowingTracks(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/MinecartPathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetPathToPosFollowingTracks
        path: MinecaRTS/Pathing/MinecartPathHandler.cs
        startLine: 51
      syntax:
        content:
          CSharp: public void GetPathToPosFollowingTracks(Vector2 targetPos)
          VB: Public Sub GetPathToPosFollowingTracks(targetPos As Vector2)
        parameters:
        - id: targetPos
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.MinecartPathHandler.GetPathToPosFollowingTracks*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.MinecartPathHandler.GetPathToBuildingFollowingTracks(MinecaRTS.Building)
      commentId: M:MinecaRTS.MinecartPathHandler.GetPathToBuildingFollowingTracks(MinecaRTS.Building)
      language: CSharp
      name:
        CSharp: GetPathToBuildingFollowingTracks(Building)
        VB: GetPathToBuildingFollowingTracks(Building)
      nameWithType:
        CSharp: MinecartPathHandler.GetPathToBuildingFollowingTracks(Building)
        VB: MinecartPathHandler.GetPathToBuildingFollowingTracks(Building)
      qualifiedName:
        CSharp: MinecaRTS.MinecartPathHandler.GetPathToBuildingFollowingTracks(MinecaRTS.Building)
        VB: MinecaRTS.MinecartPathHandler.GetPathToBuildingFollowingTracks(MinecaRTS.Building)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/MinecartPathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetPathToBuildingFollowingTracks
        path: MinecaRTS/Pathing/MinecartPathHandler.cs
        startLine: 77
      syntax:
        content:
          CSharp: public void GetPathToBuildingFollowingTracks(Building building)
          VB: Public Sub GetPathToBuildingFollowingTracks(building As Building)
        parameters:
        - id: building
          type: MinecaRTS.Building
      overload: MinecaRTS.MinecartPathHandler.GetPathToBuildingFollowingTracks*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.Panel
    commentId: T:MinecaRTS.Panel
    language: CSharp
    name:
      CSharp: Panel
      VB: Panel
    nameWithType:
      CSharp: Panel
      VB: Panel
    qualifiedName:
      CSharp: MinecaRTS.Panel
      VB: MinecaRTS.Panel
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Render/Panel.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Panel
      path: MinecaRTS/Render/Panel.cs
      startLine: 15
    summary: "\nRepresents a UI element containing a collection of buttons.\nKnows the locations of each of its buttons.\n"
    example: []
    syntax:
      content:
        CSharp: public class Panel
        VB: Public Class Panel
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Panel.Pos
      commentId: P:MinecaRTS.Panel.Pos
      language: CSharp
      name:
        CSharp: Pos
        VB: Pos
      nameWithType:
        CSharp: Panel.Pos
        VB: Panel.Pos
      qualifiedName:
        CSharp: MinecaRTS.Panel.Pos
        VB: MinecaRTS.Panel.Pos
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Panel.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Pos
        path: MinecaRTS/Render/Panel.cs
        startLine: 17
      syntax:
        content:
          CSharp: public Vector2 Pos { get; set; }
          VB: Public Property Pos As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Panel.Pos*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MinecaRTS.Panel.Scale
      commentId: P:MinecaRTS.Panel.Scale
      language: CSharp
      name:
        CSharp: Scale
        VB: Scale
      nameWithType:
        CSharp: Panel.Scale
        VB: Panel.Scale
      qualifiedName:
        CSharp: MinecaRTS.Panel.Scale
        VB: MinecaRTS.Panel.Scale
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Panel.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Scale
        path: MinecaRTS/Render/Panel.cs
        startLine: 18
      syntax:
        content:
          CSharp: public Vector2 Scale { get; set; }
          VB: Public Property Scale As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Panel.Scale*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MinecaRTS.Panel.RenderRect
      commentId: P:MinecaRTS.Panel.RenderRect
      language: CSharp
      name:
        CSharp: RenderRect
        VB: RenderRect
      nameWithType:
        CSharp: Panel.RenderRect
        VB: Panel.RenderRect
      qualifiedName:
        CSharp: MinecaRTS.Panel.RenderRect
        VB: MinecaRTS.Panel.RenderRect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Panel.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderRect
        path: MinecaRTS/Render/Panel.cs
        startLine: 23
      syntax:
        content:
          CSharp: public Rectangle RenderRect { get; }
          VB: Public ReadOnly Property RenderRect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Panel.RenderRect*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Panel.#ctor(System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Panel.#ctor(System.String,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: Panel(String, Vector2, Vector2)
        VB: Panel(String, Vector2, Vector2)
      nameWithType:
        CSharp: Panel.Panel(String, Vector2, Vector2)
        VB: Panel.Panel(String, Vector2, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Panel.Panel(System.String, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Panel.Panel(System.String, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Panel.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Render/Panel.cs
        startLine: 31
      syntax:
        content:
          CSharp: public Panel(string name, Vector2 pos, Vector2 scale)
          VB: Public Sub New(name As String, pos As Vector2, scale As Vector2)
        parameters:
        - id: name
          type: System.String
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: scale
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Panel.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Panel.AddButton(MinecaRTS.Button)
      commentId: M:MinecaRTS.Panel.AddButton(MinecaRTS.Button)
      language: CSharp
      name:
        CSharp: AddButton(Button)
        VB: AddButton(Button)
      nameWithType:
        CSharp: Panel.AddButton(Button)
        VB: Panel.AddButton(Button)
      qualifiedName:
        CSharp: MinecaRTS.Panel.AddButton(MinecaRTS.Button)
        VB: MinecaRTS.Panel.AddButton(MinecaRTS.Button)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Panel.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddButton
        path: MinecaRTS/Render/Panel.cs
        startLine: 38
      syntax:
        content:
          CSharp: public void AddButton(Button button)
          VB: Public Sub AddButton(button As Button)
        parameters:
        - id: button
          type: MinecaRTS.Button
      overload: MinecaRTS.Panel.AddButton*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Panel.ButtonAtPos(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Panel.ButtonAtPos(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: ButtonAtPos(Vector2)
        VB: ButtonAtPos(Vector2)
      nameWithType:
        CSharp: Panel.ButtonAtPos(Vector2)
        VB: Panel.ButtonAtPos(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Panel.ButtonAtPos(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Panel.ButtonAtPos(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Panel.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ButtonAtPos
        path: MinecaRTS/Render/Panel.cs
        startLine: 44
      syntax:
        content:
          CSharp: public Button ButtonAtPos(Vector2 pos)
          VB: Public Function ButtonAtPos(pos As Vector2) As Button
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: MinecaRTS.Button
      overload: MinecaRTS.Panel.ButtonAtPos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Panel.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Panel.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: Panel.Render(SpriteBatch)
        VB: Panel.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Panel.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Panel.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Panel.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Render/Panel.cs
        startLine: 55
      syntax:
        content:
          CSharp: public void Render(SpriteBatch spriteBatch)
          VB: Public Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Panel.Render*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.SearchState
    commentId: T:MinecaRTS.SearchState
    language: CSharp
    name:
      CSharp: SearchState
      VB: SearchState
    nameWithType:
      CSharp: SearchState
      VB: SearchState
    qualifiedName:
      CSharp: MinecaRTS.SearchState
      VB: MinecaRTS.SearchState
    type: Enum
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Pathing/SearchState.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: SearchState
      path: MinecaRTS/Pathing/SearchState.cs
      startLine: 8
    syntax:
      content:
        CSharp: public enum SearchState
        VB: Public Enum SearchState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: MinecaRTS.SearchState.Searching
      commentId: F:MinecaRTS.SearchState.Searching
      language: CSharp
      name:
        CSharp: Searching
        VB: Searching
      nameWithType:
        CSharp: SearchState.Searching
        VB: SearchState.Searching
      qualifiedName:
        CSharp: MinecaRTS.SearchState.Searching
        VB: MinecaRTS.SearchState.Searching
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SearchState.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Searching
        path: MinecaRTS/Pathing/SearchState.cs
        startLine: 10
      syntax:
        content:
          CSharp: Searching = 0
          VB: Searching = 0
        return:
          type: MinecaRTS.SearchState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.SearchState.Smoothing
      commentId: F:MinecaRTS.SearchState.Smoothing
      language: CSharp
      name:
        CSharp: Smoothing
        VB: Smoothing
      nameWithType:
        CSharp: SearchState.Smoothing
        VB: SearchState.Smoothing
      qualifiedName:
        CSharp: MinecaRTS.SearchState.Smoothing
        VB: MinecaRTS.SearchState.Smoothing
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SearchState.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Smoothing
        path: MinecaRTS/Pathing/SearchState.cs
        startLine: 11
      syntax:
        content:
          CSharp: Smoothing = 1
          VB: Smoothing = 1
        return:
          type: MinecaRTS.SearchState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.SearchState.Retracing
      commentId: F:MinecaRTS.SearchState.Retracing
      language: CSharp
      name:
        CSharp: Retracing
        VB: Retracing
      nameWithType:
        CSharp: SearchState.Retracing
        VB: SearchState.Retracing
      qualifiedName:
        CSharp: MinecaRTS.SearchState.Retracing
        VB: MinecaRTS.SearchState.Retracing
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SearchState.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Retracing
        path: MinecaRTS/Pathing/SearchState.cs
        startLine: 12
      syntax:
        content:
          CSharp: Retracing = 2
          VB: Retracing = 2
        return:
          type: MinecaRTS.SearchState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.SearchState.Complete
      commentId: F:MinecaRTS.SearchState.Complete
      language: CSharp
      name:
        CSharp: Complete
        VB: Complete
      nameWithType:
        CSharp: SearchState.Complete
        VB: SearchState.Complete
      qualifiedName:
        CSharp: MinecaRTS.SearchState.Complete
        VB: MinecaRTS.SearchState.Complete
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SearchState.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Complete
        path: MinecaRTS/Pathing/SearchState.cs
        startLine: 13
      syntax:
        content:
          CSharp: Complete = 3
          VB: Complete = 3
        return:
          type: MinecaRTS.SearchState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.SearchState.Failed
      commentId: F:MinecaRTS.SearchState.Failed
      language: CSharp
      name:
        CSharp: Failed
        VB: Failed
      nameWithType:
        CSharp: SearchState.Failed
        VB: SearchState.Failed
      qualifiedName:
        CSharp: MinecaRTS.SearchState.Failed
        VB: MinecaRTS.SearchState.Failed
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SearchState.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Failed
        path: MinecaRTS/Pathing/SearchState.cs
        startLine: 14
      syntax:
        content:
          CSharp: Failed = 4
          VB: Failed = 4
        return:
          type: MinecaRTS.SearchState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: MinecaRTS.SearchType
    commentId: T:MinecaRTS.SearchType
    language: CSharp
    name:
      CSharp: SearchType
      VB: SearchType
    nameWithType:
      CSharp: SearchType
      VB: SearchType
    qualifiedName:
      CSharp: MinecaRTS.SearchType
      VB: MinecaRTS.SearchType
    type: Enum
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Pathing/SearchType.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: SearchType
      path: MinecaRTS/Pathing/SearchType.cs
      startLine: 8
    syntax:
      content:
        CSharp: public enum SearchType
        VB: Public Enum SearchType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: MinecaRTS.SearchType.Dijkstra
      commentId: F:MinecaRTS.SearchType.Dijkstra
      language: CSharp
      name:
        CSharp: Dijkstra
        VB: Dijkstra
      nameWithType:
        CSharp: SearchType.Dijkstra
        VB: SearchType.Dijkstra
      qualifiedName:
        CSharp: MinecaRTS.SearchType.Dijkstra
        VB: MinecaRTS.SearchType.Dijkstra
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SearchType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Dijkstra
        path: MinecaRTS/Pathing/SearchType.cs
        startLine: 10
      syntax:
        content:
          CSharp: Dijkstra = 0
          VB: Dijkstra = 0
        return:
          type: MinecaRTS.SearchType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.SearchType.Greedy
      commentId: F:MinecaRTS.SearchType.Greedy
      language: CSharp
      name:
        CSharp: Greedy
        VB: Greedy
      nameWithType:
        CSharp: SearchType.Greedy
        VB: SearchType.Greedy
      qualifiedName:
        CSharp: MinecaRTS.SearchType.Greedy
        VB: MinecaRTS.SearchType.Greedy
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SearchType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Greedy
        path: MinecaRTS/Pathing/SearchType.cs
        startLine: 11
      syntax:
        content:
          CSharp: Greedy = 1
          VB: Greedy = 1
        return:
          type: MinecaRTS.SearchType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: MinecaRTS.ReturnToTownHall
    commentId: T:MinecaRTS.ReturnToTownHall
    language: CSharp
    name:
      CSharp: ReturnToTownHall
      VB: ReturnToTownHall
    nameWithType:
      CSharp: ReturnToTownHall
      VB: ReturnToTownHall
    qualifiedName:
      CSharp: MinecaRTS.ReturnToTownHall
      VB: MinecaRTS.ReturnToTownHall
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/States/MinecartStates.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: ReturnToTownHall
      path: MinecaRTS/States/MinecartStates.cs
      startLine: 57
    syntax:
      content:
        CSharp: 'public class ReturnToTownHall : State<Minecart>'
        VB: >-
          Public Class ReturnToTownHall

              Inherits State(Of Minecart)
    inheritance:
    - System.Object
    - MinecaRTS.State{MinecaRTS.Minecart}
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.ReturnToTownHall.Instance
      commentId: P:MinecaRTS.ReturnToTownHall.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: ReturnToTownHall.Instance
        VB: ReturnToTownHall.Instance
      qualifiedName:
        CSharp: MinecaRTS.ReturnToTownHall.Instance
        VB: MinecaRTS.ReturnToTownHall.Instance
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/MinecartStates.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Instance
        path: MinecaRTS/States/MinecartStates.cs
        startLine: 61
      syntax:
        content:
          CSharp: public static ReturnToTownHall Instance { get; }
          VB: Public Shared ReadOnly Property Instance As ReturnToTownHall
        parameters: []
        return:
          type: MinecaRTS.ReturnToTownHall
      overload: MinecaRTS.ReturnToTownHall.Instance*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: MinecaRTS.ReturnToTownHall.#ctor
      commentId: M:MinecaRTS.ReturnToTownHall.#ctor
      language: CSharp
      name:
        CSharp: ReturnToTownHall()
        VB: ReturnToTownHall()
      nameWithType:
        CSharp: ReturnToTownHall.ReturnToTownHall()
        VB: ReturnToTownHall.ReturnToTownHall()
      qualifiedName:
        CSharp: MinecaRTS.ReturnToTownHall.ReturnToTownHall()
        VB: MinecaRTS.ReturnToTownHall.ReturnToTownHall()
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/MinecartStates.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/States/MinecartStates.cs
        startLine: 66
      syntax:
        content:
          CSharp: public ReturnToTownHall()
          VB: Public Sub New
      overload: MinecaRTS.ReturnToTownHall.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.ReturnToTownHall.Enter(MinecaRTS.Minecart)
      commentId: M:MinecaRTS.ReturnToTownHall.Enter(MinecaRTS.Minecart)
      language: CSharp
      name:
        CSharp: Enter(Minecart)
        VB: Enter(Minecart)
      nameWithType:
        CSharp: ReturnToTownHall.Enter(Minecart)
        VB: ReturnToTownHall.Enter(Minecart)
      qualifiedName:
        CSharp: MinecaRTS.ReturnToTownHall.Enter(MinecaRTS.Minecart)
        VB: MinecaRTS.ReturnToTownHall.Enter(MinecaRTS.Minecart)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/MinecartStates.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Enter
        path: MinecaRTS/States/MinecartStates.cs
        startLine: 74
      syntax:
        content:
          CSharp: public override void Enter(Minecart owner)
          VB: Public Overrides Sub Enter(owner As Minecart)
        parameters:
        - id: owner
          type: MinecaRTS.Minecart
      overload: MinecaRTS.ReturnToTownHall.Enter*
      overridden: MinecaRTS.State{MinecaRTS.Minecart}.Enter(MinecaRTS.Minecart)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.ReturnToTownHall.Exit(MinecaRTS.Minecart)
      commentId: M:MinecaRTS.ReturnToTownHall.Exit(MinecaRTS.Minecart)
      language: CSharp
      name:
        CSharp: Exit(Minecart)
        VB: Exit(Minecart)
      nameWithType:
        CSharp: ReturnToTownHall.Exit(Minecart)
        VB: ReturnToTownHall.Exit(Minecart)
      qualifiedName:
        CSharp: MinecaRTS.ReturnToTownHall.Exit(MinecaRTS.Minecart)
        VB: MinecaRTS.ReturnToTownHall.Exit(MinecaRTS.Minecart)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/MinecartStates.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Exit
        path: MinecaRTS/States/MinecartStates.cs
        startLine: 82
      syntax:
        content:
          CSharp: public override void Exit(Minecart owner)
          VB: Public Overrides Sub Exit(owner As Minecart)
        parameters:
        - id: owner
          type: MinecaRTS.Minecart
      overload: MinecaRTS.ReturnToTownHall.Exit*
      overridden: MinecaRTS.State{MinecaRTS.Minecart}.Exit(MinecaRTS.Minecart)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.ReturnToTownHall.Execute(MinecaRTS.Minecart)
      commentId: M:MinecaRTS.ReturnToTownHall.Execute(MinecaRTS.Minecart)
      language: CSharp
      name:
        CSharp: Execute(Minecart)
        VB: Execute(Minecart)
      nameWithType:
        CSharp: ReturnToTownHall.Execute(Minecart)
        VB: ReturnToTownHall.Execute(Minecart)
      qualifiedName:
        CSharp: MinecaRTS.ReturnToTownHall.Execute(MinecaRTS.Minecart)
        VB: MinecaRTS.ReturnToTownHall.Execute(MinecaRTS.Minecart)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/MinecartStates.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Execute
        path: MinecaRTS/States/MinecartStates.cs
        startLine: 87
      syntax:
        content:
          CSharp: public override void Execute(Minecart owner)
          VB: Public Overrides Sub Execute(owner As Minecart)
        parameters:
        - id: owner
          type: MinecaRTS.Minecart
      overload: MinecaRTS.ReturnToTownHall.Execute*
      overridden: MinecaRTS.State{MinecaRTS.Minecart}.Execute(MinecaRTS.Minecart)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.ReturnToTownHall.HandleMessage(MinecaRTS.Minecart,MinecaRTS.Message)
      commentId: M:MinecaRTS.ReturnToTownHall.HandleMessage(MinecaRTS.Minecart,MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Minecart, Message)
        VB: HandleMessage(Minecart, Message)
      nameWithType:
        CSharp: ReturnToTownHall.HandleMessage(Minecart, Message)
        VB: ReturnToTownHall.HandleMessage(Minecart, Message)
      qualifiedName:
        CSharp: MinecaRTS.ReturnToTownHall.HandleMessage(MinecaRTS.Minecart, MinecaRTS.Message)
        VB: MinecaRTS.ReturnToTownHall.HandleMessage(MinecaRTS.Minecart, MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/MinecartStates.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/States/MinecartStates.cs
        startLine: 97
      syntax:
        content:
          CSharp: public override void HandleMessage(Minecart owner, Message message)
          VB: Public Overrides Sub HandleMessage(owner As Minecart, message As Message)
        parameters:
        - id: owner
          type: MinecaRTS.Minecart
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.ReturnToTownHall.HandleMessage*
      overridden: MinecaRTS.State{MinecaRTS.Minecart}.HandleMessage(MinecaRTS.Minecart,MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: MinecaRTS.SpriteSheet
    commentId: T:MinecaRTS.SpriteSheet
    language: CSharp
    name:
      CSharp: SpriteSheet
      VB: SpriteSheet
    nameWithType:
      CSharp: SpriteSheet
      VB: SpriteSheet
    qualifiedName:
      CSharp: MinecaRTS.SpriteSheet
      VB: MinecaRTS.SpriteSheet
    type: Struct
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Render/Animation.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: SpriteSheet
      path: MinecaRTS/Render/Animation.cs
      startLine: 10
    syntax:
      content:
        CSharp: public struct SpriteSheet
        VB: Public Structure SpriteSheet
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: MinecaRTS.SpriteSheet.texture
      commentId: F:MinecaRTS.SpriteSheet.texture
      language: CSharp
      name:
        CSharp: texture
        VB: texture
      nameWithType:
        CSharp: SpriteSheet.texture
        VB: SpriteSheet.texture
      qualifiedName:
        CSharp: MinecaRTS.SpriteSheet.texture
        VB: MinecaRTS.SpriteSheet.texture
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: texture
        path: MinecaRTS/Render/Animation.cs
        startLine: 12
      syntax:
        content:
          CSharp: public Texture2D texture
          VB: Public texture As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SpriteSheet.cols
      commentId: F:MinecaRTS.SpriteSheet.cols
      language: CSharp
      name:
        CSharp: cols
        VB: cols
      nameWithType:
        CSharp: SpriteSheet.cols
        VB: SpriteSheet.cols
      qualifiedName:
        CSharp: MinecaRTS.SpriteSheet.cols
        VB: MinecaRTS.SpriteSheet.cols
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: cols
        path: MinecaRTS/Render/Animation.cs
        startLine: 13
      syntax:
        content:
          CSharp: public int cols
          VB: Public cols As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SpriteSheet.rows
      commentId: F:MinecaRTS.SpriteSheet.rows
      language: CSharp
      name:
        CSharp: rows
        VB: rows
      nameWithType:
        CSharp: SpriteSheet.rows
        VB: SpriteSheet.rows
      qualifiedName:
        CSharp: MinecaRTS.SpriteSheet.rows
        VB: MinecaRTS.SpriteSheet.rows
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: rows
        path: MinecaRTS/Render/Animation.cs
        startLine: 14
      syntax:
        content:
          CSharp: public int rows
          VB: Public rows As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SpriteSheet.cellWidth
      commentId: F:MinecaRTS.SpriteSheet.cellWidth
      language: CSharp
      name:
        CSharp: cellWidth
        VB: cellWidth
      nameWithType:
        CSharp: SpriteSheet.cellWidth
        VB: SpriteSheet.cellWidth
      qualifiedName:
        CSharp: MinecaRTS.SpriteSheet.cellWidth
        VB: MinecaRTS.SpriteSheet.cellWidth
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: cellWidth
        path: MinecaRTS/Render/Animation.cs
        startLine: 15
      syntax:
        content:
          CSharp: public int cellWidth
          VB: Public cellWidth As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SpriteSheet.cellHeight
      commentId: F:MinecaRTS.SpriteSheet.cellHeight
      language: CSharp
      name:
        CSharp: cellHeight
        VB: cellHeight
      nameWithType:
        CSharp: SpriteSheet.cellHeight
        VB: SpriteSheet.cellHeight
      qualifiedName:
        CSharp: MinecaRTS.SpriteSheet.cellHeight
        VB: MinecaRTS.SpriteSheet.cellHeight
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: cellHeight
        path: MinecaRTS/Render/Animation.cs
        startLine: 16
      syntax:
        content:
          CSharp: public int cellHeight
          VB: Public cellHeight As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.Frame
    commentId: T:MinecaRTS.Frame
    language: CSharp
    name:
      CSharp: Frame
      VB: Frame
    nameWithType:
      CSharp: Frame
      VB: Frame
    qualifiedName:
      CSharp: MinecaRTS.Frame
      VB: MinecaRTS.Frame
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Render/Animation.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Frame
      path: MinecaRTS/Render/Animation.cs
      startLine: 19
    syntax:
      content:
        CSharp: public class Frame
        VB: Public Class Frame
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Frame.rect
      commentId: F:MinecaRTS.Frame.rect
      language: CSharp
      name:
        CSharp: rect
        VB: rect
      nameWithType:
        CSharp: Frame.rect
        VB: Frame.rect
      qualifiedName:
        CSharp: MinecaRTS.Frame.rect
        VB: MinecaRTS.Frame.rect
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: rect
        path: MinecaRTS/Render/Animation.cs
        startLine: 21
      syntax:
        content:
          CSharp: public Rectangle rect
          VB: Public rect As Rectangle
        return:
          type: Microsoft.Xna.Framework.Rectangle
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Frame.duration
      commentId: F:MinecaRTS.Frame.duration
      language: CSharp
      name:
        CSharp: duration
        VB: duration
      nameWithType:
        CSharp: Frame.duration
        VB: Frame.duration
      qualifiedName:
        CSharp: MinecaRTS.Frame.duration
        VB: MinecaRTS.Frame.duration
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: duration
        path: MinecaRTS/Render/Animation.cs
        startLine: 22
      syntax:
        content:
          CSharp: public uint duration
          VB: Public duration As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Frame.#ctor
      commentId: M:MinecaRTS.Frame.#ctor
      language: CSharp
      name:
        CSharp: Frame()
        VB: Frame()
      nameWithType:
        CSharp: Frame.Frame()
        VB: Frame.Frame()
      qualifiedName:
        CSharp: MinecaRTS.Frame.Frame()
        VB: MinecaRTS.Frame.Frame()
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Render/Animation.cs
        startLine: 24
      syntax:
        content:
          CSharp: public Frame()
          VB: Public Sub New
      overload: MinecaRTS.Frame.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Frame.#ctor(Microsoft.Xna.Framework.Rectangle,System.UInt32)
      commentId: M:MinecaRTS.Frame.#ctor(Microsoft.Xna.Framework.Rectangle,System.UInt32)
      language: CSharp
      name:
        CSharp: Frame(Rectangle, UInt32)
        VB: Frame(Rectangle, UInt32)
      nameWithType:
        CSharp: Frame.Frame(Rectangle, UInt32)
        VB: Frame.Frame(Rectangle, UInt32)
      qualifiedName:
        CSharp: MinecaRTS.Frame.Frame(Microsoft.Xna.Framework.Rectangle, System.UInt32)
        VB: MinecaRTS.Frame.Frame(Microsoft.Xna.Framework.Rectangle, System.UInt32)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Render/Animation.cs
        startLine: 27
      syntax:
        content:
          CSharp: public Frame(Rectangle aRect, uint aDuration)
          VB: Public Sub New(aRect As Rectangle, aDuration As UInteger)
        parameters:
        - id: aRect
          type: Microsoft.Xna.Framework.Rectangle
        - id: aDuration
          type: System.UInt32
      overload: MinecaRTS.Frame.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.Animation
    commentId: T:MinecaRTS.Animation
    language: CSharp
    name:
      CSharp: Animation
      VB: Animation
    nameWithType:
      CSharp: Animation
      VB: Animation
    qualifiedName:
      CSharp: MinecaRTS.Animation
      VB: MinecaRTS.Animation
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Render/Animation.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Animation
      path: MinecaRTS/Render/Animation.cs
      startLine: 34
    syntax:
      content:
        CSharp: public class Animation
        VB: Public Class Animation
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Animation.texture
      commentId: F:MinecaRTS.Animation.texture
      language: CSharp
      name:
        CSharp: texture
        VB: texture
      nameWithType:
        CSharp: Animation.texture
        VB: Animation.texture
      qualifiedName:
        CSharp: MinecaRTS.Animation.texture
        VB: MinecaRTS.Animation.texture
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: texture
        path: MinecaRTS/Render/Animation.cs
        startLine: 36
      syntax:
        content:
          CSharp: public Texture2D texture
          VB: Public texture As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Animation.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.Collections.Generic.List{MinecaRTS.Frame},Microsoft.Xna.Framework.Vector2,System.Boolean)
      commentId: M:MinecaRTS.Animation.#ctor(Microsoft.Xna.Framework.Graphics.Texture2D,System.Collections.Generic.List{MinecaRTS.Frame},Microsoft.Xna.Framework.Vector2,System.Boolean)
      language: CSharp
      name:
        CSharp: Animation(Texture2D, List<Frame>, Vector2, Boolean)
        VB: Animation(Texture2D, List(Of Frame), Vector2, Boolean)
      nameWithType:
        CSharp: Animation.Animation(Texture2D, List<Frame>, Vector2, Boolean)
        VB: Animation.Animation(Texture2D, List(Of Frame), Vector2, Boolean)
      qualifiedName:
        CSharp: MinecaRTS.Animation.Animation(Microsoft.Xna.Framework.Graphics.Texture2D, System.Collections.Generic.List<MinecaRTS.Frame>, Microsoft.Xna.Framework.Vector2, System.Boolean)
        VB: MinecaRTS.Animation.Animation(Microsoft.Xna.Framework.Graphics.Texture2D, System.Collections.Generic.List(Of MinecaRTS.Frame), Microsoft.Xna.Framework.Vector2, System.Boolean)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Render/Animation.cs
        startLine: 43
      syntax:
        content:
          CSharp: public Animation(Texture2D texture, List<Frame> frames, Vector2 offset, bool looped)
          VB: Public Sub New(texture As Texture2D, frames As List(Of Frame), offset As Vector2, looped As Boolean)
        parameters:
        - id: texture
          type: Microsoft.Xna.Framework.Graphics.Texture2D
        - id: frames
          type: System.Collections.Generic.List{MinecaRTS.Frame}
        - id: offset
          type: Microsoft.Xna.Framework.Vector2
        - id: looped
          type: System.Boolean
      overload: MinecaRTS.Animation.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Animation.CurrentFrame
      commentId: P:MinecaRTS.Animation.CurrentFrame
      language: CSharp
      name:
        CSharp: CurrentFrame
        VB: CurrentFrame
      nameWithType:
        CSharp: Animation.CurrentFrame
        VB: Animation.CurrentFrame
      qualifiedName:
        CSharp: MinecaRTS.Animation.CurrentFrame
        VB: MinecaRTS.Animation.CurrentFrame
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CurrentFrame
        path: MinecaRTS/Render/Animation.cs
        startLine: 53
      syntax:
        content:
          CSharp: public Frame CurrentFrame { get; }
          VB: Public ReadOnly Property CurrentFrame As Frame
        parameters: []
        return:
          type: MinecaRTS.Frame
      overload: MinecaRTS.Animation.CurrentFrame*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Animation.ChangeScript(System.Collections.Generic.List{MinecaRTS.Frame},Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean)
      commentId: M:MinecaRTS.Animation.ChangeScript(System.Collections.Generic.List{MinecaRTS.Frame},Microsoft.Xna.Framework.Vector2,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: ChangeScript(List<Frame>, Vector2, Boolean, Boolean)
        VB: ChangeScript(List(Of Frame), Vector2, Boolean, Boolean)
      nameWithType:
        CSharp: Animation.ChangeScript(List<Frame>, Vector2, Boolean, Boolean)
        VB: Animation.ChangeScript(List(Of Frame), Vector2, Boolean, Boolean)
      qualifiedName:
        CSharp: MinecaRTS.Animation.ChangeScript(System.Collections.Generic.List<MinecaRTS.Frame>, Microsoft.Xna.Framework.Vector2, System.Boolean, System.Boolean)
        VB: MinecaRTS.Animation.ChangeScript(System.Collections.Generic.List(Of MinecaRTS.Frame), Microsoft.Xna.Framework.Vector2, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ChangeScript
        path: MinecaRTS/Render/Animation.cs
        startLine: 58
      syntax:
        content:
          CSharp: public void ChangeScript(List<Frame> newFrames, Vector2 offset, bool looped, bool resetIndex)
          VB: Public Sub ChangeScript(newFrames As List(Of Frame), offset As Vector2, looped As Boolean, resetIndex As Boolean)
        parameters:
        - id: newFrames
          type: System.Collections.Generic.List{MinecaRTS.Frame}
        - id: offset
          type: Microsoft.Xna.Framework.Vector2
        - id: looped
          type: System.Boolean
        - id: resetIndex
          type: System.Boolean
      overload: MinecaRTS.Animation.ChangeScript*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Animation.Update
      commentId: M:MinecaRTS.Animation.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Animation.Update()
        VB: Animation.Update()
      qualifiedName:
        CSharp: MinecaRTS.Animation.Update()
        VB: MinecaRTS.Animation.Update()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Render/Animation.cs
        startLine: 71
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: MinecaRTS.Animation.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Animation.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle)
      commentId: M:MinecaRTS.Animation.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch,Microsoft.Xna.Framework.Rectangle)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch, Rectangle)
        VB: Render(SpriteBatch, Rectangle)
      nameWithType:
        CSharp: Animation.Render(SpriteBatch, Rectangle)
        VB: Animation.Render(SpriteBatch, Rectangle)
      qualifiedName:
        CSharp: MinecaRTS.Animation.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Rectangle)
        VB: MinecaRTS.Animation.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch, Microsoft.Xna.Framework.Rectangle)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Animation.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Render/Animation.cs
        startLine: 82
      syntax:
        content:
          CSharp: public void Render(SpriteBatch spriteBatch, Rectangle destinationRect)
          VB: Public Sub Render(spriteBatch As SpriteBatch, destinationRect As Rectangle)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
        - id: destinationRect
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Animation.Render*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.BuildingFactory
    commentId: T:MinecaRTS.BuildingFactory
    language: CSharp
    name:
      CSharp: BuildingFactory
      VB: BuildingFactory
    nameWithType:
      CSharp: BuildingFactory
      VB: BuildingFactory
    qualifiedName:
      CSharp: MinecaRTS.BuildingFactory
      VB: MinecaRTS.BuildingFactory
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Buildings/BuildingFactory.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: BuildingFactory
      path: MinecaRTS/Entities/Buildings/BuildingFactory.cs
      startLine: 9
    syntax:
      content:
        CSharp: public static class BuildingFactory
        VB: Public Module BuildingFactory
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: MinecaRTS.BuildingFactory.CreateTownHall(MinecaRTS.PlayerData,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.BuildingFactory.CreateTownHall(MinecaRTS.PlayerData,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: CreateTownHall(PlayerData, Vector2)
        VB: CreateTownHall(PlayerData, Vector2)
      nameWithType:
        CSharp: BuildingFactory.CreateTownHall(PlayerData, Vector2)
        VB: BuildingFactory.CreateTownHall(PlayerData, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.BuildingFactory.CreateTownHall(MinecaRTS.PlayerData, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.BuildingFactory.CreateTownHall(MinecaRTS.PlayerData, Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/BuildingFactory.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CreateTownHall
        path: MinecaRTS/Entities/Buildings/BuildingFactory.cs
        startLine: 11
      syntax:
        content:
          CSharp: public static TownHall CreateTownHall(PlayerData data, Vector2 pos)
          VB: Public Shared Function CreateTownHall(data As PlayerData, pos As Vector2) As TownHall
        parameters:
        - id: data
          type: MinecaRTS.PlayerData
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: MinecaRTS.TownHall
      overload: MinecaRTS.BuildingFactory.CreateTownHall*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.BuildingFactory.CreateHouse(MinecaRTS.PlayerData,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.BuildingFactory.CreateHouse(MinecaRTS.PlayerData,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: CreateHouse(PlayerData, Vector2)
        VB: CreateHouse(PlayerData, Vector2)
      nameWithType:
        CSharp: BuildingFactory.CreateHouse(PlayerData, Vector2)
        VB: BuildingFactory.CreateHouse(PlayerData, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.BuildingFactory.CreateHouse(MinecaRTS.PlayerData, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.BuildingFactory.CreateHouse(MinecaRTS.PlayerData, Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/BuildingFactory.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CreateHouse
        path: MinecaRTS/Entities/Buildings/BuildingFactory.cs
        startLine: 19
      syntax:
        content:
          CSharp: public static House CreateHouse(PlayerData data, Vector2 pos)
          VB: Public Shared Function CreateHouse(data As PlayerData, pos As Vector2) As House
        parameters:
        - id: data
          type: MinecaRTS.PlayerData
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: MinecaRTS.House
      overload: MinecaRTS.BuildingFactory.CreateHouse*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.BuildingFactory.CreateTrack(MinecaRTS.PlayerData,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.BuildingFactory.CreateTrack(MinecaRTS.PlayerData,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: CreateTrack(PlayerData, Vector2)
        VB: CreateTrack(PlayerData, Vector2)
      nameWithType:
        CSharp: BuildingFactory.CreateTrack(PlayerData, Vector2)
        VB: BuildingFactory.CreateTrack(PlayerData, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.BuildingFactory.CreateTrack(MinecaRTS.PlayerData, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.BuildingFactory.CreateTrack(MinecaRTS.PlayerData, Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/BuildingFactory.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CreateTrack
        path: MinecaRTS/Entities/Buildings/BuildingFactory.cs
        startLine: 24
      syntax:
        content:
          CSharp: public static Track CreateTrack(PlayerData data, Vector2 pos)
          VB: Public Shared Function CreateTrack(data As PlayerData, pos As Vector2) As Track
        parameters:
        - id: data
          type: MinecaRTS.PlayerData
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: MinecaRTS.Track
      overload: MinecaRTS.BuildingFactory.CreateTrack*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.BuildingFactory.CreateDepositBox(MinecaRTS.PlayerData,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.BuildingFactory.CreateDepositBox(MinecaRTS.PlayerData,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: CreateDepositBox(PlayerData, Vector2)
        VB: CreateDepositBox(PlayerData, Vector2)
      nameWithType:
        CSharp: BuildingFactory.CreateDepositBox(PlayerData, Vector2)
        VB: BuildingFactory.CreateDepositBox(PlayerData, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.BuildingFactory.CreateDepositBox(MinecaRTS.PlayerData, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.BuildingFactory.CreateDepositBox(MinecaRTS.PlayerData, Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/BuildingFactory.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CreateDepositBox
        path: MinecaRTS/Entities/Buildings/BuildingFactory.cs
        startLine: 29
      syntax:
        content:
          CSharp: public static DepositBox CreateDepositBox(PlayerData data, Vector2 pos)
          VB: Public Shared Function CreateDepositBox(data As PlayerData, pos As Vector2) As DepositBox
        parameters:
        - id: data
          type: MinecaRTS.PlayerData
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: MinecaRTS.DepositBox
      overload: MinecaRTS.BuildingFactory.CreateDepositBox*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: MinecaRTS.Cost
    commentId: T:MinecaRTS.Cost
    language: CSharp
    name:
      CSharp: Cost
      VB: Cost
    nameWithType:
      CSharp: Cost
      VB: Cost
    qualifiedName:
      CSharp: MinecaRTS.Cost
      VB: MinecaRTS.Cost
    type: Struct
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Resource/Cost.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Cost
      path: MinecaRTS/Resource/Cost.cs
      startLine: 8
    syntax:
      content:
        CSharp: public struct Cost
        VB: Public Structure Cost
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: MinecaRTS.Cost.woodCost
      commentId: F:MinecaRTS.Cost.woodCost
      language: CSharp
      name:
        CSharp: woodCost
        VB: woodCost
      nameWithType:
        CSharp: Cost.woodCost
        VB: Cost.woodCost
      qualifiedName:
        CSharp: MinecaRTS.Cost.woodCost
        VB: MinecaRTS.Cost.woodCost
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Cost.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: woodCost
        path: MinecaRTS/Resource/Cost.cs
        startLine: 10
      syntax:
        content:
          CSharp: public uint woodCost
          VB: Public woodCost As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Cost.stoneCost
      commentId: F:MinecaRTS.Cost.stoneCost
      language: CSharp
      name:
        CSharp: stoneCost
        VB: stoneCost
      nameWithType:
        CSharp: Cost.stoneCost
        VB: Cost.stoneCost
      qualifiedName:
        CSharp: MinecaRTS.Cost.stoneCost
        VB: MinecaRTS.Cost.stoneCost
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Cost.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: stoneCost
        path: MinecaRTS/Resource/Cost.cs
        startLine: 11
      syntax:
        content:
          CSharp: public uint stoneCost
          VB: Public stoneCost As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Cost.supplyCost
      commentId: F:MinecaRTS.Cost.supplyCost
      language: CSharp
      name:
        CSharp: supplyCost
        VB: supplyCost
      nameWithType:
        CSharp: Cost.supplyCost
        VB: Cost.supplyCost
      qualifiedName:
        CSharp: MinecaRTS.Cost.supplyCost
        VB: MinecaRTS.Cost.supplyCost
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Cost.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: supplyCost
        path: MinecaRTS/Resource/Cost.cs
        startLine: 12
      syntax:
        content:
          CSharp: public uint supplyCost
          VB: Public supplyCost As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Cost.#ctor(System.UInt32,System.UInt32,System.UInt32)
      commentId: M:MinecaRTS.Cost.#ctor(System.UInt32,System.UInt32,System.UInt32)
      language: CSharp
      name:
        CSharp: Cost(UInt32, UInt32, UInt32)
        VB: Cost(UInt32, UInt32, UInt32)
      nameWithType:
        CSharp: Cost.Cost(UInt32, UInt32, UInt32)
        VB: Cost.Cost(UInt32, UInt32, UInt32)
      qualifiedName:
        CSharp: MinecaRTS.Cost.Cost(System.UInt32, System.UInt32, System.UInt32)
        VB: MinecaRTS.Cost.Cost(System.UInt32, System.UInt32, System.UInt32)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Cost.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Resource/Cost.cs
        startLine: 14
      syntax:
        content:
          CSharp: public Cost(uint wood, uint stone, uint supply)
          VB: Public Sub New(wood As UInteger, stone As UInteger, supply As UInteger)
        parameters:
        - id: wood
          type: System.UInt32
        - id: stone
          type: System.UInt32
        - id: supply
          type: System.UInt32
      overload: MinecaRTS.Cost.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.GameResources
    commentId: T:MinecaRTS.GameResources
    language: CSharp
    name:
      CSharp: GameResources
      VB: GameResources
    nameWithType:
      CSharp: GameResources
      VB: GameResources
    qualifiedName:
      CSharp: MinecaRTS.GameResources
      VB: MinecaRTS.GameResources
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Render/GameResources.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: GameResources
      path: MinecaRTS/Render/GameResources.cs
      startLine: 12
    syntax:
      content:
        CSharp: public static class GameResources
        VB: Public Module GameResources
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: MinecaRTS.GameResources.CreateMinecartEmptyAnimation
      commentId: M:MinecaRTS.GameResources.CreateMinecartEmptyAnimation
      language: CSharp
      name:
        CSharp: CreateMinecartEmptyAnimation()
        VB: CreateMinecartEmptyAnimation()
      nameWithType:
        CSharp: GameResources.CreateMinecartEmptyAnimation()
        VB: GameResources.CreateMinecartEmptyAnimation()
      qualifiedName:
        CSharp: MinecaRTS.GameResources.CreateMinecartEmptyAnimation()
        VB: MinecaRTS.GameResources.CreateMinecartEmptyAnimation()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/GameResources.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CreateMinecartEmptyAnimation
        path: MinecaRTS/Render/GameResources.cs
        startLine: 48
      syntax:
        content:
          CSharp: public static void CreateMinecartEmptyAnimation()
          VB: Public Shared Sub CreateMinecartEmptyAnimation
      overload: MinecaRTS.GameResources.CreateMinecartEmptyAnimation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.GameResources.CreateWorkerAnimation(MinecaRTS.SpriteSheet,MinecaRTS.WkrAnim,System.UInt32)
      commentId: M:MinecaRTS.GameResources.CreateWorkerAnimation(MinecaRTS.SpriteSheet,MinecaRTS.WkrAnim,System.UInt32)
      language: CSharp
      name:
        CSharp: CreateWorkerAnimation(SpriteSheet, WkrAnim, UInt32)
        VB: CreateWorkerAnimation(SpriteSheet, WkrAnim, UInt32)
      nameWithType:
        CSharp: GameResources.CreateWorkerAnimation(SpriteSheet, WkrAnim, UInt32)
        VB: GameResources.CreateWorkerAnimation(SpriteSheet, WkrAnim, UInt32)
      qualifiedName:
        CSharp: MinecaRTS.GameResources.CreateWorkerAnimation(MinecaRTS.SpriteSheet, MinecaRTS.WkrAnim, System.UInt32)
        VB: MinecaRTS.GameResources.CreateWorkerAnimation(MinecaRTS.SpriteSheet, MinecaRTS.WkrAnim, System.UInt32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/GameResources.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CreateWorkerAnimation
        path: MinecaRTS/Render/GameResources.cs
        startLine: 58
      syntax:
        content:
          CSharp: public static void CreateWorkerAnimation(SpriteSheet newSS, WkrAnim animType, uint frameDuration)
          VB: Public Shared Sub CreateWorkerAnimation(newSS As SpriteSheet, animType As WkrAnim, frameDuration As UInteger)
        parameters:
        - id: newSS
          type: MinecaRTS.SpriteSheet
        - id: animType
          type: MinecaRTS.WkrAnim
        - id: frameDuration
          type: System.UInt32
      overload: MinecaRTS.GameResources.CreateWorkerAnimation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.GameResources.LoadSpriteSheet(MinecaRTS.MinecaRTS,System.String,System.Int32,System.Int32)
      commentId: M:MinecaRTS.GameResources.LoadSpriteSheet(MinecaRTS.MinecaRTS,System.String,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: LoadSpriteSheet(MinecaRTS, String, Int32, Int32)
        VB: LoadSpriteSheet(MinecaRTS, String, Int32, Int32)
      nameWithType:
        CSharp: GameResources.LoadSpriteSheet(MinecaRTS, String, Int32, Int32)
        VB: GameResources.LoadSpriteSheet(MinecaRTS, String, Int32, Int32)
      qualifiedName:
        CSharp: MinecaRTS.GameResources.LoadSpriteSheet(MinecaRTS.MinecaRTS, System.String, System.Int32, System.Int32)
        VB: MinecaRTS.GameResources.LoadSpriteSheet(MinecaRTS.MinecaRTS, System.String, System.Int32, System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/GameResources.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: LoadSpriteSheet
        path: MinecaRTS/Render/GameResources.cs
        startLine: 72
      syntax:
        content:
          CSharp: public static SpriteSheet LoadSpriteSheet(MinecaRTS game, string filename, int cols, int rows)
          VB: Public Shared Function LoadSpriteSheet(game As MinecaRTS, filename As String, cols As Integer, rows As Integer) As SpriteSheet
        parameters:
        - id: game
          type: MinecaRTS.MinecaRTS
        - id: filename
          type: System.String
        - id: cols
          type: System.Int32
        - id: rows
          type: System.Int32
        return:
          type: MinecaRTS.SpriteSheet
      overload: MinecaRTS.GameResources.LoadSpriteSheet*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: MinecaRTS.Building
    commentId: T:MinecaRTS.Building
    language: CSharp
    name:
      CSharp: Building
      VB: Building
    nameWithType:
      CSharp: Building
      VB: Building
    qualifiedName:
      CSharp: MinecaRTS.Building
      VB: MinecaRTS.Building
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Buildings/Building.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Building
      path: MinecaRTS/Entities/Buildings/Building.cs
      startLine: 11
    syntax:
      content:
        CSharp: 'public class Building : Entity, IRenderable, IHandleMessages'
        VB: >-
          Public Class Building

              Inherits Entity

              Implements IRenderable, IHandleMessages
    inheritance:
    - System.Object
    - MinecaRTS.Entity
    implements:
    - MinecaRTS.IRenderable
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.Entity.Pos
    - MinecaRTS.Entity.Scale
    - MinecaRTS.Entity.ID
    - MinecaRTS.Entity.RenderPos
    - MinecaRTS.Entity.CollisionRect
    - MinecaRTS.Entity.RenderRect
    - MinecaRTS.Entity.Mid
    - MinecaRTS.Entity.RenderMid
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Building.ActiveTexture
      commentId: P:MinecaRTS.Building.ActiveTexture
      language: CSharp
      name:
        CSharp: ActiveTexture
        VB: ActiveTexture
      nameWithType:
        CSharp: Building.ActiveTexture
        VB: Building.ActiveTexture
      qualifiedName:
        CSharp: MinecaRTS.Building.ActiveTexture
        VB: MinecaRTS.Building.ActiveTexture
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Building.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ActiveTexture
        path: MinecaRTS/Entities/Buildings/Building.cs
        startLine: 17
      syntax:
        content:
          CSharp: public Texture2D ActiveTexture { get; }
          VB: Public ReadOnly Property ActiveTexture As Texture2D
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      overload: MinecaRTS.Building.ActiveTexture*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Building.IsActive
      commentId: P:MinecaRTS.Building.IsActive
      language: CSharp
      name:
        CSharp: IsActive
        VB: IsActive
      nameWithType:
        CSharp: Building.IsActive
        VB: Building.IsActive
      qualifiedName:
        CSharp: MinecaRTS.Building.IsActive
        VB: MinecaRTS.Building.IsActive
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Building.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: IsActive
        path: MinecaRTS/Entities/Buildings/Building.cs
        startLine: 27
      syntax:
        content:
          CSharp: public bool IsActive { get; }
          VB: Public ReadOnly Property IsActive As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: MinecaRTS.Building.IsActive*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Building.Team
      commentId: P:MinecaRTS.Building.Team
      language: CSharp
      name:
        CSharp: Team
        VB: Team
      nameWithType:
        CSharp: Building.Team
        VB: Building.Team
      qualifiedName:
        CSharp: MinecaRTS.Building.Team
        VB: MinecaRTS.Building.Team
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Building.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Team
        path: MinecaRTS/Entities/Buildings/Building.cs
        startLine: 34
      syntax:
        content:
          CSharp: public Team Team { get; }
          VB: Public ReadOnly Property Team As Team
        parameters: []
        return:
          type: MinecaRTS.Team
      overload: MinecaRTS.Building.Team*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Building.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MinecaRTS.Team,System.Int32,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D)
      commentId: M:MinecaRTS.Building.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MinecaRTS.Team,System.Int32,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D)
      language: CSharp
      name:
        CSharp: Building(Vector2, Vector2, Team, Int32, Texture2D, Texture2D)
        VB: Building(Vector2, Vector2, Team, Int32, Texture2D, Texture2D)
      nameWithType:
        CSharp: Building.Building(Vector2, Vector2, Team, Int32, Texture2D, Texture2D)
        VB: Building.Building(Vector2, Vector2, Team, Int32, Texture2D, Texture2D)
      qualifiedName:
        CSharp: MinecaRTS.Building.Building(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MinecaRTS.Team, System.Int32, Microsoft.Xna.Framework.Graphics.Texture2D, Microsoft.Xna.Framework.Graphics.Texture2D)
        VB: MinecaRTS.Building.Building(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MinecaRTS.Team, System.Int32, Microsoft.Xna.Framework.Graphics.Texture2D, Microsoft.Xna.Framework.Graphics.Texture2D)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Building.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Entities/Buildings/Building.cs
        startLine: 39
      syntax:
        content:
          CSharp: public Building(Vector2 pos, Vector2 scale, Team team, int maxHealth, Texture2D actText, Texture2D constText)
          VB: Public Sub New(pos As Vector2, scale As Vector2, team As Team, maxHealth As Integer, actText As Texture2D, constText As Texture2D)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: scale
          type: Microsoft.Xna.Framework.Vector2
        - id: team
          type: MinecaRTS.Team
        - id: maxHealth
          type: System.Int32
        - id: actText
          type: Microsoft.Xna.Framework.Graphics.Texture2D
        - id: constText
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      overload: MinecaRTS.Building.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Building.Construct
      commentId: M:MinecaRTS.Building.Construct
      language: CSharp
      name:
        CSharp: Construct()
        VB: Construct()
      nameWithType:
        CSharp: Building.Construct()
        VB: Building.Construct()
      qualifiedName:
        CSharp: MinecaRTS.Building.Construct()
        VB: MinecaRTS.Building.Construct()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Building.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Construct
        path: MinecaRTS/Entities/Buildings/Building.cs
        startLine: 48
      syntax:
        content:
          CSharp: public void Construct()
          VB: Public Sub Construct
      overload: MinecaRTS.Building.Construct*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Building.Update
      commentId: M:MinecaRTS.Building.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Building.Update()
        VB: Building.Update()
      qualifiedName:
        CSharp: MinecaRTS.Building.Update()
        VB: MinecaRTS.Building.Update()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Building.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Entities/Buildings/Building.cs
        startLine: 61
      syntax:
        content:
          CSharp: public override void Update()
          VB: Public Overrides Sub Update
      overload: MinecaRTS.Building.Update*
      overridden: MinecaRTS.Entity.Update
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: Building.Render(SpriteBatch)
        VB: Building.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Building.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Entities/Buildings/Building.cs
        startLine: 66
      syntax:
        content:
          CSharp: public override void Render(SpriteBatch spriteBatch)
          VB: Public Overrides Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Building.Render*
      overridden: MinecaRTS.Entity.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32)
      commentId: M:MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32)
      language: CSharp
      name:
        CSharp: QueueUpProductionAtIndex(Int32)
        VB: QueueUpProductionAtIndex(Int32)
      nameWithType:
        CSharp: Building.QueueUpProductionAtIndex(Int32)
        VB: Building.QueueUpProductionAtIndex(Int32)
      qualifiedName:
        CSharp: MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32)
        VB: MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Building.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: QueueUpProductionAtIndex
        path: MinecaRTS/Entities/Buildings/Building.cs
        startLine: 85
      syntax:
        content:
          CSharp: public virtual void QueueUpProductionAtIndex(int index)
          VB: Public Overridable Sub QueueUpProductionAtIndex(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: MinecaRTS.Building.QueueUpProductionAtIndex*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: Building.HandleMessage(Message)
        VB: Building.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Building.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Entities/Buildings/Building.cs
        startLine: 88
      syntax:
        content:
          CSharp: public override void HandleMessage(Message message)
          VB: Public Overrides Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.Building.HandleMessage*
      overridden: MinecaRTS.Entity.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Building.ExitState
      commentId: M:MinecaRTS.Building.ExitState
      language: CSharp
      name:
        CSharp: ExitState()
        VB: ExitState()
      nameWithType:
        CSharp: Building.ExitState()
        VB: Building.ExitState()
      qualifiedName:
        CSharp: MinecaRTS.Building.ExitState()
        VB: MinecaRTS.Building.ExitState()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Building.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ExitState
        path: MinecaRTS/Entities/Buildings/Building.cs
        startLine: 93
      syntax:
        content:
          CSharp: public override void ExitState()
          VB: Public Overrides Sub ExitState
      overload: MinecaRTS.Building.ExitState*
      overridden: MinecaRTS.Entity.ExitState
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderDebug(SpriteBatch)
        VB: RenderDebug(SpriteBatch)
      nameWithType:
        CSharp: Building.RenderDebug(SpriteBatch)
        VB: Building.RenderDebug(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Building.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderDebug
        path: MinecaRTS/Entities/Buildings/Building.cs
        startLine: 96
      syntax:
        content:
          CSharp: public override void RenderDebug(SpriteBatch spriteBatch)
          VB: Public Overrides Sub RenderDebug(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Building.RenderDebug*
      overridden: MinecaRTS.Entity.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: MinecaRTS.Camera
    commentId: T:MinecaRTS.Camera
    language: CSharp
    name:
      CSharp: Camera
      VB: Camera
    nameWithType:
      CSharp: Camera
      VB: Camera
    qualifiedName:
      CSharp: MinecaRTS.Camera
      VB: MinecaRTS.Camera
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Render/Camera.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Camera
      path: MinecaRTS/Render/Camera.cs
      startLine: 9
    syntax:
      content:
        CSharp: public static class Camera
        VB: Public Module Camera
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: MinecaRTS.Camera.Pos
      commentId: F:MinecaRTS.Camera.Pos
      language: CSharp
      name:
        CSharp: Pos
        VB: Pos
      nameWithType:
        CSharp: Camera.Pos
        VB: Camera.Pos
      qualifiedName:
        CSharp: MinecaRTS.Camera.Pos
        VB: MinecaRTS.Camera.Pos
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Pos
        path: MinecaRTS/Render/Camera.cs
        startLine: 11
      syntax:
        content:
          CSharp: public static Point Pos
          VB: Public Shared Pos As Point
        return:
          type: Microsoft.Xna.Framework.Point
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.WIDTH
      commentId: F:MinecaRTS.Camera.WIDTH
      language: CSharp
      name:
        CSharp: WIDTH
        VB: WIDTH
      nameWithType:
        CSharp: Camera.WIDTH
        VB: Camera.WIDTH
      qualifiedName:
        CSharp: MinecaRTS.Camera.WIDTH
        VB: MinecaRTS.Camera.WIDTH
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: WIDTH
        path: MinecaRTS/Render/Camera.cs
        startLine: 12
      syntax:
        content:
          CSharp: public static int WIDTH
          VB: Public Shared WIDTH As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.HEIGHT
      commentId: F:MinecaRTS.Camera.HEIGHT
      language: CSharp
      name:
        CSharp: HEIGHT
        VB: HEIGHT
      nameWithType:
        CSharp: Camera.HEIGHT
        VB: Camera.HEIGHT
      qualifiedName:
        CSharp: MinecaRTS.Camera.HEIGHT
        VB: MinecaRTS.Camera.HEIGHT
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HEIGHT
        path: MinecaRTS/Render/Camera.cs
        startLine: 13
      syntax:
        content:
          CSharp: public static int HEIGHT
          VB: Public Shared HEIGHT As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.MINIMAP_SIZE
      commentId: F:MinecaRTS.Camera.MINIMAP_SIZE
      language: CSharp
      name:
        CSharp: MINIMAP_SIZE
        VB: MINIMAP_SIZE
      nameWithType:
        CSharp: Camera.MINIMAP_SIZE
        VB: Camera.MINIMAP_SIZE
      qualifiedName:
        CSharp: MinecaRTS.Camera.MINIMAP_SIZE
        VB: MinecaRTS.Camera.MINIMAP_SIZE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MINIMAP_SIZE
        path: MinecaRTS/Render/Camera.cs
        startLine: 15
      syntax:
        content:
          CSharp: public const int MINIMAP_SIZE = 250
          VB: Public Const MINIMAP_SIZE As Integer = 250
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Camera.MINIMAP_X
      commentId: P:MinecaRTS.Camera.MINIMAP_X
      language: CSharp
      name:
        CSharp: MINIMAP_X
        VB: MINIMAP_X
      nameWithType:
        CSharp: Camera.MINIMAP_X
        VB: Camera.MINIMAP_X
      qualifiedName:
        CSharp: MinecaRTS.Camera.MINIMAP_X
        VB: MinecaRTS.Camera.MINIMAP_X
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MINIMAP_X
        path: MinecaRTS/Render/Camera.cs
        startLine: 17
      syntax:
        content:
          CSharp: public static int MINIMAP_X { get; }
          VB: Public Shared ReadOnly Property MINIMAP_X As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Camera.MINIMAP_X*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: MinecaRTS.Camera.MINIMAP_Y
      commentId: P:MinecaRTS.Camera.MINIMAP_Y
      language: CSharp
      name:
        CSharp: MINIMAP_Y
        VB: MINIMAP_Y
      nameWithType:
        CSharp: Camera.MINIMAP_Y
        VB: Camera.MINIMAP_Y
      qualifiedName:
        CSharp: MinecaRTS.Camera.MINIMAP_Y
        VB: MinecaRTS.Camera.MINIMAP_Y
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MINIMAP_Y
        path: MinecaRTS/Render/Camera.cs
        startLine: 22
      syntax:
        content:
          CSharp: public static int MINIMAP_Y { get; }
          VB: Public Shared ReadOnly Property MINIMAP_Y As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Camera.MINIMAP_Y*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: MinecaRTS.Camera.X
      commentId: P:MinecaRTS.Camera.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: Camera.X
        VB: Camera.X
      qualifiedName:
        CSharp: MinecaRTS.Camera.X
        VB: MinecaRTS.Camera.X
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: X
        path: MinecaRTS/Render/Camera.cs
        startLine: 27
      syntax:
        content:
          CSharp: public static int X { get; set; }
          VB: Public Shared Property X As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Camera.X*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.Y
      commentId: P:MinecaRTS.Camera.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: Camera.Y
        VB: Camera.Y
      qualifiedName:
        CSharp: MinecaRTS.Camera.Y
        VB: MinecaRTS.Camera.Y
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Y
        path: MinecaRTS/Render/Camera.cs
        startLine: 43
      syntax:
        content:
          CSharp: public static int Y { get; set; }
          VB: Public Shared Property Y As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Camera.Y*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.Rect
      commentId: P:MinecaRTS.Camera.Rect
      language: CSharp
      name:
        CSharp: Rect
        VB: Rect
      nameWithType:
        CSharp: Camera.Rect
        VB: Camera.Rect
      qualifiedName:
        CSharp: MinecaRTS.Camera.Rect
        VB: MinecaRTS.Camera.Rect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Rect
        path: MinecaRTS/Render/Camera.cs
        startLine: 57
      syntax:
        content:
          CSharp: public static Rectangle Rect { get; }
          VB: Public Shared ReadOnly Property Rect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Camera.Rect*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: MinecaRTS.Camera.MinimapRect
      commentId: P:MinecaRTS.Camera.MinimapRect
      language: CSharp
      name:
        CSharp: MinimapRect
        VB: MinimapRect
      nameWithType:
        CSharp: Camera.MinimapRect
        VB: Camera.MinimapRect
      qualifiedName:
        CSharp: MinecaRTS.Camera.MinimapRect
        VB: MinecaRTS.Camera.MinimapRect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MinimapRect
        path: MinecaRTS/Render/Camera.cs
        startLine: 62
      syntax:
        content:
          CSharp: public static Rectangle MinimapRect { get; }
          VB: Public Shared ReadOnly Property MinimapRect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Camera.MinimapRect*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: MinecaRTS.Camera.MoveBy(System.Int32,System.Int32)
      commentId: M:MinecaRTS.Camera.MoveBy(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: MoveBy(Int32, Int32)
        VB: MoveBy(Int32, Int32)
      nameWithType:
        CSharp: Camera.MoveBy(Int32, Int32)
        VB: Camera.MoveBy(Int32, Int32)
      qualifiedName:
        CSharp: MinecaRTS.Camera.MoveBy(System.Int32, System.Int32)
        VB: MinecaRTS.Camera.MoveBy(System.Int32, System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MoveBy
        path: MinecaRTS/Render/Camera.cs
        startLine: 67
      syntax:
        content:
          CSharp: public static void MoveBy(int x, int y)
          VB: Public Shared Sub MoveBy(x As Integer, y As Integer)
        parameters:
        - id: x
          type: System.Int32
        - id: y
          type: System.Int32
      overload: MinecaRTS.Camera.MoveBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.MoveBy(Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.Camera.MoveBy(Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: MoveBy(Point)
        VB: MoveBy(Point)
      nameWithType:
        CSharp: Camera.MoveBy(Point)
        VB: Camera.MoveBy(Point)
      qualifiedName:
        CSharp: MinecaRTS.Camera.MoveBy(Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.Camera.MoveBy(Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MoveBy
        path: MinecaRTS/Render/Camera.cs
        startLine: 73
      syntax:
        content:
          CSharp: public static void MoveBy(Point pt)
          VB: Public Shared Sub MoveBy(pt As Point)
        parameters:
        - id: pt
          type: Microsoft.Xna.Framework.Point
      overload: MinecaRTS.Camera.MoveBy*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.MoveTo(System.Int32,System.Int32)
      commentId: M:MinecaRTS.Camera.MoveTo(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: MoveTo(Int32, Int32)
        VB: MoveTo(Int32, Int32)
      nameWithType:
        CSharp: Camera.MoveTo(Int32, Int32)
        VB: Camera.MoveTo(Int32, Int32)
      qualifiedName:
        CSharp: MinecaRTS.Camera.MoveTo(System.Int32, System.Int32)
        VB: MinecaRTS.Camera.MoveTo(System.Int32, System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MoveTo
        path: MinecaRTS/Render/Camera.cs
        startLine: 79
      syntax:
        content:
          CSharp: public static void MoveTo(int x, int y)
          VB: Public Shared Sub MoveTo(x As Integer, y As Integer)
        parameters:
        - id: x
          type: System.Int32
        - id: y
          type: System.Int32
      overload: MinecaRTS.Camera.MoveTo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.MoveTo(Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.Camera.MoveTo(Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: MoveTo(Point)
        VB: MoveTo(Point)
      nameWithType:
        CSharp: Camera.MoveTo(Point)
        VB: Camera.MoveTo(Point)
      qualifiedName:
        CSharp: MinecaRTS.Camera.MoveTo(Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.Camera.MoveTo(Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MoveTo
        path: MinecaRTS/Render/Camera.cs
        startLine: 85
      syntax:
        content:
          CSharp: public static void MoveTo(Point pt)
          VB: Public Shared Sub MoveTo(pt As Point)
        parameters:
        - id: pt
          type: Microsoft.Xna.Framework.Point
      overload: MinecaRTS.Camera.MoveTo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.VecToWorld(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Camera.VecToWorld(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: VecToWorld(Vector2)
        VB: VecToWorld(Vector2)
      nameWithType:
        CSharp: Camera.VecToWorld(Vector2)
        VB: Camera.VecToWorld(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Camera.VecToWorld(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Camera.VecToWorld(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: VecToWorld
        path: MinecaRTS/Render/Camera.cs
        startLine: 91
      syntax:
        content:
          CSharp: public static Vector2 VecToWorld(Vector2 v)
          VB: Public Shared Function VecToWorld(v As Vector2) As Vector2
        parameters:
        - id: v
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Camera.VecToWorld*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.PtToWorld(Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.Camera.PtToWorld(Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: PtToWorld(Point)
        VB: PtToWorld(Point)
      nameWithType:
        CSharp: Camera.PtToWorld(Point)
        VB: Camera.PtToWorld(Point)
      qualifiedName:
        CSharp: MinecaRTS.Camera.PtToWorld(Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.Camera.PtToWorld(Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: PtToWorld
        path: MinecaRTS/Render/Camera.cs
        startLine: 96
      syntax:
        content:
          CSharp: public static Point PtToWorld(Point p)
          VB: Public Shared Function PtToWorld(p As Point) As Point
        parameters:
        - id: p
          type: Microsoft.Xna.Framework.Point
        return:
          type: Microsoft.Xna.Framework.Point
      overload: MinecaRTS.Camera.PtToWorld*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.XToWorld(System.Single)
      commentId: M:MinecaRTS.Camera.XToWorld(System.Single)
      language: CSharp
      name:
        CSharp: XToWorld(Single)
        VB: XToWorld(Single)
      nameWithType:
        CSharp: Camera.XToWorld(Single)
        VB: Camera.XToWorld(Single)
      qualifiedName:
        CSharp: MinecaRTS.Camera.XToWorld(System.Single)
        VB: MinecaRTS.Camera.XToWorld(System.Single)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: XToWorld
        path: MinecaRTS/Render/Camera.cs
        startLine: 101
      syntax:
        content:
          CSharp: public static float XToWorld(float x)
          VB: Public Shared Function XToWorld(x As Single) As Single
        parameters:
        - id: x
          type: System.Single
        return:
          type: System.Single
      overload: MinecaRTS.Camera.XToWorld*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.YToWorld(System.Single)
      commentId: M:MinecaRTS.Camera.YToWorld(System.Single)
      language: CSharp
      name:
        CSharp: YToWorld(Single)
        VB: YToWorld(Single)
      nameWithType:
        CSharp: Camera.YToWorld(Single)
        VB: Camera.YToWorld(Single)
      qualifiedName:
        CSharp: MinecaRTS.Camera.YToWorld(System.Single)
        VB: MinecaRTS.Camera.YToWorld(System.Single)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: YToWorld
        path: MinecaRTS/Render/Camera.cs
        startLine: 106
      syntax:
        content:
          CSharp: public static float YToWorld(float y)
          VB: Public Shared Function YToWorld(y As Single) As Single
        parameters:
        - id: y
          type: System.Single
        return:
          type: System.Single
      overload: MinecaRTS.Camera.YToWorld*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.VecToScreen(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Camera.VecToScreen(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: VecToScreen(Vector2)
        VB: VecToScreen(Vector2)
      nameWithType:
        CSharp: Camera.VecToScreen(Vector2)
        VB: Camera.VecToScreen(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Camera.VecToScreen(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Camera.VecToScreen(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: VecToScreen
        path: MinecaRTS/Render/Camera.cs
        startLine: 111
      syntax:
        content:
          CSharp: public static Vector2 VecToScreen(Vector2 v)
          VB: Public Shared Function VecToScreen(v As Vector2) As Vector2
        parameters:
        - id: v
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Camera.VecToScreen*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.PtToScreen(Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.Camera.PtToScreen(Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: PtToScreen(Point)
        VB: PtToScreen(Point)
      nameWithType:
        CSharp: Camera.PtToScreen(Point)
        VB: Camera.PtToScreen(Point)
      qualifiedName:
        CSharp: MinecaRTS.Camera.PtToScreen(Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.Camera.PtToScreen(Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: PtToScreen
        path: MinecaRTS/Render/Camera.cs
        startLine: 116
      syntax:
        content:
          CSharp: public static Point PtToScreen(Point p)
          VB: Public Shared Function PtToScreen(p As Point) As Point
        parameters:
        - id: p
          type: Microsoft.Xna.Framework.Point
        return:
          type: Microsoft.Xna.Framework.Point
      overload: MinecaRTS.Camera.PtToScreen*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.XToScreen(System.Single)
      commentId: M:MinecaRTS.Camera.XToScreen(System.Single)
      language: CSharp
      name:
        CSharp: XToScreen(Single)
        VB: XToScreen(Single)
      nameWithType:
        CSharp: Camera.XToScreen(Single)
        VB: Camera.XToScreen(Single)
      qualifiedName:
        CSharp: MinecaRTS.Camera.XToScreen(System.Single)
        VB: MinecaRTS.Camera.XToScreen(System.Single)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: XToScreen
        path: MinecaRTS/Render/Camera.cs
        startLine: 121
      syntax:
        content:
          CSharp: public static float XToScreen(float x)
          VB: Public Shared Function XToScreen(x As Single) As Single
        parameters:
        - id: x
          type: System.Single
        return:
          type: System.Single
      overload: MinecaRTS.Camera.XToScreen*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.YToScreen(System.Single)
      commentId: M:MinecaRTS.Camera.YToScreen(System.Single)
      language: CSharp
      name:
        CSharp: YToScreen(Single)
        VB: YToScreen(Single)
      nameWithType:
        CSharp: Camera.YToScreen(Single)
        VB: Camera.YToScreen(Single)
      qualifiedName:
        CSharp: MinecaRTS.Camera.YToScreen(System.Single)
        VB: MinecaRTS.Camera.YToScreen(System.Single)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: YToScreen
        path: MinecaRTS/Render/Camera.cs
        startLine: 126
      syntax:
        content:
          CSharp: public static float YToScreen(float y)
          VB: Public Shared Function YToScreen(y As Single) As Single
        parameters:
        - id: y
          type: System.Single
        return:
          type: System.Single
      overload: MinecaRTS.Camera.YToScreen*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.RectToWorld(Microsoft.Xna.Framework.Rectangle)
      commentId: M:MinecaRTS.Camera.RectToWorld(Microsoft.Xna.Framework.Rectangle)
      language: CSharp
      name:
        CSharp: RectToWorld(Rectangle)
        VB: RectToWorld(Rectangle)
      nameWithType:
        CSharp: Camera.RectToWorld(Rectangle)
        VB: Camera.RectToWorld(Rectangle)
      qualifiedName:
        CSharp: MinecaRTS.Camera.RectToWorld(Microsoft.Xna.Framework.Rectangle)
        VB: MinecaRTS.Camera.RectToWorld(Microsoft.Xna.Framework.Rectangle)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RectToWorld
        path: MinecaRTS/Render/Camera.cs
        startLine: 131
      syntax:
        content:
          CSharp: public static Rectangle RectToWorld(Rectangle rect)
          VB: Public Shared Function RectToWorld(rect As Rectangle) As Rectangle
        parameters:
        - id: rect
          type: Microsoft.Xna.Framework.Rectangle
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Camera.RectToWorld*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.RectToScreen(Microsoft.Xna.Framework.Rectangle)
      commentId: M:MinecaRTS.Camera.RectToScreen(Microsoft.Xna.Framework.Rectangle)
      language: CSharp
      name:
        CSharp: RectToScreen(Rectangle)
        VB: RectToScreen(Rectangle)
      nameWithType:
        CSharp: Camera.RectToScreen(Rectangle)
        VB: Camera.RectToScreen(Rectangle)
      qualifiedName:
        CSharp: MinecaRTS.Camera.RectToScreen(Microsoft.Xna.Framework.Rectangle)
        VB: MinecaRTS.Camera.RectToScreen(Microsoft.Xna.Framework.Rectangle)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RectToScreen
        path: MinecaRTS/Render/Camera.cs
        startLine: 136
      syntax:
        content:
          CSharp: public static Rectangle RectToScreen(Rectangle rect)
          VB: Public Shared Function RectToScreen(rect As Rectangle) As Rectangle
        parameters:
        - id: rect
          type: Microsoft.Xna.Framework.Rectangle
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Camera.RectToScreen*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.WorldRectToMinimapRect(Microsoft.Xna.Framework.Rectangle)
      commentId: M:MinecaRTS.Camera.WorldRectToMinimapRect(Microsoft.Xna.Framework.Rectangle)
      language: CSharp
      name:
        CSharp: WorldRectToMinimapRect(Rectangle)
        VB: WorldRectToMinimapRect(Rectangle)
      nameWithType:
        CSharp: Camera.WorldRectToMinimapRect(Rectangle)
        VB: Camera.WorldRectToMinimapRect(Rectangle)
      qualifiedName:
        CSharp: MinecaRTS.Camera.WorldRectToMinimapRect(Microsoft.Xna.Framework.Rectangle)
        VB: MinecaRTS.Camera.WorldRectToMinimapRect(Microsoft.Xna.Framework.Rectangle)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: WorldRectToMinimapRect
        path: MinecaRTS/Render/Camera.cs
        startLine: 141
      syntax:
        content:
          CSharp: public static Rectangle WorldRectToMinimapRect(Rectangle rect)
          VB: Public Shared Function WorldRectToMinimapRect(rect As Rectangle) As Rectangle
        parameters:
        - id: rect
          type: Microsoft.Xna.Framework.Rectangle
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Camera.WorldRectToMinimapRect*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Camera.LookAt(Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.Camera.LookAt(Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: LookAt(Point)
        VB: LookAt(Point)
      nameWithType:
        CSharp: Camera.LookAt(Point)
        VB: Camera.LookAt(Point)
      qualifiedName:
        CSharp: MinecaRTS.Camera.LookAt(Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.Camera.LookAt(Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/Camera.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: LookAt
        path: MinecaRTS/Render/Camera.cs
        startLine: 152
      syntax:
        content:
          CSharp: public static void LookAt(Point pos)
          VB: Public Shared Sub LookAt(pos As Point)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Point
      overload: MinecaRTS.Camera.LookAt*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: MinecaRTS.Cell
    commentId: T:MinecaRTS.Cell
    language: CSharp
    name:
      CSharp: Cell
      VB: Cell
    nameWithType:
      CSharp: Cell
      VB: Cell
    qualifiedName:
      CSharp: MinecaRTS.Cell
      VB: MinecaRTS.Cell
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Core/Cell.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Cell
      path: MinecaRTS/Core/Cell.cs
      startLine: 11
    syntax:
      content:
        CSharp: public class Cell
        VB: Public Class Cell
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Cell.Size
      commentId: P:MinecaRTS.Cell.Size
      language: CSharp
      name:
        CSharp: Size
        VB: Size
      nameWithType:
        CSharp: Cell.Size
        VB: Cell.Size
      qualifiedName:
        CSharp: MinecaRTS.Cell.Size
        VB: MinecaRTS.Cell.Size
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Size
        path: MinecaRTS/Core/Cell.cs
        startLine: 15
      syntax:
        content:
          CSharp: public int Size { get; }
          VB: Public ReadOnly Property Size As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Cell.Size*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Cell.Pos
      commentId: P:MinecaRTS.Cell.Pos
      language: CSharp
      name:
        CSharp: Pos
        VB: Pos
      nameWithType:
        CSharp: Cell.Pos
        VB: Cell.Pos
      qualifiedName:
        CSharp: MinecaRTS.Cell.Pos
        VB: MinecaRTS.Cell.Pos
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Pos
        path: MinecaRTS/Core/Cell.cs
        startLine: 23
      summary: "\nThe position of the cell.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Pos { get; set; }
          VB: Public Property Pos As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Cell.Pos*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MinecaRTS.Cell.Color
      commentId: P:MinecaRTS.Cell.Color
      language: CSharp
      name:
        CSharp: Color
        VB: Color
      nameWithType:
        CSharp: Cell.Color
        VB: Cell.Color
      qualifiedName:
        CSharp: MinecaRTS.Cell.Color
        VB: MinecaRTS.Cell.Color
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Color
        path: MinecaRTS/Core/Cell.cs
        startLine: 28
      summary: "\nThe color.\n"
      example: []
      syntax:
        content:
          CSharp: public Color Color { get; set; }
          VB: Public Property Color As Color
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Color
      overload: MinecaRTS.Cell.Color*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MinecaRTS.Cell.Neighbours
      commentId: F:MinecaRTS.Cell.Neighbours
      language: CSharp
      name:
        CSharp: Neighbours
        VB: Neighbours
      nameWithType:
        CSharp: Cell.Neighbours
        VB: Cell.Neighbours
      qualifiedName:
        CSharp: MinecaRTS.Cell.Neighbours
        VB: MinecaRTS.Cell.Neighbours
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Neighbours
        path: MinecaRTS/Core/Cell.cs
        startLine: 33
      syntax:
        content:
          CSharp: public List<Cell> Neighbours
          VB: Public Neighbours As List(Of Cell)
        return:
          type: System.Collections.Generic.List{MinecaRTS.Cell}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Cell.Passable
      commentId: P:MinecaRTS.Cell.Passable
      language: CSharp
      name:
        CSharp: Passable
        VB: Passable
      nameWithType:
        CSharp: Cell.Passable
        VB: Cell.Passable
      qualifiedName:
        CSharp: MinecaRTS.Cell.Passable
        VB: MinecaRTS.Cell.Passable
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Passable
        path: MinecaRTS/Core/Cell.cs
        startLine: 39
      summary: "\nWhether or not the cell can be walked on.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Passable { get; set; }
          VB: Public Property Passable As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: MinecaRTS.Cell.Passable*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MinecaRTS.Cell.Parent
      commentId: F:MinecaRTS.Cell.Parent
      language: CSharp
      name:
        CSharp: Parent
        VB: Parent
      nameWithType:
        CSharp: Cell.Parent
        VB: Cell.Parent
      qualifiedName:
        CSharp: MinecaRTS.Cell.Parent
        VB: MinecaRTS.Cell.Parent
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Parent
        path: MinecaRTS/Core/Cell.cs
        startLine: 44
      summary: "\nThe parent of the cell in graph traversal.\n"
      example: []
      syntax:
        content:
          CSharp: public Cell Parent
          VB: Public Parent As Cell
        return:
          type: MinecaRTS.Cell
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Cell.Score
      commentId: F:MinecaRTS.Cell.Score
      language: CSharp
      name:
        CSharp: Score
        VB: Score
      nameWithType:
        CSharp: Cell.Score
        VB: Cell.Score
      qualifiedName:
        CSharp: MinecaRTS.Cell.Score
        VB: MinecaRTS.Cell.Score
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Score
        path: MinecaRTS/Core/Cell.cs
        startLine: 49
      summary: "\nThe score associated with this cell in the path being calculated.\n"
      example: []
      syntax:
        content:
          CSharp: public float Score
          VB: Public Score As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Cell.CollisionRect
      commentId: P:MinecaRTS.Cell.CollisionRect
      language: CSharp
      name:
        CSharp: CollisionRect
        VB: CollisionRect
      nameWithType:
        CSharp: Cell.CollisionRect
        VB: Cell.CollisionRect
      qualifiedName:
        CSharp: MinecaRTS.Cell.CollisionRect
        VB: MinecaRTS.Cell.CollisionRect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CollisionRect
        path: MinecaRTS/Core/Cell.cs
        startLine: 55
      summary: "\nThe world coordinate rectangle used for collisions.\n"
      example: []
      syntax:
        content:
          CSharp: public Rectangle CollisionRect { get; }
          VB: Public ReadOnly Property CollisionRect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Cell.CollisionRect*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Cell.Mid
      commentId: P:MinecaRTS.Cell.Mid
      language: CSharp
      name:
        CSharp: Mid
        VB: Mid
      nameWithType:
        CSharp: Cell.Mid
        VB: Cell.Mid
      qualifiedName:
        CSharp: MinecaRTS.Cell.Mid
        VB: MinecaRTS.Cell.Mid
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Mid
        path: MinecaRTS/Core/Cell.cs
        startLine: 63
      summary: "\nThe mid point of the collision rectangle.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Mid { get; }
          VB: Public ReadOnly Property Mid As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Cell.Mid*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Cell.RenderRect
      commentId: P:MinecaRTS.Cell.RenderRect
      language: CSharp
      name:
        CSharp: RenderRect
        VB: RenderRect
      nameWithType:
        CSharp: Cell.RenderRect
        VB: Cell.RenderRect
      qualifiedName:
        CSharp: MinecaRTS.Cell.RenderRect
        VB: MinecaRTS.Cell.RenderRect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderRect
        path: MinecaRTS/Core/Cell.cs
        startLine: 71
      summary: "\nThe screen coordinate rectangle used for rendering.\n"
      example: []
      syntax:
        content:
          CSharp: public Rectangle RenderRect { get; }
          VB: Public ReadOnly Property RenderRect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Cell.RenderRect*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Cell.RenderMid
      commentId: P:MinecaRTS.Cell.RenderMid
      language: CSharp
      name:
        CSharp: RenderMid
        VB: RenderMid
      nameWithType:
        CSharp: Cell.RenderMid
        VB: Cell.RenderMid
      qualifiedName:
        CSharp: MinecaRTS.Cell.RenderMid
        VB: MinecaRTS.Cell.RenderMid
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderMid
        path: MinecaRTS/Core/Cell.cs
        startLine: 79
      summary: "\nThe mid point of the render rectangle.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 RenderMid { get; }
          VB: Public ReadOnly Property RenderMid As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Cell.RenderMid*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Cell.#ctor(Microsoft.Xna.Framework.Vector2,System.Int32)
      commentId: M:MinecaRTS.Cell.#ctor(Microsoft.Xna.Framework.Vector2,System.Int32)
      language: CSharp
      name:
        CSharp: Cell(Vector2, Int32)
        VB: Cell(Vector2, Int32)
      nameWithType:
        CSharp: Cell.Cell(Vector2, Int32)
        VB: Cell.Cell(Vector2, Int32)
      qualifiedName:
        CSharp: MinecaRTS.Cell.Cell(Microsoft.Xna.Framework.Vector2, System.Int32)
        VB: MinecaRTS.Cell.Cell(Microsoft.Xna.Framework.Vector2, System.Int32)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Core/Cell.cs
        startLine: 89
      summary: "\nInitialises cell values.\n"
      example: []
      syntax:
        content:
          CSharp: public Cell(Vector2 pos, int size)
          VB: Public Sub New(pos As Vector2, size As Integer)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: size
          type: System.Int32
      overload: MinecaRTS.Cell.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Cell.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Cell.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: Cell.Render(SpriteBatch)
        VB: Cell.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Cell.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Cell.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Cell.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Core/Cell.cs
        startLine: 101
      summary: "\nRenders a black rectangle around the cell border.\n"
      example: []
      syntax:
        content:
          CSharp: public void Render(SpriteBatch spriteBatch)
          VB: Public Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
          description: The SpriteBatch to render to.
      overload: MinecaRTS.Cell.Render*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.DebugOp
    commentId: T:MinecaRTS.DebugOp
    language: CSharp
    name:
      CSharp: DebugOp
      VB: DebugOp
    nameWithType:
      CSharp: DebugOp
      VB: DebugOp
    qualifiedName:
      CSharp: MinecaRTS.DebugOp
      VB: MinecaRTS.DebugOp
    type: Enum
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/EditAndDebug/Debug.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: DebugOp
      path: MinecaRTS/EditAndDebug/Debug.cs
      startLine: 11
    syntax:
      content:
        CSharp: public enum DebugOp
        VB: Public Enum DebugOp
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: MinecaRTS.DebugOp.ShowPaths
      commentId: F:MinecaRTS.DebugOp.ShowPaths
      language: CSharp
      name:
        CSharp: ShowPaths
        VB: ShowPaths
      nameWithType:
        CSharp: DebugOp.ShowPaths
        VB: DebugOp.ShowPaths
      qualifiedName:
        CSharp: MinecaRTS.DebugOp.ShowPaths
        VB: MinecaRTS.DebugOp.ShowPaths
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ShowPaths
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 13
      syntax:
        content:
          CSharp: ShowPaths = 1
          VB: ShowPaths = 1
        return:
          type: MinecaRTS.DebugOp
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.DebugOp.ShowGrid
      commentId: F:MinecaRTS.DebugOp.ShowGrid
      language: CSharp
      name:
        CSharp: ShowGrid
        VB: ShowGrid
      nameWithType:
        CSharp: DebugOp.ShowGrid
        VB: DebugOp.ShowGrid
      qualifiedName:
        CSharp: MinecaRTS.DebugOp.ShowGrid
        VB: MinecaRTS.DebugOp.ShowGrid
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ShowGrid
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 14
      syntax:
        content:
          CSharp: ShowGrid = 2
          VB: ShowGrid = 2
        return:
          type: MinecaRTS.DebugOp
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.DebugOp.CalcPath
      commentId: F:MinecaRTS.DebugOp.CalcPath
      language: CSharp
      name:
        CSharp: CalcPath
        VB: CalcPath
      nameWithType:
        CSharp: DebugOp.CalcPath
        VB: DebugOp.CalcPath
      qualifiedName:
        CSharp: MinecaRTS.DebugOp.CalcPath
        VB: MinecaRTS.DebugOp.CalcPath
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CalcPath
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 15
      syntax:
        content:
          CSharp: CalcPath = 3
          VB: CalcPath = 3
        return:
          type: MinecaRTS.DebugOp
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.DebugOp.CalcPathSmoothing
      commentId: F:MinecaRTS.DebugOp.CalcPathSmoothing
      language: CSharp
      name:
        CSharp: CalcPathSmoothing
        VB: CalcPathSmoothing
      nameWithType:
        CSharp: DebugOp.CalcPathSmoothing
        VB: DebugOp.CalcPathSmoothing
      qualifiedName:
        CSharp: MinecaRTS.DebugOp.CalcPathSmoothing
        VB: MinecaRTS.DebugOp.CalcPathSmoothing
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CalcPathSmoothing
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 16
      syntax:
        content:
          CSharp: CalcPathSmoothing = 4
          VB: CalcPathSmoothing = 4
        return:
          type: MinecaRTS.DebugOp
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.DebugOp.ShowUnitFeelers
      commentId: F:MinecaRTS.DebugOp.ShowUnitFeelers
      language: CSharp
      name:
        CSharp: ShowUnitFeelers
        VB: ShowUnitFeelers
      nameWithType:
        CSharp: DebugOp.ShowUnitFeelers
        VB: DebugOp.ShowUnitFeelers
      qualifiedName:
        CSharp: MinecaRTS.DebugOp.ShowUnitFeelers
        VB: MinecaRTS.DebugOp.ShowUnitFeelers
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ShowUnitFeelers
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 17
      syntax:
        content:
          CSharp: ShowUnitFeelers = 5
          VB: ShowUnitFeelers = 5
        return:
          type: MinecaRTS.DebugOp
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.DebugOp.ShowWallPushForce
      commentId: F:MinecaRTS.DebugOp.ShowWallPushForce
      language: CSharp
      name:
        CSharp: ShowWallPushForce
        VB: ShowWallPushForce
      nameWithType:
        CSharp: DebugOp.ShowWallPushForce
        VB: DebugOp.ShowWallPushForce
      qualifiedName:
        CSharp: MinecaRTS.DebugOp.ShowWallPushForce
        VB: MinecaRTS.DebugOp.ShowWallPushForce
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ShowWallPushForce
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 18
      syntax:
        content:
          CSharp: ShowWallPushForce = 6
          VB: ShowWallPushForce = 6
        return:
          type: MinecaRTS.DebugOp
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.DebugOp.ShowStates
      commentId: F:MinecaRTS.DebugOp.ShowStates
      language: CSharp
      name:
        CSharp: ShowStates
        VB: ShowStates
      nameWithType:
        CSharp: DebugOp.ShowStates
        VB: DebugOp.ShowStates
      qualifiedName:
        CSharp: MinecaRTS.DebugOp.ShowStates
        VB: MinecaRTS.DebugOp.ShowStates
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ShowStates
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 19
      syntax:
        content:
          CSharp: ShowStates = 7
          VB: ShowStates = 7
        return:
          type: MinecaRTS.DebugOp
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.DebugOp.ShowCoarseGrid
      commentId: F:MinecaRTS.DebugOp.ShowCoarseGrid
      language: CSharp
      name:
        CSharp: ShowCoarseGrid
        VB: ShowCoarseGrid
      nameWithType:
        CSharp: DebugOp.ShowCoarseGrid
        VB: DebugOp.ShowCoarseGrid
      qualifiedName:
        CSharp: MinecaRTS.DebugOp.ShowCoarseGrid
        VB: MinecaRTS.DebugOp.ShowCoarseGrid
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ShowCoarseGrid
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 20
      syntax:
        content:
          CSharp: ShowCoarseGrid = 8
          VB: ShowCoarseGrid = 8
        return:
          type: MinecaRTS.DebugOp
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.DebugOp.ShowFogOfWar
      commentId: F:MinecaRTS.DebugOp.ShowFogOfWar
      language: CSharp
      name:
        CSharp: ShowFogOfWar
        VB: ShowFogOfWar
      nameWithType:
        CSharp: DebugOp.ShowFogOfWar
        VB: DebugOp.ShowFogOfWar
      qualifiedName:
        CSharp: MinecaRTS.DebugOp.ShowFogOfWar
        VB: MinecaRTS.DebugOp.ShowFogOfWar
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ShowFogOfWar
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 21
      syntax:
        content:
          CSharp: ShowFogOfWar = 9
          VB: ShowFogOfWar = 9
        return:
          type: MinecaRTS.DebugOp
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.DebugOp.EnableTimeSlicedPathing
      commentId: F:MinecaRTS.DebugOp.EnableTimeSlicedPathing
      language: CSharp
      name:
        CSharp: EnableTimeSlicedPathing
        VB: EnableTimeSlicedPathing
      nameWithType:
        CSharp: DebugOp.EnableTimeSlicedPathing
        VB: DebugOp.EnableTimeSlicedPathing
      qualifiedName:
        CSharp: MinecaRTS.DebugOp.EnableTimeSlicedPathing
        VB: MinecaRTS.DebugOp.EnableTimeSlicedPathing
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: EnableTimeSlicedPathing
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 22
      syntax:
        content:
          CSharp: EnableTimeSlicedPathing = 10
          VB: EnableTimeSlicedPathing = 10
        return:
          type: MinecaRTS.DebugOp
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.DebugOp.Count
      commentId: F:MinecaRTS.DebugOp.Count
      language: CSharp
      name:
        CSharp: Count
        VB: Count
      nameWithType:
        CSharp: DebugOp.Count
        VB: DebugOp.Count
      qualifiedName:
        CSharp: MinecaRTS.DebugOp.Count
        VB: MinecaRTS.DebugOp.Count
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Count
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 23
      syntax:
        content:
          CSharp: Count = 11
          VB: Count = 11
        return:
          type: MinecaRTS.DebugOp
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: MinecaRTS.Debug
    commentId: T:MinecaRTS.Debug
    language: CSharp
    name:
      CSharp: Debug
      VB: Debug
    nameWithType:
      CSharp: Debug
      VB: Debug
    qualifiedName:
      CSharp: MinecaRTS.Debug
      VB: MinecaRTS.Debug
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/EditAndDebug/Debug.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Debug
      path: MinecaRTS/EditAndDebug/Debug.cs
      startLine: 26
    syntax:
      content:
        CSharp: public static class Debug
        VB: Public Module Debug
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: MinecaRTS.Debug.debugFont
      commentId: F:MinecaRTS.Debug.debugFont
      language: CSharp
      name:
        CSharp: debugFont
        VB: debugFont
      nameWithType:
        CSharp: Debug.debugFont
        VB: Debug.debugFont
      qualifiedName:
        CSharp: MinecaRTS.Debug.debugFont
        VB: MinecaRTS.Debug.debugFont
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: debugFont
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 28
      syntax:
        content:
          CSharp: public static SpriteFont debugFont
          VB: Public Shared debugFont As SpriteFont
        return:
          type: Microsoft.Xna.Framework.Graphics.SpriteFont
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Debug.Init
      commentId: M:MinecaRTS.Debug.Init
      language: CSharp
      name:
        CSharp: Init()
        VB: Init()
      nameWithType:
        CSharp: Debug.Init()
        VB: Debug.Init()
      qualifiedName:
        CSharp: MinecaRTS.Debug.Init()
        VB: MinecaRTS.Debug.Init()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Init
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 34
      syntax:
        content:
          CSharp: public static void Init()
          VB: Public Shared Sub Init
      overload: MinecaRTS.Debug.Init*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Debug.HandleInput
      commentId: M:MinecaRTS.Debug.HandleInput
      language: CSharp
      name:
        CSharp: HandleInput()
        VB: HandleInput()
      nameWithType:
        CSharp: Debug.HandleInput()
        VB: Debug.HandleInput()
      qualifiedName:
        CSharp: MinecaRTS.Debug.HandleInput()
        VB: MinecaRTS.Debug.HandleInput()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleInput
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 48
      syntax:
        content:
          CSharp: public static void HandleInput()
          VB: Public Shared Sub HandleInput
      overload: MinecaRTS.Debug.HandleInput*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Debug.IsOn(MinecaRTS.DebugOp)
      commentId: M:MinecaRTS.Debug.IsOn(MinecaRTS.DebugOp)
      language: CSharp
      name:
        CSharp: IsOn(DebugOp)
        VB: IsOn(DebugOp)
      nameWithType:
        CSharp: Debug.IsOn(DebugOp)
        VB: Debug.IsOn(DebugOp)
      qualifiedName:
        CSharp: MinecaRTS.Debug.IsOn(MinecaRTS.DebugOp)
        VB: MinecaRTS.Debug.IsOn(MinecaRTS.DebugOp)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: IsOn
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 81
      syntax:
        content:
          CSharp: public static bool IsOn(DebugOp setting)
          VB: Public Shared Function IsOn(setting As DebugOp) As Boolean
        parameters:
        - id: setting
          type: MinecaRTS.DebugOp
        return:
          type: System.Boolean
      overload: MinecaRTS.Debug.IsOn*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Debug.RenderDebugOptionStates(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Debug.RenderDebugOptionStates(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderDebugOptionStates(SpriteBatch)
        VB: RenderDebugOptionStates(SpriteBatch)
      nameWithType:
        CSharp: Debug.RenderDebugOptionStates(SpriteBatch)
        VB: Debug.RenderDebugOptionStates(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Debug.RenderDebugOptionStates(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Debug.RenderDebugOptionStates(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderDebugOptionStates
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 86
      syntax:
        content:
          CSharp: public static void RenderDebugOptionStates(SpriteBatch spriteBatch)
          VB: Public Shared Sub RenderDebugOptionStates(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Debug.RenderDebugOptionStates*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Debug.ClearHookedText
      commentId: M:MinecaRTS.Debug.ClearHookedText
      language: CSharp
      name:
        CSharp: ClearHookedText()
        VB: ClearHookedText()
      nameWithType:
        CSharp: Debug.ClearHookedText()
        VB: Debug.ClearHookedText()
      qualifiedName:
        CSharp: MinecaRTS.Debug.ClearHookedText()
        VB: MinecaRTS.Debug.ClearHookedText()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ClearHookedText
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 102
      syntax:
        content:
          CSharp: public static void ClearHookedText()
          VB: Public Shared Sub ClearHookedText
      overload: MinecaRTS.Debug.ClearHookedText*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Debug.HookText(System.String)
      commentId: M:MinecaRTS.Debug.HookText(System.String)
      language: CSharp
      name:
        CSharp: HookText(String)
        VB: HookText(String)
      nameWithType:
        CSharp: Debug.HookText(String)
        VB: Debug.HookText(String)
      qualifiedName:
        CSharp: MinecaRTS.Debug.HookText(System.String)
        VB: MinecaRTS.Debug.HookText(System.String)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HookText
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 107
      syntax:
        content:
          CSharp: public static void HookText(string text)
          VB: Public Shared Sub HookText(text As String)
        parameters:
        - id: text
          type: System.String
      overload: MinecaRTS.Debug.HookText*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Debug.RenderHookedText(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Debug.RenderHookedText(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderHookedText(SpriteBatch)
        VB: RenderHookedText(SpriteBatch)
      nameWithType:
        CSharp: Debug.RenderHookedText(SpriteBatch)
        VB: Debug.RenderHookedText(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Debug.RenderHookedText(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Debug.RenderHookedText(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/Debug.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderHookedText
        path: MinecaRTS/EditAndDebug/Debug.cs
        startLine: 112
      syntax:
        content:
          CSharp: public static void RenderHookedText(SpriteBatch spriteBatch)
          VB: Public Shared Sub RenderHookedText(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Debug.RenderHookedText*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: MinecaRTS.Track
    commentId: T:MinecaRTS.Track
    language: CSharp
    name:
      CSharp: Track
      VB: Track
    nameWithType:
      CSharp: Track
      VB: Track
    qualifiedName:
      CSharp: MinecaRTS.Track
      VB: MinecaRTS.Track
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Buildings/Track.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Track
      path: MinecaRTS/Entities/Buildings/Track.cs
      startLine: 10
    syntax:
      content:
        CSharp: 'public class Track : Building, IRenderable, IHandleMessages'
        VB: >-
          Public Class Track

              Inherits Building

              Implements IRenderable, IHandleMessages
    inheritance:
    - System.Object
    - MinecaRTS.Entity
    - MinecaRTS.Building
    implements:
    - MinecaRTS.IRenderable
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.Building.ActiveTexture
    - MinecaRTS.Building.IsActive
    - MinecaRTS.Building.Team
    - MinecaRTS.Building.Construct
    - MinecaRTS.Building.Update
    - MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32)
    - MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
    - MinecaRTS.Building.ExitState
    - MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Entity.Pos
    - MinecaRTS.Entity.Scale
    - MinecaRTS.Entity.ID
    - MinecaRTS.Entity.RenderPos
    - MinecaRTS.Entity.CollisionRect
    - MinecaRTS.Entity.RenderRect
    - MinecaRTS.Entity.Mid
    - MinecaRTS.Entity.RenderMid
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Track.MAX_HEALTH
      commentId: F:MinecaRTS.Track.MAX_HEALTH
      language: CSharp
      name:
        CSharp: MAX_HEALTH
        VB: MAX_HEALTH
      nameWithType:
        CSharp: Track.MAX_HEALTH
        VB: Track.MAX_HEALTH
      qualifiedName:
        CSharp: MinecaRTS.Track.MAX_HEALTH
        VB: MinecaRTS.Track.MAX_HEALTH
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Track.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MAX_HEALTH
        path: MinecaRTS/Entities/Buildings/Track.cs
        startLine: 12
      syntax:
        content:
          CSharp: public const int MAX_HEALTH = 50
          VB: Public Const MAX_HEALTH As Integer = 50
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Track.ACTIVE_TEXTURE
      commentId: F:MinecaRTS.Track.ACTIVE_TEXTURE
      language: CSharp
      name:
        CSharp: ACTIVE_TEXTURE
        VB: ACTIVE_TEXTURE
      nameWithType:
        CSharp: Track.ACTIVE_TEXTURE
        VB: Track.ACTIVE_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.Track.ACTIVE_TEXTURE
        VB: MinecaRTS.Track.ACTIVE_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Track.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ACTIVE_TEXTURE
        path: MinecaRTS/Entities/Buildings/Track.cs
        startLine: 14
      syntax:
        content:
          CSharp: public static Texture2D ACTIVE_TEXTURE
          VB: Public Shared ACTIVE_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Track.CONSTRUCTION_TEXTURE
      commentId: F:MinecaRTS.Track.CONSTRUCTION_TEXTURE
      language: CSharp
      name:
        CSharp: CONSTRUCTION_TEXTURE
        VB: CONSTRUCTION_TEXTURE
      nameWithType:
        CSharp: Track.CONSTRUCTION_TEXTURE
        VB: Track.CONSTRUCTION_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.Track.CONSTRUCTION_TEXTURE
        VB: MinecaRTS.Track.CONSTRUCTION_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Track.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CONSTRUCTION_TEXTURE
        path: MinecaRTS/Entities/Buildings/Track.cs
        startLine: 15
      syntax:
        content:
          CSharp: public static Texture2D CONSTRUCTION_TEXTURE
          VB: Public Shared CONSTRUCTION_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Track.#ctor(Microsoft.Xna.Framework.Vector2,MinecaRTS.Team)
      commentId: M:MinecaRTS.Track.#ctor(Microsoft.Xna.Framework.Vector2,MinecaRTS.Team)
      language: CSharp
      name:
        CSharp: Track(Vector2, Team)
        VB: Track(Vector2, Team)
      nameWithType:
        CSharp: Track.Track(Vector2, Team)
        VB: Track.Track(Vector2, Team)
      qualifiedName:
        CSharp: MinecaRTS.Track.Track(Microsoft.Xna.Framework.Vector2, MinecaRTS.Team)
        VB: MinecaRTS.Track.Track(Microsoft.Xna.Framework.Vector2, MinecaRTS.Team)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/Track.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Entities/Buildings/Track.cs
        startLine: 17
      syntax:
        content:
          CSharp: public Track(Vector2 pos, Team team)
          VB: Public Sub New(pos As Vector2, team As Team)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: team
          type: MinecaRTS.Team
      overload: MinecaRTS.Track.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.TimeSlicedPathManager
    commentId: T:MinecaRTS.TimeSlicedPathManager
    language: CSharp
    name:
      CSharp: TimeSlicedPathManager
      VB: TimeSlicedPathManager
    nameWithType:
      CSharp: TimeSlicedPathManager
      VB: TimeSlicedPathManager
    qualifiedName:
      CSharp: MinecaRTS.TimeSlicedPathManager
      VB: MinecaRTS.TimeSlicedPathManager
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Pathing/TimeSlicedPathManager.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: TimeSlicedPathManager
      path: MinecaRTS/Pathing/TimeSlicedPathManager.cs
      startLine: 8
    syntax:
      content:
        CSharp: public static class TimeSlicedPathManager
        VB: Public Module TimeSlicedPathManager
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: MinecaRTS.TimeSlicedPathManager.SEARCH_CYCLES_PER_TICK
      commentId: F:MinecaRTS.TimeSlicedPathManager.SEARCH_CYCLES_PER_TICK
      language: CSharp
      name:
        CSharp: SEARCH_CYCLES_PER_TICK
        VB: SEARCH_CYCLES_PER_TICK
      nameWithType:
        CSharp: TimeSlicedPathManager.SEARCH_CYCLES_PER_TICK
        VB: TimeSlicedPathManager.SEARCH_CYCLES_PER_TICK
      qualifiedName:
        CSharp: MinecaRTS.TimeSlicedPathManager.SEARCH_CYCLES_PER_TICK
        VB: MinecaRTS.TimeSlicedPathManager.SEARCH_CYCLES_PER_TICK
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/TimeSlicedPathManager.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SEARCH_CYCLES_PER_TICK
        path: MinecaRTS/Pathing/TimeSlicedPathManager.cs
        startLine: 10
      syntax:
        content:
          CSharp: public const int SEARCH_CYCLES_PER_TICK = 100
          VB: Public Const SEARCH_CYCLES_PER_TICK As Integer = 100
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.TimeSlicedPathManager.AddSearch(MinecaRTS.Pathfinder)
      commentId: M:MinecaRTS.TimeSlicedPathManager.AddSearch(MinecaRTS.Pathfinder)
      language: CSharp
      name:
        CSharp: AddSearch(Pathfinder)
        VB: AddSearch(Pathfinder)
      nameWithType:
        CSharp: TimeSlicedPathManager.AddSearch(Pathfinder)
        VB: TimeSlicedPathManager.AddSearch(Pathfinder)
      qualifiedName:
        CSharp: MinecaRTS.TimeSlicedPathManager.AddSearch(MinecaRTS.Pathfinder)
        VB: MinecaRTS.TimeSlicedPathManager.AddSearch(MinecaRTS.Pathfinder)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/TimeSlicedPathManager.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddSearch
        path: MinecaRTS/Pathing/TimeSlicedPathManager.cs
        startLine: 13
      syntax:
        content:
          CSharp: public static void AddSearch(Pathfinder newSearch)
          VB: Public Shared Sub AddSearch(newSearch As Pathfinder)
        parameters:
        - id: newSearch
          type: MinecaRTS.Pathfinder
      overload: MinecaRTS.TimeSlicedPathManager.AddSearch*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.TimeSlicedPathManager.Update
      commentId: M:MinecaRTS.TimeSlicedPathManager.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: TimeSlicedPathManager.Update()
        VB: TimeSlicedPathManager.Update()
      qualifiedName:
        CSharp: MinecaRTS.TimeSlicedPathManager.Update()
        VB: MinecaRTS.TimeSlicedPathManager.Update()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/TimeSlicedPathManager.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Pathing/TimeSlicedPathManager.cs
        startLine: 19
      syntax:
        content:
          CSharp: public static void Update()
          VB: Public Shared Sub Update
      overload: MinecaRTS.TimeSlicedPathManager.Update*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: MinecaRTS.Dir
    commentId: T:MinecaRTS.Dir
    language: CSharp
    name:
      CSharp: Dir
      VB: Dir
    nameWithType:
      CSharp: Dir
      VB: Dir
    qualifiedName:
      CSharp: MinecaRTS.Dir
      VB: MinecaRTS.Dir
    type: Enum
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Utils/Dir.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Dir
      path: MinecaRTS/Utils/Dir.cs
      startLine: 8
    syntax:
      content:
        CSharp: public enum Dir
        VB: Public Enum Dir
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: MinecaRTS.Dir.S
      commentId: F:MinecaRTS.Dir.S
      language: CSharp
      name:
        CSharp: S
        VB: S
      nameWithType:
        CSharp: Dir.S
        VB: Dir.S
      qualifiedName:
        CSharp: MinecaRTS.Dir.S
        VB: MinecaRTS.Dir.S
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Dir.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: S
        path: MinecaRTS/Utils/Dir.cs
        startLine: 10
      syntax:
        content:
          CSharp: S = 0
          VB: S = 0
        return:
          type: MinecaRTS.Dir
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Dir.SW
      commentId: F:MinecaRTS.Dir.SW
      language: CSharp
      name:
        CSharp: SW
        VB: SW
      nameWithType:
        CSharp: Dir.SW
        VB: Dir.SW
      qualifiedName:
        CSharp: MinecaRTS.Dir.SW
        VB: MinecaRTS.Dir.SW
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Dir.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SW
        path: MinecaRTS/Utils/Dir.cs
        startLine: 11
      syntax:
        content:
          CSharp: SW = 1
          VB: SW = 1
        return:
          type: MinecaRTS.Dir
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Dir.W
      commentId: F:MinecaRTS.Dir.W
      language: CSharp
      name:
        CSharp: W
        VB: W
      nameWithType:
        CSharp: Dir.W
        VB: Dir.W
      qualifiedName:
        CSharp: MinecaRTS.Dir.W
        VB: MinecaRTS.Dir.W
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Dir.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: W
        path: MinecaRTS/Utils/Dir.cs
        startLine: 12
      syntax:
        content:
          CSharp: W = 2
          VB: W = 2
        return:
          type: MinecaRTS.Dir
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Dir.NW
      commentId: F:MinecaRTS.Dir.NW
      language: CSharp
      name:
        CSharp: NW
        VB: NW
      nameWithType:
        CSharp: Dir.NW
        VB: Dir.NW
      qualifiedName:
        CSharp: MinecaRTS.Dir.NW
        VB: MinecaRTS.Dir.NW
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Dir.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: NW
        path: MinecaRTS/Utils/Dir.cs
        startLine: 13
      syntax:
        content:
          CSharp: NW = 3
          VB: NW = 3
        return:
          type: MinecaRTS.Dir
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Dir.N
      commentId: F:MinecaRTS.Dir.N
      language: CSharp
      name:
        CSharp: N
        VB: N
      nameWithType:
        CSharp: Dir.N
        VB: Dir.N
      qualifiedName:
        CSharp: MinecaRTS.Dir.N
        VB: MinecaRTS.Dir.N
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Dir.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: N
        path: MinecaRTS/Utils/Dir.cs
        startLine: 14
      syntax:
        content:
          CSharp: N = 4
          VB: N = 4
        return:
          type: MinecaRTS.Dir
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Dir.NE
      commentId: F:MinecaRTS.Dir.NE
      language: CSharp
      name:
        CSharp: NE
        VB: NE
      nameWithType:
        CSharp: Dir.NE
        VB: Dir.NE
      qualifiedName:
        CSharp: MinecaRTS.Dir.NE
        VB: MinecaRTS.Dir.NE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Dir.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: NE
        path: MinecaRTS/Utils/Dir.cs
        startLine: 15
      syntax:
        content:
          CSharp: NE = 5
          VB: NE = 5
        return:
          type: MinecaRTS.Dir
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Dir.E
      commentId: F:MinecaRTS.Dir.E
      language: CSharp
      name:
        CSharp: E
        VB: E
      nameWithType:
        CSharp: Dir.E
        VB: Dir.E
      qualifiedName:
        CSharp: MinecaRTS.Dir.E
        VB: MinecaRTS.Dir.E
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Dir.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: E
        path: MinecaRTS/Utils/Dir.cs
        startLine: 16
      syntax:
        content:
          CSharp: E = 6
          VB: E = 6
        return:
          type: MinecaRTS.Dir
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Dir.SE
      commentId: F:MinecaRTS.Dir.SE
      language: CSharp
      name:
        CSharp: SE
        VB: SE
      nameWithType:
        CSharp: Dir.SE
        VB: Dir.SE
      qualifiedName:
        CSharp: MinecaRTS.Dir.SE
        VB: MinecaRTS.Dir.SE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Dir.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SE
        path: MinecaRTS/Utils/Dir.cs
        startLine: 17
      syntax:
        content:
          CSharp: SE = 7
          VB: SE = 7
        return:
          type: MinecaRTS.Dir
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Dir.Count
      commentId: F:MinecaRTS.Dir.Count
      language: CSharp
      name:
        CSharp: Count
        VB: Count
      nameWithType:
        CSharp: Dir.Count
        VB: Dir.Count
      qualifiedName:
        CSharp: MinecaRTS.Dir.Count
        VB: MinecaRTS.Dir.Count
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Dir.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Count
        path: MinecaRTS/Utils/Dir.cs
        startLine: 18
      syntax:
        content:
          CSharp: Count = 8
          VB: Count = 8
        return:
          type: MinecaRTS.Dir
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: MinecaRTS.Entity
    commentId: T:MinecaRTS.Entity
    language: CSharp
    name:
      CSharp: Entity
      VB: Entity
    nameWithType:
      CSharp: Entity
      VB: Entity
    qualifiedName:
      CSharp: MinecaRTS.Entity
      VB: MinecaRTS.Entity
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Entity.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Entity
      path: MinecaRTS/Entities/Entity.cs
      startLine: 16
    summary: "\nThe abstract base class from which all game entities inherit. Each entity has an id unique to the program lifetime \nwhich is auto assigned on object creation.\nEntity provides abstract methods for update, render, message handling and locating itself.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class Entity : IRenderable, IHandleMessages'
        VB: >-
          Public MustInherit Class Entity

              Implements IRenderable, IHandleMessages
    inheritance:
    - System.Object
    implements:
    - MinecaRTS.IRenderable
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: MinecaRTS.Entity.Pos
      commentId: F:MinecaRTS.Entity.Pos
      language: CSharp
      name:
        CSharp: Pos
        VB: Pos
      nameWithType:
        CSharp: Entity.Pos
        VB: Entity.Pos
      qualifiedName:
        CSharp: MinecaRTS.Entity.Pos
        VB: MinecaRTS.Entity.Pos
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Pos
        path: MinecaRTS/Entities/Entity.cs
        startLine: 26
      summary: "\nThe entity's position.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Pos
          VB: Public Pos As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Entity.Scale
      commentId: F:MinecaRTS.Entity.Scale
      language: CSharp
      name:
        CSharp: Scale
        VB: Scale
      nameWithType:
        CSharp: Entity.Scale
        VB: Entity.Scale
      qualifiedName:
        CSharp: MinecaRTS.Entity.Scale
        VB: MinecaRTS.Entity.Scale
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Scale
        path: MinecaRTS/Entities/Entity.cs
        startLine: 31
      summary: "\nThe size of the entity - used for rendering and collisions.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Scale
          VB: Public Scale As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Entity.ID
      commentId: P:MinecaRTS.Entity.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: Entity.ID
        VB: Entity.ID
      qualifiedName:
        CSharp: MinecaRTS.Entity.ID
        VB: MinecaRTS.Entity.ID
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ID
        path: MinecaRTS/Entities/Entity.cs
        startLine: 36
      summary: "\nGets the entity's unique id.\n"
      example: []
      syntax:
        content:
          CSharp: public ulong ID { get; }
          VB: Public ReadOnly Property ID As ULong
        parameters: []
        return:
          type: System.UInt64
      overload: MinecaRTS.Entity.ID*
      implements:
      - MinecaRTS.IHandleMessages.ID
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Entity.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Entity.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: Entity(Vector2, Vector2)
        VB: Entity(Vector2, Vector2)
      nameWithType:
        CSharp: Entity.Entity(Vector2, Vector2)
        VB: Entity.Entity(Vector2, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Entity.Entity(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Entity.Entity(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Entities/Entity.cs
        startLine: 41
      syntax:
        content:
          CSharp: protected Entity(Vector2 pos, Vector2 scale)
          VB: Protected Sub New(pos As Vector2, scale As Vector2)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: scale
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Entity.#ctor*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.Entity.Finalize
      commentId: M:MinecaRTS.Entity.Finalize
      language: CSharp
      name:
        CSharp: Finalize()
        VB: Finalize()
      nameWithType:
        CSharp: Entity.Finalize()
        VB: Entity.Finalize()
      qualifiedName:
        CSharp: MinecaRTS.Entity.Finalize()
        VB: MinecaRTS.Entity.Finalize()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Finalize
        path: MinecaRTS/Entities/Entity.cs
        startLine: 50
      syntax:
        content:
          CSharp: protected void Finalize()
          VB: Protected Sub Finalize
      overload: MinecaRTS.Entity.Finalize*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.Entity.RenderPos
      commentId: P:MinecaRTS.Entity.RenderPos
      language: CSharp
      name:
        CSharp: RenderPos
        VB: RenderPos
      nameWithType:
        CSharp: Entity.RenderPos
        VB: Entity.RenderPos
      qualifiedName:
        CSharp: MinecaRTS.Entity.RenderPos
        VB: MinecaRTS.Entity.RenderPos
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderPos
        path: MinecaRTS/Entities/Entity.cs
        startLine: 55
      syntax:
        content:
          CSharp: public Vector2 RenderPos { get; }
          VB: Public ReadOnly Property RenderPos As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Entity.RenderPos*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Entity.CollisionRect
      commentId: P:MinecaRTS.Entity.CollisionRect
      language: CSharp
      name:
        CSharp: CollisionRect
        VB: CollisionRect
      nameWithType:
        CSharp: Entity.CollisionRect
        VB: Entity.CollisionRect
      qualifiedName:
        CSharp: MinecaRTS.Entity.CollisionRect
        VB: MinecaRTS.Entity.CollisionRect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CollisionRect
        path: MinecaRTS/Entities/Entity.cs
        startLine: 63
      summary: "\nGets the world coordinate collision rectangle of the entity.\n"
      example: []
      syntax:
        content:
          CSharp: public Rectangle CollisionRect { get; }
          VB: Public ReadOnly Property CollisionRect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Entity.CollisionRect*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Entity.RenderRect
      commentId: P:MinecaRTS.Entity.RenderRect
      language: CSharp
      name:
        CSharp: RenderRect
        VB: RenderRect
      nameWithType:
        CSharp: Entity.RenderRect
        VB: Entity.RenderRect
      qualifiedName:
        CSharp: MinecaRTS.Entity.RenderRect
        VB: MinecaRTS.Entity.RenderRect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderRect
        path: MinecaRTS/Entities/Entity.cs
        startLine: 72
      summary: "\nGets the screen coordinate render rectangle of the entity.\n"
      example: []
      syntax:
        content:
          CSharp: public Rectangle RenderRect { get; }
          VB: Public ReadOnly Property RenderRect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Entity.RenderRect*
      implements:
      - MinecaRTS.IRenderable.RenderRect
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Entity.Mid
      commentId: P:MinecaRTS.Entity.Mid
      language: CSharp
      name:
        CSharp: Mid
        VB: Mid
      nameWithType:
        CSharp: Entity.Mid
        VB: Entity.Mid
      qualifiedName:
        CSharp: MinecaRTS.Entity.Mid
        VB: MinecaRTS.Entity.Mid
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Mid
        path: MinecaRTS/Entities/Entity.cs
        startLine: 80
      summary: "\nGets the mid point of the world coordinate collision rectangle.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Mid { get; }
          VB: Public ReadOnly Property Mid As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Entity.Mid*
      implements:
      - MinecaRTS.IRenderable.Mid
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Entity.RenderMid
      commentId: P:MinecaRTS.Entity.RenderMid
      language: CSharp
      name:
        CSharp: RenderMid
        VB: RenderMid
      nameWithType:
        CSharp: Entity.RenderMid
        VB: Entity.RenderMid
      qualifiedName:
        CSharp: MinecaRTS.Entity.RenderMid
        VB: MinecaRTS.Entity.RenderMid
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderMid
        path: MinecaRTS/Entities/Entity.cs
        startLine: 88
      summary: "\nGets the mid point of the screen coordinate render rectangle.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 RenderMid { get; }
          VB: Public ReadOnly Property RenderMid As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Entity.RenderMid*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Entity.Update
      commentId: M:MinecaRTS.Entity.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Entity.Update()
        VB: Entity.Update()
      qualifiedName:
        CSharp: MinecaRTS.Entity.Update()
        VB: MinecaRTS.Entity.Update()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Entities/Entity.cs
        startLine: 93
      syntax:
        content:
          CSharp: public abstract void Update()
          VB: Public MustOverride Sub Update
      overload: MinecaRTS.Entity.Update*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.Entity.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Entity.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: Entity.Render(SpriteBatch)
        VB: Entity.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Entity.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Entity.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Entities/Entity.cs
        startLine: 94
      syntax:
        content:
          CSharp: public abstract void Render(SpriteBatch spriteBatch)
          VB: Public MustOverride Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Entity.Render*
      implements:
      - MinecaRTS.IRenderable.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.Entity.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.Entity.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: Entity.HandleMessage(Message)
        VB: Entity.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.Entity.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.Entity.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Entities/Entity.cs
        startLine: 95
      syntax:
        content:
          CSharp: public abstract void HandleMessage(Message message)
          VB: Public MustOverride Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.Entity.HandleMessage*
      implements:
      - MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.Entity.ExitState
      commentId: M:MinecaRTS.Entity.ExitState
      language: CSharp
      name:
        CSharp: ExitState()
        VB: ExitState()
      nameWithType:
        CSharp: Entity.ExitState()
        VB: Entity.ExitState()
      qualifiedName:
        CSharp: MinecaRTS.Entity.ExitState()
        VB: MinecaRTS.Entity.ExitState()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ExitState
        path: MinecaRTS/Entities/Entity.cs
        startLine: 96
      syntax:
        content:
          CSharp: public abstract void ExitState()
          VB: Public MustOverride Sub ExitState
      overload: MinecaRTS.Entity.ExitState*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.Entity.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Entity.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderDebug(SpriteBatch)
        VB: RenderDebug(SpriteBatch)
      nameWithType:
        CSharp: Entity.RenderDebug(SpriteBatch)
        VB: Entity.RenderDebug(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Entity.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Entity.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Entity.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderDebug
        path: MinecaRTS/Entities/Entity.cs
        startLine: 97
      syntax:
        content:
          CSharp: public abstract void RenderDebug(SpriteBatch spriteBatch)
          VB: Public MustOverride Sub RenderDebug(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Entity.RenderDebug*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: MinecaRTS.MsgHandlerRegistry
    commentId: T:MinecaRTS.MsgHandlerRegistry
    language: CSharp
    name:
      CSharp: MsgHandlerRegistry
      VB: MsgHandlerRegistry
    nameWithType:
      CSharp: MsgHandlerRegistry
      VB: MsgHandlerRegistry
    qualifiedName:
      CSharp: MinecaRTS.MsgHandlerRegistry
      VB: MinecaRTS.MsgHandlerRegistry
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: MsgHandlerRegistry
      path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
      startLine: 10
    syntax:
      content:
        CSharp: public static class MsgHandlerRegistry
        VB: Public Module MsgHandlerRegistry
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: MinecaRTS.MsgHandlerRegistry.NextID
      commentId: P:MinecaRTS.MsgHandlerRegistry.NextID
      language: CSharp
      name:
        CSharp: NextID
        VB: NextID
      nameWithType:
        CSharp: MsgHandlerRegistry.NextID
        VB: MsgHandlerRegistry.NextID
      qualifiedName:
        CSharp: MinecaRTS.MsgHandlerRegistry.NextID
        VB: MinecaRTS.MsgHandlerRegistry.NextID
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: NextID
        path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
        startLine: 19
      syntax:
        content:
          CSharp: public static ulong NextID { get; }
          VB: Public Shared ReadOnly Property NextID As ULong
        parameters: []
        return:
          type: System.UInt64
      overload: MinecaRTS.MsgHandlerRegistry.NextID*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: MinecaRTS.MsgHandlerRegistry.Register(MinecaRTS.IHandleMessages)
      commentId: M:MinecaRTS.MsgHandlerRegistry.Register(MinecaRTS.IHandleMessages)
      language: CSharp
      name:
        CSharp: Register(IHandleMessages)
        VB: Register(IHandleMessages)
      nameWithType:
        CSharp: MsgHandlerRegistry.Register(IHandleMessages)
        VB: MsgHandlerRegistry.Register(IHandleMessages)
      qualifiedName:
        CSharp: MinecaRTS.MsgHandlerRegistry.Register(MinecaRTS.IHandleMessages)
        VB: MinecaRTS.MsgHandlerRegistry.Register(MinecaRTS.IHandleMessages)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Register
        path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
        startLine: 24
      syntax:
        content:
          CSharp: public static void Register(IHandleMessages msgHandler)
          VB: Public Shared Sub Register(msgHandler As IHandleMessages)
        parameters:
        - id: msgHandler
          type: MinecaRTS.IHandleMessages
      overload: MinecaRTS.MsgHandlerRegistry.Register*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.MsgHandlerRegistry.RemoveEntity(MinecaRTS.IHandleMessages)
      commentId: M:MinecaRTS.MsgHandlerRegistry.RemoveEntity(MinecaRTS.IHandleMessages)
      language: CSharp
      name:
        CSharp: RemoveEntity(IHandleMessages)
        VB: RemoveEntity(IHandleMessages)
      nameWithType:
        CSharp: MsgHandlerRegistry.RemoveEntity(IHandleMessages)
        VB: MsgHandlerRegistry.RemoveEntity(IHandleMessages)
      qualifiedName:
        CSharp: MinecaRTS.MsgHandlerRegistry.RemoveEntity(MinecaRTS.IHandleMessages)
        VB: MinecaRTS.MsgHandlerRegistry.RemoveEntity(MinecaRTS.IHandleMessages)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RemoveEntity
        path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
        startLine: 29
      syntax:
        content:
          CSharp: public static void RemoveEntity(IHandleMessages msgHandler)
          VB: Public Shared Sub RemoveEntity(msgHandler As IHandleMessages)
        parameters:
        - id: msgHandler
          type: MinecaRTS.IHandleMessages
      overload: MinecaRTS.MsgHandlerRegistry.RemoveEntity*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID(System.UInt64)
      commentId: M:MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID(System.UInt64)
      language: CSharp
      name:
        CSharp: GetMsgHandlerFromID(UInt64)
        VB: GetMsgHandlerFromID(UInt64)
      nameWithType:
        CSharp: MsgHandlerRegistry.GetMsgHandlerFromID(UInt64)
        VB: MsgHandlerRegistry.GetMsgHandlerFromID(UInt64)
      qualifiedName:
        CSharp: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID(System.UInt64)
        VB: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID(System.UInt64)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetMsgHandlerFromID
        path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
        startLine: 34
      syntax:
        content:
          CSharp: public static IHandleMessages GetMsgHandlerFromID(ulong id)
          VB: Public Shared Function GetMsgHandlerFromID(id As ULong) As IHandleMessages
        parameters:
        - id: id
          type: System.UInt64
        return:
          type: MinecaRTS.IHandleMessages
      overload: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: MinecaRTS.ExtensionMethods
    commentId: T:MinecaRTS.ExtensionMethods
    language: CSharp
    name:
      CSharp: ExtensionMethods
      VB: ExtensionMethods
    nameWithType:
      CSharp: ExtensionMethods
      VB: ExtensionMethods
    qualifiedName:
      CSharp: MinecaRTS.ExtensionMethods
      VB: MinecaRTS.ExtensionMethods
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Utils/ExtensionMethods.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: ExtensionMethods
      path: MinecaRTS/Utils/ExtensionMethods.cs
      startLine: 10
    syntax:
      content:
        CSharp: public static class ExtensionMethods
        VB: Public Module ExtensionMethods
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: MinecaRTS.ExtensionMethods.GetInflated(Microsoft.Xna.Framework.Rectangle,System.Int32,System.Int32)
      commentId: M:MinecaRTS.ExtensionMethods.GetInflated(Microsoft.Xna.Framework.Rectangle,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: GetInflated(Rectangle, Int32, Int32)
        VB: GetInflated(Rectangle, Int32, Int32)
      nameWithType:
        CSharp: ExtensionMethods.GetInflated(Rectangle, Int32, Int32)
        VB: ExtensionMethods.GetInflated(Rectangle, Int32, Int32)
      qualifiedName:
        CSharp: MinecaRTS.ExtensionMethods.GetInflated(Microsoft.Xna.Framework.Rectangle, System.Int32, System.Int32)
        VB: MinecaRTS.ExtensionMethods.GetInflated(Microsoft.Xna.Framework.Rectangle, System.Int32, System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/ExtensionMethods.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetInflated
        path: MinecaRTS/Utils/ExtensionMethods.cs
        startLine: 12
      syntax:
        content:
          CSharp: public static Rectangle GetInflated(this Rectangle rectangle, int horizontalAmount, int verticalAmount)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetInflated(rectangle As Rectangle, horizontalAmount As Integer, verticalAmount As Integer) As Rectangle
        parameters:
        - id: rectangle
          type: Microsoft.Xna.Framework.Rectangle
        - id: horizontalAmount
          type: System.Int32
        - id: verticalAmount
          type: System.Int32
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.ExtensionMethods.GetInflated*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: MinecaRTS.ExtensionMethods.GetInflated(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)
      commentId: M:MinecaRTS.ExtensionMethods.GetInflated(Microsoft.Xna.Framework.Rectangle,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GetInflated(Rectangle, Single, Single)
        VB: GetInflated(Rectangle, Single, Single)
      nameWithType:
        CSharp: ExtensionMethods.GetInflated(Rectangle, Single, Single)
        VB: ExtensionMethods.GetInflated(Rectangle, Single, Single)
      qualifiedName:
        CSharp: MinecaRTS.ExtensionMethods.GetInflated(Microsoft.Xna.Framework.Rectangle, System.Single, System.Single)
        VB: MinecaRTS.ExtensionMethods.GetInflated(Microsoft.Xna.Framework.Rectangle, System.Single, System.Single)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/ExtensionMethods.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetInflated
        path: MinecaRTS/Utils/ExtensionMethods.cs
        startLine: 20
      syntax:
        content:
          CSharp: public static Rectangle GetInflated(this Rectangle rectangle, float horizontalAmount, float verticalAmount)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function GetInflated(rectangle As Rectangle, horizontalAmount As Single, verticalAmount As Single) As Rectangle
        parameters:
        - id: rectangle
          type: Microsoft.Xna.Framework.Rectangle
        - id: horizontalAmount
          type: System.Single
        - id: verticalAmount
          type: System.Single
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.ExtensionMethods.GetInflated*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: MinecaRTS.ExtensionMethods.TopLeft(Microsoft.Xna.Framework.Rectangle)
      commentId: M:MinecaRTS.ExtensionMethods.TopLeft(Microsoft.Xna.Framework.Rectangle)
      language: CSharp
      name:
        CSharp: TopLeft(Rectangle)
        VB: TopLeft(Rectangle)
      nameWithType:
        CSharp: ExtensionMethods.TopLeft(Rectangle)
        VB: ExtensionMethods.TopLeft(Rectangle)
      qualifiedName:
        CSharp: MinecaRTS.ExtensionMethods.TopLeft(Microsoft.Xna.Framework.Rectangle)
        VB: MinecaRTS.ExtensionMethods.TopLeft(Microsoft.Xna.Framework.Rectangle)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/ExtensionMethods.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TopLeft
        path: MinecaRTS/Utils/ExtensionMethods.cs
        startLine: 28
      syntax:
        content:
          CSharp: public static Vector2 TopLeft(this Rectangle rectangle)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function TopLeft(rectangle As Rectangle) As Vector2
        parameters:
        - id: rectangle
          type: Microsoft.Xna.Framework.Rectangle
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.ExtensionMethods.TopLeft*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: MinecaRTS.ExtensionMethods.BottomRight(Microsoft.Xna.Framework.Rectangle)
      commentId: M:MinecaRTS.ExtensionMethods.BottomRight(Microsoft.Xna.Framework.Rectangle)
      language: CSharp
      name:
        CSharp: BottomRight(Rectangle)
        VB: BottomRight(Rectangle)
      nameWithType:
        CSharp: ExtensionMethods.BottomRight(Rectangle)
        VB: ExtensionMethods.BottomRight(Rectangle)
      qualifiedName:
        CSharp: MinecaRTS.ExtensionMethods.BottomRight(Microsoft.Xna.Framework.Rectangle)
        VB: MinecaRTS.ExtensionMethods.BottomRight(Microsoft.Xna.Framework.Rectangle)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/ExtensionMethods.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: BottomRight
        path: MinecaRTS/Utils/ExtensionMethods.cs
        startLine: 33
      syntax:
        content:
          CSharp: public static Vector2 BottomRight(this Rectangle rectangle)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function BottomRight(rectangle As Rectangle) As Vector2
        parameters:
        - id: rectangle
          type: Microsoft.Xna.Framework.Rectangle
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.ExtensionMethods.BottomRight*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: MinecaRTS.ExtensionMethods.Col(Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.ExtensionMethods.Col(Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: Col(Point)
        VB: Col(Point)
      nameWithType:
        CSharp: ExtensionMethods.Col(Point)
        VB: ExtensionMethods.Col(Point)
      qualifiedName:
        CSharp: MinecaRTS.ExtensionMethods.Col(Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.ExtensionMethods.Col(Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/ExtensionMethods.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Col
        path: MinecaRTS/Utils/ExtensionMethods.cs
        startLine: 38
      syntax:
        content:
          CSharp: public static int Col(this Point pt)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Col(pt As Point) As Integer
        parameters:
        - id: pt
          type: Microsoft.Xna.Framework.Point
        return:
          type: System.Int32
      overload: MinecaRTS.ExtensionMethods.Col*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - isExtensionMethod: true
      id: MinecaRTS.ExtensionMethods.Row(Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.ExtensionMethods.Row(Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: Row(Point)
        VB: Row(Point)
      nameWithType:
        CSharp: ExtensionMethods.Row(Point)
        VB: ExtensionMethods.Row(Point)
      qualifiedName:
        CSharp: MinecaRTS.ExtensionMethods.Row(Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.ExtensionMethods.Row(Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/ExtensionMethods.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Row
        path: MinecaRTS/Utils/ExtensionMethods.cs
        startLine: 43
      syntax:
        content:
          CSharp: public static int Row(this Point pt)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Row(pt As Point) As Integer
        parameters:
        - id: pt
          type: Microsoft.Xna.Framework.Point
        return:
          type: System.Int32
      overload: MinecaRTS.ExtensionMethods.Row*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: MinecaRTS.House
    commentId: T:MinecaRTS.House
    language: CSharp
    name:
      CSharp: House
      VB: House
    nameWithType:
      CSharp: House
      VB: House
    qualifiedName:
      CSharp: MinecaRTS.House
      VB: MinecaRTS.House
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Buildings/House.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: House
      path: MinecaRTS/Entities/Buildings/House.cs
      startLine: 11
    syntax:
      content:
        CSharp: 'public class House : Building, IRenderable, IHandleMessages, IBoostsSupply'
        VB: >-
          Public Class House

              Inherits Building

              Implements IRenderable, IHandleMessages, IBoostsSupply
    inheritance:
    - System.Object
    - MinecaRTS.Entity
    - MinecaRTS.Building
    implements:
    - MinecaRTS.IRenderable
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.Building.ActiveTexture
    - MinecaRTS.Building.IsActive
    - MinecaRTS.Building.Team
    - MinecaRTS.Building.Construct
    - MinecaRTS.Building.Update
    - MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32)
    - MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
    - MinecaRTS.Building.ExitState
    - MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Entity.Pos
    - MinecaRTS.Entity.Scale
    - MinecaRTS.Entity.ID
    - MinecaRTS.Entity.RenderPos
    - MinecaRTS.Entity.CollisionRect
    - MinecaRTS.Entity.RenderRect
    - MinecaRTS.Entity.Mid
    - MinecaRTS.Entity.RenderMid
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.House.MAX_HEALTH
      commentId: F:MinecaRTS.House.MAX_HEALTH
      language: CSharp
      name:
        CSharp: MAX_HEALTH
        VB: MAX_HEALTH
      nameWithType:
        CSharp: House.MAX_HEALTH
        VB: House.MAX_HEALTH
      qualifiedName:
        CSharp: MinecaRTS.House.MAX_HEALTH
        VB: MinecaRTS.House.MAX_HEALTH
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/House.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MAX_HEALTH
        path: MinecaRTS/Entities/Buildings/House.cs
        startLine: 13
      syntax:
        content:
          CSharp: public const int MAX_HEALTH = 300
          VB: Public Const MAX_HEALTH As Integer = 300
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.House.ACTIVE_TEXTURE
      commentId: F:MinecaRTS.House.ACTIVE_TEXTURE
      language: CSharp
      name:
        CSharp: ACTIVE_TEXTURE
        VB: ACTIVE_TEXTURE
      nameWithType:
        CSharp: House.ACTIVE_TEXTURE
        VB: House.ACTIVE_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.House.ACTIVE_TEXTURE
        VB: MinecaRTS.House.ACTIVE_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/House.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ACTIVE_TEXTURE
        path: MinecaRTS/Entities/Buildings/House.cs
        startLine: 15
      syntax:
        content:
          CSharp: public static Texture2D ACTIVE_TEXTURE
          VB: Public Shared ACTIVE_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.House.CONSTRUCTION_TEXTURE
      commentId: F:MinecaRTS.House.CONSTRUCTION_TEXTURE
      language: CSharp
      name:
        CSharp: CONSTRUCTION_TEXTURE
        VB: CONSTRUCTION_TEXTURE
      nameWithType:
        CSharp: House.CONSTRUCTION_TEXTURE
        VB: House.CONSTRUCTION_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.House.CONSTRUCTION_TEXTURE
        VB: MinecaRTS.House.CONSTRUCTION_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/House.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CONSTRUCTION_TEXTURE
        path: MinecaRTS/Entities/Buildings/House.cs
        startLine: 16
      syntax:
        content:
          CSharp: public static Texture2D CONSTRUCTION_TEXTURE
          VB: Public Shared CONSTRUCTION_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.House.SupplyBoostAmount
      commentId: P:MinecaRTS.House.SupplyBoostAmount
      language: CSharp
      name:
        CSharp: SupplyBoostAmount
        VB: SupplyBoostAmount
      nameWithType:
        CSharp: House.SupplyBoostAmount
        VB: House.SupplyBoostAmount
      qualifiedName:
        CSharp: MinecaRTS.House.SupplyBoostAmount
        VB: MinecaRTS.House.SupplyBoostAmount
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/House.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SupplyBoostAmount
        path: MinecaRTS/Entities/Buildings/House.cs
        startLine: 18
      syntax:
        content:
          CSharp: public uint SupplyBoostAmount { get; }
          VB: Public ReadOnly Property SupplyBoostAmount As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: MinecaRTS.House.SupplyBoostAmount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.House.#ctor(Microsoft.Xna.Framework.Vector2,MinecaRTS.Team)
      commentId: M:MinecaRTS.House.#ctor(Microsoft.Xna.Framework.Vector2,MinecaRTS.Team)
      language: CSharp
      name:
        CSharp: House(Vector2, Team)
        VB: House(Vector2, Team)
      nameWithType:
        CSharp: House.House(Vector2, Team)
        VB: House.House(Vector2, Team)
      qualifiedName:
        CSharp: MinecaRTS.House.House(Microsoft.Xna.Framework.Vector2, MinecaRTS.Team)
        VB: MinecaRTS.House.House(Microsoft.Xna.Framework.Vector2, MinecaRTS.Team)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/House.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Entities/Buildings/House.cs
        startLine: 23
      syntax:
        content:
          CSharp: public House(Vector2 pos, Team team)
          VB: Public Sub New(pos As Vector2, team As Team)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: team
          type: MinecaRTS.Team
      overload: MinecaRTS.House.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.ICanAcceptResources
    commentId: T:MinecaRTS.ICanAcceptResources
    language: CSharp
    name:
      CSharp: ICanAcceptResources
      VB: ICanAcceptResources
    nameWithType:
      CSharp: ICanAcceptResources
      VB: ICanAcceptResources
    qualifiedName:
      CSharp: MinecaRTS.ICanAcceptResources
      VB: MinecaRTS.ICanAcceptResources
    type: Interface
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Resource/ICanAcceptResources.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: ICanAcceptResources
      path: MinecaRTS/Resource/ICanAcceptResources.cs
      startLine: 9
    syntax:
      content:
        CSharp: public interface ICanAcceptResources
        VB: Public Interface ICanAcceptResources
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: MinecaRTS.ICanAcceptResources.CollisionRect
      commentId: P:MinecaRTS.ICanAcceptResources.CollisionRect
      language: CSharp
      name:
        CSharp: CollisionRect
        VB: CollisionRect
      nameWithType:
        CSharp: ICanAcceptResources.CollisionRect
        VB: ICanAcceptResources.CollisionRect
      qualifiedName:
        CSharp: MinecaRTS.ICanAcceptResources.CollisionRect
        VB: MinecaRTS.ICanAcceptResources.CollisionRect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/ICanAcceptResources.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CollisionRect
        path: MinecaRTS/Resource/ICanAcceptResources.cs
        startLine: 11
      syntax:
        content:
          CSharp: Rectangle CollisionRect { get; }
          VB: ReadOnly Property CollisionRect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.ICanAcceptResources.CollisionRect*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: MinecaRTS.ICanAcceptResources.Mid
      commentId: P:MinecaRTS.ICanAcceptResources.Mid
      language: CSharp
      name:
        CSharp: Mid
        VB: Mid
      nameWithType:
        CSharp: ICanAcceptResources.Mid
        VB: ICanAcceptResources.Mid
      qualifiedName:
        CSharp: MinecaRTS.ICanAcceptResources.Mid
        VB: MinecaRTS.ICanAcceptResources.Mid
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/ICanAcceptResources.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Mid
        path: MinecaRTS/Resource/ICanAcceptResources.cs
        startLine: 16
      syntax:
        content:
          CSharp: Vector2 Mid { get; }
          VB: ReadOnly Property Mid As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.ICanAcceptResources.Mid*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: MinecaRTS.ICanAcceptResources.AcceptResources(System.UInt32,System.UInt32)
      commentId: M:MinecaRTS.ICanAcceptResources.AcceptResources(System.UInt32,System.UInt32)
      language: CSharp
      name:
        CSharp: AcceptResources(UInt32, UInt32)
        VB: AcceptResources(UInt32, UInt32)
      nameWithType:
        CSharp: ICanAcceptResources.AcceptResources(UInt32, UInt32)
        VB: ICanAcceptResources.AcceptResources(UInt32, UInt32)
      qualifiedName:
        CSharp: MinecaRTS.ICanAcceptResources.AcceptResources(System.UInt32, System.UInt32)
        VB: MinecaRTS.ICanAcceptResources.AcceptResources(System.UInt32, System.UInt32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/ICanAcceptResources.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AcceptResources
        path: MinecaRTS/Resource/ICanAcceptResources.cs
        startLine: 21
      syntax:
        content:
          CSharp: void AcceptResources(uint woodAmount, uint stoneAmount)
          VB: Sub AcceptResources(woodAmount As UInteger, stoneAmount As UInteger)
        parameters:
        - id: woodAmount
          type: System.UInt32
        - id: stoneAmount
          type: System.UInt32
      overload: MinecaRTS.ICanAcceptResources.AcceptResources*
      modifiers:
        CSharp: []
        VB: []
  - id: MinecaRTS.IRenderable
    commentId: T:MinecaRTS.IRenderable
    language: CSharp
    name:
      CSharp: IRenderable
      VB: IRenderable
    nameWithType:
      CSharp: IRenderable
      VB: IRenderable
    qualifiedName:
      CSharp: MinecaRTS.IRenderable
      VB: MinecaRTS.IRenderable
    type: Interface
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Render/IRenderable.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: IRenderable
      path: MinecaRTS/Render/IRenderable.cs
      startLine: 10
    syntax:
      content:
        CSharp: public interface IRenderable
        VB: Public Interface IRenderable
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: MinecaRTS.IRenderable.RenderRect
      commentId: P:MinecaRTS.IRenderable.RenderRect
      language: CSharp
      name:
        CSharp: RenderRect
        VB: RenderRect
      nameWithType:
        CSharp: IRenderable.RenderRect
        VB: IRenderable.RenderRect
      qualifiedName:
        CSharp: MinecaRTS.IRenderable.RenderRect
        VB: MinecaRTS.IRenderable.RenderRect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/IRenderable.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderRect
        path: MinecaRTS/Render/IRenderable.cs
        startLine: 12
      syntax:
        content:
          CSharp: Rectangle RenderRect { get; }
          VB: ReadOnly Property RenderRect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.IRenderable.RenderRect*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: MinecaRTS.IRenderable.Mid
      commentId: P:MinecaRTS.IRenderable.Mid
      language: CSharp
      name:
        CSharp: Mid
        VB: Mid
      nameWithType:
        CSharp: IRenderable.Mid
        VB: IRenderable.Mid
      qualifiedName:
        CSharp: MinecaRTS.IRenderable.Mid
        VB: MinecaRTS.IRenderable.Mid
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/IRenderable.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Mid
        path: MinecaRTS/Render/IRenderable.cs
        startLine: 17
      syntax:
        content:
          CSharp: Vector2 Mid { get; }
          VB: ReadOnly Property Mid As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.IRenderable.Mid*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: MinecaRTS.IRenderable.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.IRenderable.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: IRenderable.Render(SpriteBatch)
        VB: IRenderable.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.IRenderable.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.IRenderable.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Render/IRenderable.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Render/IRenderable.cs
        startLine: 22
      syntax:
        content:
          CSharp: void Render(SpriteBatch spriteBatch)
          VB: Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.IRenderable.Render*
      modifiers:
        CSharp: []
        VB: []
  - id: MinecaRTS.MinecaRTS
    commentId: T:MinecaRTS.MinecaRTS
    language: CSharp
    name:
      CSharp: MinecaRTS
      VB: MinecaRTS
    nameWithType:
      CSharp: MinecaRTS
      VB: MinecaRTS
    qualifiedName:
      CSharp: MinecaRTS.MinecaRTS
      VB: MinecaRTS.MinecaRTS
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Core/MinecaRTS.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: MinecaRTS
      path: MinecaRTS/Core/MinecaRTS.cs
      startLine: 8
    syntax:
      content:
        CSharp: 'public class MinecaRTS : Game, IDisposable'
        VB: >-
          Public Class MinecaRTS

              Inherits Game

              Implements IDisposable
    inheritance:
    - System.Object
    - Microsoft.Xna.Framework.Game
    implements:
    - System.IDisposable
    inheritedMembers:
    - Microsoft.Xna.Framework.Game.Dispose
    - Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
    - Microsoft.Xna.Framework.Game.Exit
    - Microsoft.Xna.Framework.Game.ResetElapsedTime
    - Microsoft.Xna.Framework.Game.SuppressDraw
    - Microsoft.Xna.Framework.Game.RunOneFrame
    - Microsoft.Xna.Framework.Game.Run
    - Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
    - Microsoft.Xna.Framework.Game.Tick
    - Microsoft.Xna.Framework.Game.BeginDraw
    - Microsoft.Xna.Framework.Game.EndDraw
    - Microsoft.Xna.Framework.Game.BeginRun
    - Microsoft.Xna.Framework.Game.EndRun
    - Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
    - Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
    - Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
    - Microsoft.Xna.Framework.Game.LaunchParameters
    - Microsoft.Xna.Framework.Game.Components
    - Microsoft.Xna.Framework.Game.InactiveSleepTime
    - Microsoft.Xna.Framework.Game.MaxElapsedTime
    - Microsoft.Xna.Framework.Game.IsActive
    - Microsoft.Xna.Framework.Game.IsMouseVisible
    - Microsoft.Xna.Framework.Game.TargetElapsedTime
    - Microsoft.Xna.Framework.Game.IsFixedTimeStep
    - Microsoft.Xna.Framework.Game.Services
    - Microsoft.Xna.Framework.Game.Content
    - Microsoft.Xna.Framework.Game.GraphicsDevice
    - Microsoft.Xna.Framework.Game.Window
    - Microsoft.Xna.Framework.Game.Activated
    - Microsoft.Xna.Framework.Game.Deactivated
    - Microsoft.Xna.Framework.Game.Disposed
    - Microsoft.Xna.Framework.Game.Exiting
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.MinecaRTS.Instance
      commentId: F:MinecaRTS.MinecaRTS.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: MinecaRTS.Instance
        VB: MinecaRTS.Instance
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.Instance
        VB: MinecaRTS.MinecaRTS.Instance
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Instance
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 14
      summary: "\nSingleton instance for global debug purposes.\nSometimes for debug it's just easier to have everything wherever we need it.\n"
      example: []
      syntax:
        content:
          CSharp: public static MinecaRTS Instance
          VB: Public Shared Instance As MinecaRTS
        return:
          type: MinecaRTS.MinecaRTS
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.MinecaRTS.smallFont
      commentId: F:MinecaRTS.MinecaRTS.smallFont
      language: CSharp
      name:
        CSharp: smallFont
        VB: smallFont
      nameWithType:
        CSharp: MinecaRTS.smallFont
        VB: MinecaRTS.smallFont
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.smallFont
        VB: MinecaRTS.MinecaRTS.smallFont
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: smallFont
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 16
      syntax:
        content:
          CSharp: public static SpriteFont smallFont
          VB: Public Shared smallFont As SpriteFont
        return:
          type: Microsoft.Xna.Framework.Graphics.SpriteFont
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.MinecaRTS.largeFont
      commentId: F:MinecaRTS.MinecaRTS.largeFont
      language: CSharp
      name:
        CSharp: largeFont
        VB: largeFont
      nameWithType:
        CSharp: MinecaRTS.largeFont
        VB: MinecaRTS.largeFont
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.largeFont
        VB: MinecaRTS.MinecaRTS.largeFont
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: largeFont
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 17
      syntax:
        content:
          CSharp: public static SpriteFont largeFont
          VB: Public Shared largeFont As SpriteFont
        return:
          type: Microsoft.Xna.Framework.Graphics.SpriteFont
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.MinecaRTS.graphics
      commentId: F:MinecaRTS.MinecaRTS.graphics
      language: CSharp
      name:
        CSharp: graphics
        VB: graphics
      nameWithType:
        CSharp: MinecaRTS.graphics
        VB: MinecaRTS.graphics
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.graphics
        VB: MinecaRTS.MinecaRTS.graphics
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: graphics
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 19
      syntax:
        content:
          CSharp: public GraphicsDeviceManager graphics
          VB: Public graphics As GraphicsDeviceManager
        return:
          type: Microsoft.Xna.Framework.GraphicsDeviceManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.MinecaRTS.spriteBatch
      commentId: F:MinecaRTS.MinecaRTS.spriteBatch
      language: CSharp
      name:
        CSharp: spriteBatch
        VB: spriteBatch
      nameWithType:
        CSharp: MinecaRTS.spriteBatch
        VB: MinecaRTS.spriteBatch
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.spriteBatch
        VB: MinecaRTS.MinecaRTS.spriteBatch
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: spriteBatch
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 20
      syntax:
        content:
          CSharp: public SpriteBatch spriteBatch
          VB: Public spriteBatch As SpriteBatch
        return:
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.MinecaRTS.world
      commentId: F:MinecaRTS.MinecaRTS.world
      language: CSharp
      name:
        CSharp: world
        VB: world
      nameWithType:
        CSharp: MinecaRTS.world
        VB: MinecaRTS.world
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.world
        VB: MinecaRTS.MinecaRTS.world
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: world
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 21
      syntax:
        content:
          CSharp: public World world
          VB: Public world As World
        return:
          type: MinecaRTS.World
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.MinecaRTS.editMode
      commentId: F:MinecaRTS.MinecaRTS.editMode
      language: CSharp
      name:
        CSharp: editMode
        VB: editMode
      nameWithType:
        CSharp: MinecaRTS.editMode
        VB: MinecaRTS.editMode
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.editMode
        VB: MinecaRTS.MinecaRTS.editMode
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: editMode
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 22
      syntax:
        content:
          CSharp: public bool editMode
          VB: Public editMode As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.MinecaRTS.debugMode
      commentId: F:MinecaRTS.MinecaRTS.debugMode
      language: CSharp
      name:
        CSharp: debugMode
        VB: debugMode
      nameWithType:
        CSharp: MinecaRTS.debugMode
        VB: MinecaRTS.debugMode
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.debugMode
        VB: MinecaRTS.MinecaRTS.debugMode
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: debugMode
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 23
      syntax:
        content:
          CSharp: public bool debugMode
          VB: Public debugMode As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.MinecaRTS.#ctor
      commentId: M:MinecaRTS.MinecaRTS.#ctor
      language: CSharp
      name:
        CSharp: MinecaRTS()
        VB: MinecaRTS()
      nameWithType:
        CSharp: MinecaRTS.MinecaRTS()
        VB: MinecaRTS.MinecaRTS()
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.MinecaRTS()
        VB: MinecaRTS.MinecaRTS.MinecaRTS()
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 25
      syntax:
        content:
          CSharp: public MinecaRTS()
          VB: Public Sub New
      overload: MinecaRTS.MinecaRTS.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.MinecaRTS.Initialize
      commentId: M:MinecaRTS.MinecaRTS.Initialize
      language: CSharp
      name:
        CSharp: Initialize()
        VB: Initialize()
      nameWithType:
        CSharp: MinecaRTS.Initialize()
        VB: MinecaRTS.Initialize()
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.Initialize()
        VB: MinecaRTS.MinecaRTS.Initialize()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Initialize
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 81
      syntax:
        content:
          CSharp: protected override void Initialize()
          VB: Protected Overrides Sub Initialize
      overload: MinecaRTS.MinecaRTS.Initialize*
      overridden: Microsoft.Xna.Framework.Game.Initialize
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: MinecaRTS.MinecaRTS.LoadContent
      commentId: M:MinecaRTS.MinecaRTS.LoadContent
      language: CSharp
      name:
        CSharp: LoadContent()
        VB: LoadContent()
      nameWithType:
        CSharp: MinecaRTS.LoadContent()
        VB: MinecaRTS.LoadContent()
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.LoadContent()
        VB: MinecaRTS.MinecaRTS.LoadContent()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: LoadContent
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 86
      syntax:
        content:
          CSharp: protected override void LoadContent()
          VB: Protected Overrides Sub LoadContent
      overload: MinecaRTS.MinecaRTS.LoadContent*
      overridden: Microsoft.Xna.Framework.Game.LoadContent
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: MinecaRTS.MinecaRTS.UnloadContent
      commentId: M:MinecaRTS.MinecaRTS.UnloadContent
      language: CSharp
      name:
        CSharp: UnloadContent()
        VB: UnloadContent()
      nameWithType:
        CSharp: MinecaRTS.UnloadContent()
        VB: MinecaRTS.UnloadContent()
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.UnloadContent()
        VB: MinecaRTS.MinecaRTS.UnloadContent()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: UnloadContent
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 131
      syntax:
        content:
          CSharp: protected override void UnloadContent()
          VB: Protected Overrides Sub UnloadContent
      overload: MinecaRTS.MinecaRTS.UnloadContent*
      overridden: Microsoft.Xna.Framework.Game.UnloadContent
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: MinecaRTS.MinecaRTS.Update(Microsoft.Xna.Framework.GameTime)
      commentId: M:MinecaRTS.MinecaRTS.Update(Microsoft.Xna.Framework.GameTime)
      language: CSharp
      name:
        CSharp: Update(GameTime)
        VB: Update(GameTime)
      nameWithType:
        CSharp: MinecaRTS.Update(GameTime)
        VB: MinecaRTS.Update(GameTime)
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.Update(Microsoft.Xna.Framework.GameTime)
        VB: MinecaRTS.MinecaRTS.Update(Microsoft.Xna.Framework.GameTime)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 136
      syntax:
        content:
          CSharp: protected override void Update(GameTime gameTime)
          VB: Protected Overrides Sub Update(gameTime As GameTime)
        parameters:
        - id: gameTime
          type: Microsoft.Xna.Framework.GameTime
      overload: MinecaRTS.MinecaRTS.Update*
      overridden: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: MinecaRTS.MinecaRTS.Draw(Microsoft.Xna.Framework.GameTime)
      commentId: M:MinecaRTS.MinecaRTS.Draw(Microsoft.Xna.Framework.GameTime)
      language: CSharp
      name:
        CSharp: Draw(GameTime)
        VB: Draw(GameTime)
      nameWithType:
        CSharp: MinecaRTS.Draw(GameTime)
        VB: MinecaRTS.Draw(GameTime)
      qualifiedName:
        CSharp: MinecaRTS.MinecaRTS.Draw(Microsoft.Xna.Framework.GameTime)
        VB: MinecaRTS.MinecaRTS.Draw(Microsoft.Xna.Framework.GameTime)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/MinecaRTS.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Draw
        path: MinecaRTS/Core/MinecaRTS.cs
        startLine: 173
      summary: "\nThis is called when the game should draw itself.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Draw(GameTime gameTime)
          VB: Protected Overrides Sub Draw(gameTime As GameTime)
        parameters:
        - id: gameTime
          type: Microsoft.Xna.Framework.GameTime
          description: Provides a snapshot of timing values.
      overload: MinecaRTS.MinecaRTS.Draw*
      overridden: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: MinecaRTS.Grid
    commentId: T:MinecaRTS.Grid
    language: CSharp
    name:
      CSharp: Grid
      VB: Grid
    nameWithType:
      CSharp: Grid
      VB: Grid
    qualifiedName:
      CSharp: MinecaRTS.Grid
      VB: MinecaRTS.Grid
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Core/Grid.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Grid
      path: MinecaRTS/Core/Grid.cs
      startLine: 15
    summary: "\n2D array of cells with a whoooooole bunch of helper functions!\nMORE LINES OF STUFF\n"
    example: []
    syntax:
      content:
        CSharp: public class Grid
        VB: Public Class Grid
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Grid.CellSize
      commentId: P:MinecaRTS.Grid.CellSize
      language: CSharp
      name:
        CSharp: CellSize
        VB: CellSize
      nameWithType:
        CSharp: Grid.CellSize
        VB: Grid.CellSize
      qualifiedName:
        CSharp: MinecaRTS.Grid.CellSize
        VB: MinecaRTS.Grid.CellSize
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CellSize
        path: MinecaRTS/Core/Grid.cs
        startLine: 19
      syntax:
        content:
          CSharp: public int CellSize { get; }
          VB: Public ReadOnly Property CellSize As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Grid.CellSize*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Grid.Pos
      commentId: P:MinecaRTS.Grid.Pos
      language: CSharp
      name:
        CSharp: Pos
        VB: Pos
      nameWithType:
        CSharp: Grid.Pos
        VB: Grid.Pos
      qualifiedName:
        CSharp: MinecaRTS.Grid.Pos
        VB: MinecaRTS.Grid.Pos
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Pos
        path: MinecaRTS/Core/Grid.cs
        startLine: 43
      summary: "\nThe position of the grid in world coordinates.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Pos { get; set; }
          VB: Public Property Pos As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Grid.Pos*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MinecaRTS.Grid.Item(System.Int32,System.Int32)
      commentId: P:MinecaRTS.Grid.Item(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32, Int32]
        VB: Item(Int32, Int32)
      nameWithType:
        CSharp: Grid.Item[Int32, Int32]
        VB: Grid.Item(Int32, Int32)
      qualifiedName:
        CSharp: MinecaRTS.Grid.Item[System.Int32, System.Int32]
        VB: MinecaRTS.Grid.Item(System.Int32, System.Int32)
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: this[]
        path: MinecaRTS/Core/Grid.cs
        startLine: 51
      summary: "\nGets or sets the Cell at the given index.\n"
      example: []
      syntax:
        content:
          CSharp: public Cell this[int col, int row] { get; set; }
          VB: Public Property Item(col As Integer, row As Integer) As Cell
        parameters:
        - id: col
          type: System.Int32
          description: The column index.
        - id: row
          type: System.Int32
          description: The row index.
        return:
          type: MinecaRTS.Cell
          description: ''
      overload: MinecaRTS.Grid.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MinecaRTS.Grid.Item(Microsoft.Xna.Framework.Point)
      commentId: P:MinecaRTS.Grid.Item(Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: Item[Point]
        VB: Item(Point)
      nameWithType:
        CSharp: Grid.Item[Point]
        VB: Grid.Item(Point)
      qualifiedName:
        CSharp: MinecaRTS.Grid.Item[Microsoft.Xna.Framework.Point]
        VB: MinecaRTS.Grid.Item(Microsoft.Xna.Framework.Point)
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: this[]
        path: MinecaRTS/Core/Grid.cs
        startLine: 64
      syntax:
        content:
          CSharp: public Cell this[Point cellIndex] { get; set; }
          VB: Public Property Item(cellIndex As Point) As Cell
        parameters:
        - id: cellIndex
          type: Microsoft.Xna.Framework.Point
        return:
          type: MinecaRTS.Cell
      overload: MinecaRTS.Grid.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MinecaRTS.Grid.Cols
      commentId: P:MinecaRTS.Grid.Cols
      language: CSharp
      name:
        CSharp: Cols
        VB: Cols
      nameWithType:
        CSharp: Grid.Cols
        VB: Grid.Cols
      qualifiedName:
        CSharp: MinecaRTS.Grid.Cols
        VB: MinecaRTS.Grid.Cols
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Cols
        path: MinecaRTS/Core/Grid.cs
        startLine: 73
      summary: "\nGets the number of columns in the grid.\n"
      example: []
      syntax:
        content:
          CSharp: public int Cols { get; }
          VB: Public ReadOnly Property Cols As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Grid.Cols*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Grid.Rows
      commentId: P:MinecaRTS.Grid.Rows
      language: CSharp
      name:
        CSharp: Rows
        VB: Rows
      nameWithType:
        CSharp: Grid.Rows
        VB: Grid.Rows
      qualifiedName:
        CSharp: MinecaRTS.Grid.Rows
        VB: MinecaRTS.Grid.Rows
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Rows
        path: MinecaRTS/Core/Grid.cs
        startLine: 81
      summary: "\nGets the number of rows in the grid.\n"
      example: []
      syntax:
        content:
          CSharp: public int Rows { get; }
          VB: Public ReadOnly Property Rows As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Grid.Rows*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Grid.Width
      commentId: P:MinecaRTS.Grid.Width
      language: CSharp
      name:
        CSharp: Width
        VB: Width
      nameWithType:
        CSharp: Grid.Width
        VB: Grid.Width
      qualifiedName:
        CSharp: MinecaRTS.Grid.Width
        VB: MinecaRTS.Grid.Width
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Width
        path: MinecaRTS/Core/Grid.cs
        startLine: 90
      summary: "\nThe width of the grid.\n-1 so the absolute edge doesn't register next cell and out of bounds.\n"
      example: []
      syntax:
        content:
          CSharp: public int Width { get; }
          VB: Public ReadOnly Property Width As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Grid.Width*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Grid.Height
      commentId: P:MinecaRTS.Grid.Height
      language: CSharp
      name:
        CSharp: Height
        VB: Height
      nameWithType:
        CSharp: Grid.Height
        VB: Grid.Height
      qualifiedName:
        CSharp: MinecaRTS.Grid.Height
        VB: MinecaRTS.Grid.Height
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Height
        path: MinecaRTS/Core/Grid.cs
        startLine: 99
      summary: "\nThe height of the grid.\n-1 so the absolute edge doesn't register next cell and out of bounds.\n"
      example: []
      syntax:
        content:
          CSharp: public int Height { get; }
          VB: Public ReadOnly Property Height As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Grid.Height*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Grid.CollisionRect
      commentId: P:MinecaRTS.Grid.CollisionRect
      language: CSharp
      name:
        CSharp: CollisionRect
        VB: CollisionRect
      nameWithType:
        CSharp: Grid.CollisionRect
        VB: Grid.CollisionRect
      qualifiedName:
        CSharp: MinecaRTS.Grid.CollisionRect
        VB: MinecaRTS.Grid.CollisionRect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CollisionRect
        path: MinecaRTS/Core/Grid.cs
        startLine: 107
      summary: "\nThe bounding rectangle of the grid in world coordinates.\n"
      example: []
      syntax:
        content:
          CSharp: public Rectangle CollisionRect { get; }
          VB: Public ReadOnly Property CollisionRect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Grid.CollisionRect*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Grid.RenderRect
      commentId: P:MinecaRTS.Grid.RenderRect
      language: CSharp
      name:
        CSharp: RenderRect
        VB: RenderRect
      nameWithType:
        CSharp: Grid.RenderRect
        VB: Grid.RenderRect
      qualifiedName:
        CSharp: MinecaRTS.Grid.RenderRect
        VB: MinecaRTS.Grid.RenderRect
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderRect
        path: MinecaRTS/Core/Grid.cs
        startLine: 115
      summary: "\nThe bounding rectangle of the grid in screen coordinates.\n"
      example: []
      syntax:
        content:
          CSharp: public Rectangle RenderRect { get; }
          VB: Public ReadOnly Property RenderRect As Rectangle
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.Grid.RenderRect*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Grid.ShowGrid
      commentId: P:MinecaRTS.Grid.ShowGrid
      language: CSharp
      name:
        CSharp: ShowGrid
        VB: ShowGrid
      nameWithType:
        CSharp: Grid.ShowGrid
        VB: Grid.ShowGrid
      qualifiedName:
        CSharp: MinecaRTS.Grid.ShowGrid
        VB: MinecaRTS.Grid.ShowGrid
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ShowGrid
        path: MinecaRTS/Core/Grid.cs
        startLine: 123
      summary: "\nSpecifies if a rectangle should be drawn around each cell.\n"
      example: []
      syntax:
        content:
          CSharp: public bool ShowGrid { get; set; }
          VB: Public Property ShowGrid As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: MinecaRTS.Grid.ShowGrid*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MinecaRTS.Grid.#ctor(Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32)
      commentId: M:MinecaRTS.Grid.#ctor(Microsoft.Xna.Framework.Vector2,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Grid(Vector2, Int32, Int32, Int32)
        VB: Grid(Vector2, Int32, Int32, Int32)
      nameWithType:
        CSharp: Grid.Grid(Vector2, Int32, Int32, Int32)
        VB: Grid.Grid(Vector2, Int32, Int32, Int32)
      qualifiedName:
        CSharp: MinecaRTS.Grid.Grid(Microsoft.Xna.Framework.Vector2, System.Int32, System.Int32, System.Int32)
        VB: MinecaRTS.Grid.Grid(Microsoft.Xna.Framework.Vector2, System.Int32, System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Core/Grid.cs
        startLine: 132
      summary: "\nCreates a new grid.\n"
      example: []
      syntax:
        content:
          CSharp: public Grid(Vector2 pos, int cols, int rows, int cellSize)
          VB: Public Sub New(pos As Vector2, cols As Integer, rows As Integer, cellSize As Integer)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: cols
          type: System.Int32
          description: ''
        - id: rows
          type: System.Int32
          description: ''
        - id: cellSize
          type: System.Int32
      overload: MinecaRTS.Grid.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.AddCell(MinecaRTS.Cell,System.Collections.Generic.ICollection{MinecaRTS.Cell})
      commentId: M:MinecaRTS.Grid.AddCell(MinecaRTS.Cell,System.Collections.Generic.ICollection{MinecaRTS.Cell})
      language: CSharp
      name:
        CSharp: AddCell(Cell, ICollection<Cell>)
        VB: AddCell(Cell, ICollection(Of Cell))
      nameWithType:
        CSharp: Grid.AddCell(Cell, ICollection<Cell>)
        VB: Grid.AddCell(Cell, ICollection(Of Cell))
      qualifiedName:
        CSharp: MinecaRTS.Grid.AddCell(MinecaRTS.Cell, System.Collections.Generic.ICollection<MinecaRTS.Cell>)
        VB: MinecaRTS.Grid.AddCell(MinecaRTS.Cell, System.Collections.Generic.ICollection(Of MinecaRTS.Cell))
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddCell
        path: MinecaRTS/Core/Grid.cs
        startLine: 173
      summary: "\nNull checks the passed in cell and adds it to the list if it is not null.\n"
      example: []
      syntax:
        content:
          CSharp: public void AddCell(Cell cell, ICollection<Cell> list)
          VB: Public Sub AddCell(cell As Cell, list As ICollection(Of Cell))
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        - id: list
          type: System.Collections.Generic.ICollection{MinecaRTS.Cell}
      overload: MinecaRTS.Grid.AddCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.CellAt(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Grid.CellAt(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: CellAt(Vector2)
        VB: CellAt(Vector2)
      nameWithType:
        CSharp: Grid.CellAt(Vector2)
        VB: Grid.CellAt(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Grid.CellAt(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Grid.CellAt(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CellAt
        path: MinecaRTS/Core/Grid.cs
        startLine: 183
      summary: "\nReturns the cell at the given position.\n"
      example: []
      syntax:
        content:
          CSharp: public Cell CellAt(Vector2 pos)
          VB: Public Function CellAt(pos As Vector2) As Cell
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
          description: The position to check.
        return:
          type: MinecaRTS.Cell
      overload: MinecaRTS.Grid.CellAt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.CellAtMousePos
      commentId: M:MinecaRTS.Grid.CellAtMousePos
      language: CSharp
      name:
        CSharp: CellAtMousePos()
        VB: CellAtMousePos()
      nameWithType:
        CSharp: Grid.CellAtMousePos()
        VB: Grid.CellAtMousePos()
      qualifiedName:
        CSharp: MinecaRTS.Grid.CellAtMousePos()
        VB: MinecaRTS.Grid.CellAtMousePos()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CellAtMousePos
        path: MinecaRTS/Core/Grid.cs
        startLine: 194
      summary: "\nReturns the cell at the mouse position.\n"
      example: []
      syntax:
        content:
          CSharp: public Cell CellAtMousePos()
          VB: Public Function CellAtMousePos As Cell
        return:
          type: MinecaRTS.Cell
      overload: MinecaRTS.Grid.CellAtMousePos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.IndexAt(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Grid.IndexAt(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: IndexAt(Vector2)
        VB: IndexAt(Vector2)
      nameWithType:
        CSharp: Grid.IndexAt(Vector2)
        VB: Grid.IndexAt(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Grid.IndexAt(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Grid.IndexAt(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: IndexAt
        path: MinecaRTS/Core/Grid.cs
        startLine: 204
      summary: "\nReturns the index of the cell at the given position.\nReturned as a Point where X = Col and Y = Row.\n"
      example: []
      syntax:
        content:
          CSharp: public Point IndexAt(Vector2 pos)
          VB: Public Function IndexAt(pos As Vector2) As Point
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
          description: The position to check
        return:
          type: Microsoft.Xna.Framework.Point
      overload: MinecaRTS.Grid.IndexAt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.Get33GridIndexesAroundIndex(Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.Grid.Get33GridIndexesAroundIndex(Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: Get33GridIndexesAroundIndex(Point)
        VB: Get33GridIndexesAroundIndex(Point)
      nameWithType:
        CSharp: Grid.Get33GridIndexesAroundIndex(Point)
        VB: Grid.Get33GridIndexesAroundIndex(Point)
      qualifiedName:
        CSharp: MinecaRTS.Grid.Get33GridIndexesAroundIndex(Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.Grid.Get33GridIndexesAroundIndex(Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Get33GridIndexesAroundIndex
        path: MinecaRTS/Core/Grid.cs
        startLine: 212
      syntax:
        content:
          CSharp: public List<Point> Get33GridIndexesAroundIndex(Point index)
          VB: Public Function Get33GridIndexesAroundIndex(index As Point) As List(Of Point)
        parameters:
        - id: index
          type: Microsoft.Xna.Framework.Point
        return:
          type: System.Collections.Generic.List{Microsoft.Xna.Framework.Point}
      overload: MinecaRTS.Grid.Get33GridIndexesAroundIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.Get33GridIndexesAroundPos(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Grid.Get33GridIndexesAroundPos(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: Get33GridIndexesAroundPos(Vector2)
        VB: Get33GridIndexesAroundPos(Vector2)
      nameWithType:
        CSharp: Grid.Get33GridIndexesAroundPos(Vector2)
        VB: Grid.Get33GridIndexesAroundPos(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Grid.Get33GridIndexesAroundPos(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Grid.Get33GridIndexesAroundPos(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Get33GridIndexesAroundPos
        path: MinecaRTS/Core/Grid.cs
        startLine: 230
      syntax:
        content:
          CSharp: public List<Point> Get33GridIndexesAroundPos(Vector2 pos)
          VB: Public Function Get33GridIndexesAroundPos(pos As Vector2) As List(Of Point)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: System.Collections.Generic.List{Microsoft.Xna.Framework.Point}
      overload: MinecaRTS.Grid.Get33GridIndexesAroundPos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.RectIsClear(Microsoft.Xna.Framework.Rectangle)
      commentId: M:MinecaRTS.Grid.RectIsClear(Microsoft.Xna.Framework.Rectangle)
      language: CSharp
      name:
        CSharp: RectIsClear(Rectangle)
        VB: RectIsClear(Rectangle)
      nameWithType:
        CSharp: Grid.RectIsClear(Rectangle)
        VB: Grid.RectIsClear(Rectangle)
      qualifiedName:
        CSharp: MinecaRTS.Grid.RectIsClear(Microsoft.Xna.Framework.Rectangle)
        VB: MinecaRTS.Grid.RectIsClear(Microsoft.Xna.Framework.Rectangle)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RectIsClear
        path: MinecaRTS/Core/Grid.cs
        startLine: 239
      summary: "\nSpecifies if every cell the passed in rectangle touches is traversable.\nIf the rect touches 1 or more unpassable cells, this returns false.\n"
      example: []
      syntax:
        content:
          CSharp: public bool RectIsClear(Rectangle rect)
          VB: Public Function RectIsClear(rect As Rectangle) As Boolean
        parameters:
        - id: rect
          type: Microsoft.Xna.Framework.Rectangle
        return:
          type: System.Boolean
      overload: MinecaRTS.Grid.RectIsClear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.CellsInRect(Microsoft.Xna.Framework.Rectangle)
      commentId: M:MinecaRTS.Grid.CellsInRect(Microsoft.Xna.Framework.Rectangle)
      language: CSharp
      name:
        CSharp: CellsInRect(Rectangle)
        VB: CellsInRect(Rectangle)
      nameWithType:
        CSharp: Grid.CellsInRect(Rectangle)
        VB: Grid.CellsInRect(Rectangle)
      qualifiedName:
        CSharp: MinecaRTS.Grid.CellsInRect(Microsoft.Xna.Framework.Rectangle)
        VB: MinecaRTS.Grid.CellsInRect(Microsoft.Xna.Framework.Rectangle)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CellsInRect
        path: MinecaRTS/Core/Grid.cs
        startLine: 253
      summary: "\nReturns a list of cells the passed in Rectangle touches.\n"
      example: []
      syntax:
        content:
          CSharp: public List<Cell> CellsInRect(Rectangle rect)
          VB: Public Function CellsInRect(rect As Rectangle) As List(Of Cell)
        parameters:
        - id: rect
          type: Microsoft.Xna.Framework.Rectangle
        return:
          type: System.Collections.Generic.List{MinecaRTS.Cell}
      overload: MinecaRTS.Grid.CellsInRect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.CellsInRectFromLines(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
      commentId: M:MinecaRTS.Grid.CellsInRectFromLines(Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point,Microsoft.Xna.Framework.Point)
      language: CSharp
      name:
        CSharp: CellsInRectFromLines(Point, Point, Point, Point)
        VB: CellsInRectFromLines(Point, Point, Point, Point)
      nameWithType:
        CSharp: Grid.CellsInRectFromLines(Point, Point, Point, Point)
        VB: Grid.CellsInRectFromLines(Point, Point, Point, Point)
      qualifiedName:
        CSharp: MinecaRTS.Grid.CellsInRectFromLines(Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point)
        VB: MinecaRTS.Grid.CellsInRectFromLines(Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point, Microsoft.Xna.Framework.Point)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CellsInRectFromLines
        path: MinecaRTS/Core/Grid.cs
        startLine: 274
      summary: "\nProjects a rectangle from two lines and returns all cells the rectangle is touching.\n"
      example: []
      syntax:
        content:
          CSharp: public HashSet<Cell> CellsInRectFromLines(Point from1, Point to1, Point from2, Point to2)
          VB: Public Function CellsInRectFromLines(from1 As Point, to1 As Point, from2 As Point, to2 As Point) As HashSet(Of Cell)
        parameters:
        - id: from1
          type: Microsoft.Xna.Framework.Point
        - id: to1
          type: Microsoft.Xna.Framework.Point
        - id: from2
          type: Microsoft.Xna.Framework.Point
        - id: to2
          type: Microsoft.Xna.Framework.Point
        return:
          type: System.Collections.Generic.HashSet{MinecaRTS.Cell}
      overload: MinecaRTS.Grid.CellsInRectFromLines*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.CellsOnLine(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Grid.CellsOnLine(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: CellsOnLine(Vector2, Vector2)
        VB: CellsOnLine(Vector2, Vector2)
      nameWithType:
        CSharp: Grid.CellsOnLine(Vector2, Vector2)
        VB: Grid.CellsOnLine(Vector2, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Grid.CellsOnLine(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Grid.CellsOnLine(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CellsOnLine
        path: MinecaRTS/Core/Grid.cs
        startLine: 283
      syntax:
        content:
          CSharp: public HashSet<Cell> CellsOnLine(Vector2 v1, Vector2 v2)
          VB: Public Function CellsOnLine(v1 As Vector2, v2 As Vector2) As HashSet(Of Cell)
        parameters:
        - id: v1
          type: Microsoft.Xna.Framework.Vector2
        - id: v2
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: System.Collections.Generic.HashSet{MinecaRTS.Cell}
      overload: MinecaRTS.Grid.CellsOnLine*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.AddColumns(System.Int32)
      commentId: M:MinecaRTS.Grid.AddColumns(System.Int32)
      language: CSharp
      name:
        CSharp: AddColumns(Int32)
        VB: AddColumns(Int32)
      nameWithType:
        CSharp: Grid.AddColumns(Int32)
        VB: Grid.AddColumns(Int32)
      qualifiedName:
        CSharp: MinecaRTS.Grid.AddColumns(System.Int32)
        VB: MinecaRTS.Grid.AddColumns(System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddColumns
        path: MinecaRTS/Core/Grid.cs
        startLine: 334
      summary: "\nAdds columns to the grid.\nColumns are the outer list, so adding a column creates a new list and populates it.\n"
      example: []
      syntax:
        content:
          CSharp: public void AddColumns(int amountToAdd)
          VB: Public Sub AddColumns(amountToAdd As Integer)
        parameters:
        - id: amountToAdd
          type: System.Int32
          description: The number of columns to add.
      overload: MinecaRTS.Grid.AddColumns*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.AddRows(System.Int32)
      commentId: M:MinecaRTS.Grid.AddRows(System.Int32)
      language: CSharp
      name:
        CSharp: AddRows(Int32)
        VB: AddRows(Int32)
      nameWithType:
        CSharp: Grid.AddRows(Int32)
        VB: Grid.AddRows(Int32)
      qualifiedName:
        CSharp: MinecaRTS.Grid.AddRows(System.Int32)
        VB: MinecaRTS.Grid.AddRows(System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddRows
        path: MinecaRTS/Core/Grid.cs
        startLine: 361
      summary: "\nAdds rows to the grid.\nRows are the inner list, so adding a row appends a new cell to the end of each list.\n"
      example: []
      syntax:
        content:
          CSharp: public void AddRows(int amountToAdd)
          VB: Public Sub AddRows(amountToAdd As Integer)
        parameters:
        - id: amountToAdd
          type: System.Int32
          description: The number of rows to add.
      overload: MinecaRTS.Grid.AddRows*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.MakeBorder
      commentId: M:MinecaRTS.Grid.MakeBorder
      language: CSharp
      name:
        CSharp: MakeBorder()
        VB: MakeBorder()
      nameWithType:
        CSharp: Grid.MakeBorder()
        VB: Grid.MakeBorder()
      qualifiedName:
        CSharp: MinecaRTS.Grid.MakeBorder()
        VB: MinecaRTS.Grid.MakeBorder()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MakeBorder
        path: MinecaRTS/Core/Grid.cs
        startLine: 383
      summary: "\nMakes walls around the edge of the grid - for easy initialisation.\n"
      example: []
      syntax:
        content:
          CSharp: public void MakeBorder()
          VB: Public Sub MakeBorder
      overload: MinecaRTS.Grid.MakeBorder*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Grid.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Grid.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: Grid.Render(SpriteBatch)
        VB: Grid.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Grid.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Grid.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Grid.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Core/Grid.cs
        startLine: 403
      summary: "\nRenders the grid.\nCalls render on each Cell and draws a rectangle around it if ShowGrid is turned on.\n"
      example: []
      syntax:
        content:
          CSharp: public void Render(SpriteBatch spriteBatch)
          VB: Public Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
          description: ''
      overload: MinecaRTS.Grid.Render*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.HumanPlayer
    commentId: T:MinecaRTS.HumanPlayer
    language: CSharp
    name:
      CSharp: HumanPlayer
      VB: HumanPlayer
    nameWithType:
      CSharp: HumanPlayer
      VB: HumanPlayer
    qualifiedName:
      CSharp: MinecaRTS.HumanPlayer
      VB: MinecaRTS.HumanPlayer
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Bots/HumanPlayer.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: HumanPlayer
      path: MinecaRTS/Bots/HumanPlayer.cs
      startLine: 12
    syntax:
      content:
        CSharp: 'public class HumanPlayer : Player, IHandleMessages'
        VB: >-
          Public Class HumanPlayer

              Inherits Player

              Implements IHandleMessages
    inheritance:
    - System.Object
    - MinecaRTS.Player
    implements:
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.Player.ID
    - MinecaRTS.Player.Data
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.HumanPlayer.#ctor(MinecaRTS.PlayerData)
      commentId: M:MinecaRTS.HumanPlayer.#ctor(MinecaRTS.PlayerData)
      language: CSharp
      name:
        CSharp: HumanPlayer(PlayerData)
        VB: HumanPlayer(PlayerData)
      nameWithType:
        CSharp: HumanPlayer.HumanPlayer(PlayerData)
        VB: HumanPlayer.HumanPlayer(PlayerData)
      qualifiedName:
        CSharp: MinecaRTS.HumanPlayer.HumanPlayer(MinecaRTS.PlayerData)
        VB: MinecaRTS.HumanPlayer.HumanPlayer(MinecaRTS.PlayerData)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/HumanPlayer.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Bots/HumanPlayer.cs
        startLine: 25
      syntax:
        content:
          CSharp: public HumanPlayer(PlayerData data)
          VB: Public Sub New(data As PlayerData)
        parameters:
        - id: data
          type: MinecaRTS.PlayerData
      overload: MinecaRTS.HumanPlayer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.HumanPlayer.HandleInput
      commentId: M:MinecaRTS.HumanPlayer.HandleInput
      language: CSharp
      name:
        CSharp: HandleInput()
        VB: HandleInput()
      nameWithType:
        CSharp: HumanPlayer.HandleInput()
        VB: HumanPlayer.HandleInput()
      qualifiedName:
        CSharp: MinecaRTS.HumanPlayer.HandleInput()
        VB: MinecaRTS.HumanPlayer.HandleInput()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/HumanPlayer.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleInput
        path: MinecaRTS/Bots/HumanPlayer.cs
        startLine: 29
      syntax:
        content:
          CSharp: public override void HandleInput()
          VB: Public Overrides Sub HandleInput
      overload: MinecaRTS.HumanPlayer.HandleInput*
      overridden: MinecaRTS.Player.HandleInput
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.HumanPlayer.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.HumanPlayer.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: HumanPlayer.HandleMessage(Message)
        VB: HumanPlayer.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.HumanPlayer.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.HumanPlayer.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/HumanPlayer.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Bots/HumanPlayer.cs
        startLine: 217
      syntax:
        content:
          CSharp: public override void HandleMessage(Message message)
          VB: Public Overrides Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.HumanPlayer.HandleMessage*
      overridden: MinecaRTS.Player.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.HumanPlayer.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.HumanPlayer.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: HumanPlayer.Render(SpriteBatch)
        VB: HumanPlayer.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.HumanPlayer.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.HumanPlayer.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Bots/HumanPlayer.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Bots/HumanPlayer.cs
        startLine: 221
      syntax:
        content:
          CSharp: public override void Render(SpriteBatch spriteBatch)
          VB: Public Overrides Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.HumanPlayer.Render*
      overridden: MinecaRTS.Player.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: MinecaRTS.Input
    commentId: T:MinecaRTS.Input
    language: CSharp
    name:
      CSharp: Input
      VB: Input
    nameWithType:
      CSharp: Input
      VB: Input
    qualifiedName:
      CSharp: MinecaRTS.Input
      VB: MinecaRTS.Input
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Utils/Input.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Input
      path: MinecaRTS/Utils/Input.cs
      startLine: 29
    summary: "\nDefines the core Input handling methods for the program.\n\nKey States are defined as:\nDown        - the key is currently being pressed.\nTyped       - the key was pressed this tick.\nReleased    - the key was released this tick.\n\nMouse States are defined as:\nDown        - the button is currently being pressed.\nPressed     - the button was pressed this tick.\nClicked     - the button was released this tick.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Input
        VB: Public Module Input
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: MinecaRTS.Input.MouseX
      commentId: P:MinecaRTS.Input.MouseX
      language: CSharp
      name:
        CSharp: MouseX
        VB: MouseX
      nameWithType:
        CSharp: Input.MouseX
        VB: Input.MouseX
      qualifiedName:
        CSharp: MinecaRTS.Input.MouseX
        VB: MinecaRTS.Input.MouseX
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MouseX
        path: MinecaRTS/Utils/Input.cs
        startLine: 59
      summary: "\nReturns the current x position of the mouse.\n"
      example: []
      syntax:
        content:
          CSharp: public static int MouseX { get; }
          VB: Public Shared ReadOnly Property MouseX As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Input.MouseX*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: MinecaRTS.Input.MouseY
      commentId: P:MinecaRTS.Input.MouseY
      language: CSharp
      name:
        CSharp: MouseY
        VB: MouseY
      nameWithType:
        CSharp: Input.MouseY
        VB: Input.MouseY
      qualifiedName:
        CSharp: MinecaRTS.Input.MouseY
        VB: MinecaRTS.Input.MouseY
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MouseY
        path: MinecaRTS/Utils/Input.cs
        startLine: 70
      summary: "\nReturns the current y position of the mouse.\n"
      example: []
      syntax:
        content:
          CSharp: public static int MouseY { get; }
          VB: Public Shared ReadOnly Property MouseY As Integer
        parameters: []
        return:
          type: System.Int32
      overload: MinecaRTS.Input.MouseY*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: MinecaRTS.Input.MousePos
      commentId: P:MinecaRTS.Input.MousePos
      language: CSharp
      name:
        CSharp: MousePos
        VB: MousePos
      nameWithType:
        CSharp: Input.MousePos
        VB: Input.MousePos
      qualifiedName:
        CSharp: MinecaRTS.Input.MousePos
        VB: MinecaRTS.Input.MousePos
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MousePos
        path: MinecaRTS/Utils/Input.cs
        startLine: 81
      summary: "\nReturns the mouse x / y positions as a Vector2.\n"
      example: []
      syntax:
        content:
          CSharp: public static Vector2 MousePos { get; }
          VB: Public Shared ReadOnly Property MousePos As Vector2
        parameters: []
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Input.MousePos*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: MinecaRTS.Input.UpdateStates
      commentId: M:MinecaRTS.Input.UpdateStates
      language: CSharp
      name:
        CSharp: UpdateStates()
        VB: UpdateStates()
      nameWithType:
        CSharp: Input.UpdateStates()
        VB: Input.UpdateStates()
      qualifiedName:
        CSharp: MinecaRTS.Input.UpdateStates()
        VB: MinecaRTS.Input.UpdateStates()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: UpdateStates
        path: MinecaRTS/Utils/Input.cs
        startLine: 93
      summary: "\nThe Input process method to be called once per tick. Updates the current and previous keyboard and mouse states.\n"
      example: []
      syntax:
        content:
          CSharp: public static void UpdateStates()
          VB: Public Shared Sub UpdateStates
      overload: MinecaRTS.Input.UpdateStates*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Input.KeyDown(Microsoft.Xna.Framework.Input.Keys)
      commentId: M:MinecaRTS.Input.KeyDown(Microsoft.Xna.Framework.Input.Keys)
      language: CSharp
      name:
        CSharp: KeyDown(Keys)
        VB: KeyDown(Keys)
      nameWithType:
        CSharp: Input.KeyDown(Keys)
        VB: Input.KeyDown(Keys)
      qualifiedName:
        CSharp: MinecaRTS.Input.KeyDown(Microsoft.Xna.Framework.Input.Keys)
        VB: MinecaRTS.Input.KeyDown(Microsoft.Xna.Framework.Input.Keys)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: KeyDown
        path: MinecaRTS/Utils/Input.cs
        startLine: 108
      summary: "\nSpecifies if the passed in key is currently being pressed.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool KeyDown(Keys key)
          VB: Public Shared Function KeyDown(key As Keys) As Boolean
        parameters:
        - id: key
          type: Microsoft.Xna.Framework.Input.Keys
          description: The key to check.
        return:
          type: System.Boolean
      overload: MinecaRTS.Input.KeyDown*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Input.KeyTyped(Microsoft.Xna.Framework.Input.Keys)
      commentId: M:MinecaRTS.Input.KeyTyped(Microsoft.Xna.Framework.Input.Keys)
      language: CSharp
      name:
        CSharp: KeyTyped(Keys)
        VB: KeyTyped(Keys)
      nameWithType:
        CSharp: Input.KeyTyped(Keys)
        VB: Input.KeyTyped(Keys)
      qualifiedName:
        CSharp: MinecaRTS.Input.KeyTyped(Microsoft.Xna.Framework.Input.Keys)
        VB: MinecaRTS.Input.KeyTyped(Microsoft.Xna.Framework.Input.Keys)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: KeyTyped
        path: MinecaRTS/Utils/Input.cs
        startLine: 117
      summary: "\nSpecifies if the passed in key was pressed this tick.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool KeyTyped(Keys key)
          VB: Public Shared Function KeyTyped(key As Keys) As Boolean
        parameters:
        - id: key
          type: Microsoft.Xna.Framework.Input.Keys
          description: The key to check.
        return:
          type: System.Boolean
      overload: MinecaRTS.Input.KeyTyped*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Input.KeyReleased(Microsoft.Xna.Framework.Input.Keys)
      commentId: M:MinecaRTS.Input.KeyReleased(Microsoft.Xna.Framework.Input.Keys)
      language: CSharp
      name:
        CSharp: KeyReleased(Keys)
        VB: KeyReleased(Keys)
      nameWithType:
        CSharp: Input.KeyReleased(Keys)
        VB: Input.KeyReleased(Keys)
      qualifiedName:
        CSharp: MinecaRTS.Input.KeyReleased(Microsoft.Xna.Framework.Input.Keys)
        VB: MinecaRTS.Input.KeyReleased(Microsoft.Xna.Framework.Input.Keys)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: KeyReleased
        path: MinecaRTS/Utils/Input.cs
        startLine: 126
      summary: "\nSpecifies if the passed in key was released this tick.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool KeyReleased(Keys key)
          VB: Public Shared Function KeyReleased(key As Keys) As Boolean
        parameters:
        - id: key
          type: Microsoft.Xna.Framework.Input.Keys
          description: The key to check.
        return:
          type: System.Boolean
      overload: MinecaRTS.Input.KeyReleased*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Input.LeftMouseDown
      commentId: M:MinecaRTS.Input.LeftMouseDown
      language: CSharp
      name:
        CSharp: LeftMouseDown()
        VB: LeftMouseDown()
      nameWithType:
        CSharp: Input.LeftMouseDown()
        VB: Input.LeftMouseDown()
      qualifiedName:
        CSharp: MinecaRTS.Input.LeftMouseDown()
        VB: MinecaRTS.Input.LeftMouseDown()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: LeftMouseDown
        path: MinecaRTS/Utils/Input.cs
        startLine: 134
      summary: "\nSpecifies if the left mouse button is currently held down.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool LeftMouseDown()
          VB: Public Shared Function LeftMouseDown As Boolean
        return:
          type: System.Boolean
      overload: MinecaRTS.Input.LeftMouseDown*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Input.LeftMousePressed
      commentId: M:MinecaRTS.Input.LeftMousePressed
      language: CSharp
      name:
        CSharp: LeftMousePressed()
        VB: LeftMousePressed()
      nameWithType:
        CSharp: Input.LeftMousePressed()
        VB: Input.LeftMousePressed()
      qualifiedName:
        CSharp: MinecaRTS.Input.LeftMousePressed()
        VB: MinecaRTS.Input.LeftMousePressed()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: LeftMousePressed
        path: MinecaRTS/Utils/Input.cs
        startLine: 142
      summary: "\nSpecifies if the left mouse button was pushed down this tick.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool LeftMousePressed()
          VB: Public Shared Function LeftMousePressed As Boolean
        return:
          type: System.Boolean
      overload: MinecaRTS.Input.LeftMousePressed*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Input.LeftMouseClicked
      commentId: M:MinecaRTS.Input.LeftMouseClicked
      language: CSharp
      name:
        CSharp: LeftMouseClicked()
        VB: LeftMouseClicked()
      nameWithType:
        CSharp: Input.LeftMouseClicked()
        VB: Input.LeftMouseClicked()
      qualifiedName:
        CSharp: MinecaRTS.Input.LeftMouseClicked()
        VB: MinecaRTS.Input.LeftMouseClicked()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: LeftMouseClicked
        path: MinecaRTS/Utils/Input.cs
        startLine: 150
      summary: "\nSpecifies if the left mouse button was released this tick.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool LeftMouseClicked()
          VB: Public Shared Function LeftMouseClicked As Boolean
        return:
          type: System.Boolean
      overload: MinecaRTS.Input.LeftMouseClicked*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Input.RightMouseDown
      commentId: M:MinecaRTS.Input.RightMouseDown
      language: CSharp
      name:
        CSharp: RightMouseDown()
        VB: RightMouseDown()
      nameWithType:
        CSharp: Input.RightMouseDown()
        VB: Input.RightMouseDown()
      qualifiedName:
        CSharp: MinecaRTS.Input.RightMouseDown()
        VB: MinecaRTS.Input.RightMouseDown()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RightMouseDown
        path: MinecaRTS/Utils/Input.cs
        startLine: 159
      summary: "\nSpecifies if the right mouse button is currently held down.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool RightMouseDown()
          VB: Public Shared Function RightMouseDown As Boolean
        return:
          type: System.Boolean
          description: ''
      overload: MinecaRTS.Input.RightMouseDown*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Input.RightMousePressed
      commentId: M:MinecaRTS.Input.RightMousePressed
      language: CSharp
      name:
        CSharp: RightMousePressed()
        VB: RightMousePressed()
      nameWithType:
        CSharp: Input.RightMousePressed()
        VB: Input.RightMousePressed()
      qualifiedName:
        CSharp: MinecaRTS.Input.RightMousePressed()
        VB: MinecaRTS.Input.RightMousePressed()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RightMousePressed
        path: MinecaRTS/Utils/Input.cs
        startLine: 167
      summary: "\nSpecifies if the right mouse button was pushed down this tick.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool RightMousePressed()
          VB: Public Shared Function RightMousePressed As Boolean
        return:
          type: System.Boolean
      overload: MinecaRTS.Input.RightMousePressed*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Input.RightMouseClicked
      commentId: M:MinecaRTS.Input.RightMouseClicked
      language: CSharp
      name:
        CSharp: RightMouseClicked()
        VB: RightMouseClicked()
      nameWithType:
        CSharp: Input.RightMouseClicked()
        VB: Input.RightMouseClicked()
      qualifiedName:
        CSharp: MinecaRTS.Input.RightMouseClicked()
        VB: MinecaRTS.Input.RightMouseClicked()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RightMouseClicked
        path: MinecaRTS/Utils/Input.cs
        startLine: 175
      summary: "\nSpecifies if the right mouse button was released this tick.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool RightMouseClicked()
          VB: Public Shared Function RightMouseClicked As Boolean
        return:
          type: System.Boolean
      overload: MinecaRTS.Input.RightMouseClicked*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Input.SetMaxMouseX(System.Int32)
      commentId: M:MinecaRTS.Input.SetMaxMouseX(System.Int32)
      language: CSharp
      name:
        CSharp: SetMaxMouseX(Int32)
        VB: SetMaxMouseX(Int32)
      nameWithType:
        CSharp: Input.SetMaxMouseX(Int32)
        VB: Input.SetMaxMouseX(Int32)
      qualifiedName:
        CSharp: MinecaRTS.Input.SetMaxMouseX(System.Int32)
        VB: MinecaRTS.Input.SetMaxMouseX(System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SetMaxMouseX
        path: MinecaRTS/Utils/Input.cs
        startLine: 183
      summary: "\nSets the maximum returnable X value of the mouse position.\n"
      example: []
      syntax:
        content:
          CSharp: public static void SetMaxMouseX(int max)
          VB: Public Shared Sub SetMaxMouseX(max As Integer)
        parameters:
        - id: max
          type: System.Int32
      overload: MinecaRTS.Input.SetMaxMouseX*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Input.SetMaxMouseY(System.Int32)
      commentId: M:MinecaRTS.Input.SetMaxMouseY(System.Int32)
      language: CSharp
      name:
        CSharp: SetMaxMouseY(Int32)
        VB: SetMaxMouseY(Int32)
      nameWithType:
        CSharp: Input.SetMaxMouseY(Int32)
        VB: Input.SetMaxMouseY(Int32)
      qualifiedName:
        CSharp: MinecaRTS.Input.SetMaxMouseY(System.Int32)
        VB: MinecaRTS.Input.SetMaxMouseY(System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Input.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SetMaxMouseY
        path: MinecaRTS/Utils/Input.cs
        startLine: 191
      summary: "\nSets the maximum returnable Y value of the mouse position.\n"
      example: []
      syntax:
        content:
          CSharp: public static void SetMaxMouseY(int max)
          VB: Public Shared Sub SetMaxMouseY(max As Integer)
        parameters:
        - id: max
          type: System.Int32
      overload: MinecaRTS.Input.SetMaxMouseY*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: MinecaRTS.MessageType
    commentId: T:MinecaRTS.MessageType
    language: CSharp
    name:
      CSharp: MessageType
      VB: MessageType
    nameWithType:
      CSharp: MessageType
      VB: MessageType
    qualifiedName:
      CSharp: MinecaRTS.MessageType
      VB: MinecaRTS.MessageType
    type: Enum
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Messaging/MessageType.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: MessageType
      path: MinecaRTS/Messaging/MessageType.cs
      startLine: 8
    syntax:
      content:
        CSharp: public enum MessageType
        VB: Public Enum MessageType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: MinecaRTS.MessageType.ResourceDepleted
      commentId: F:MinecaRTS.MessageType.ResourceDepleted
      language: CSharp
      name:
        CSharp: ResourceDepleted
        VB: ResourceDepleted
      nameWithType:
        CSharp: MessageType.ResourceDepleted
        VB: MessageType.ResourceDepleted
      qualifiedName:
        CSharp: MinecaRTS.MessageType.ResourceDepleted
        VB: MinecaRTS.MessageType.ResourceDepleted
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MessageType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ResourceDepleted
        path: MinecaRTS/Messaging/MessageType.cs
        startLine: 10
      syntax:
        content:
          CSharp: ResourceDepleted = 0
          VB: ResourceDepleted = 0
        return:
          type: MinecaRTS.MessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.MessageType.GiveMeResources
      commentId: F:MinecaRTS.MessageType.GiveMeResources
      language: CSharp
      name:
        CSharp: GiveMeResources
        VB: GiveMeResources
      nameWithType:
        CSharp: MessageType.GiveMeResources
        VB: MessageType.GiveMeResources
      qualifiedName:
        CSharp: MinecaRTS.MessageType.GiveMeResources
        VB: MinecaRTS.MessageType.GiveMeResources
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MessageType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GiveMeResources
        path: MinecaRTS/Messaging/MessageType.cs
        startLine: 11
      syntax:
        content:
          CSharp: GiveMeResources = 1
          VB: GiveMeResources = 1
        return:
          type: MinecaRTS.MessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.MessageType.UnitSpawned
      commentId: F:MinecaRTS.MessageType.UnitSpawned
      language: CSharp
      name:
        CSharp: UnitSpawned
        VB: UnitSpawned
      nameWithType:
        CSharp: MessageType.UnitSpawned
        VB: MessageType.UnitSpawned
      qualifiedName:
        CSharp: MinecaRTS.MessageType.UnitSpawned
        VB: MinecaRTS.MessageType.UnitSpawned
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MessageType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: UnitSpawned
        path: MinecaRTS/Messaging/MessageType.cs
        startLine: 12
      syntax:
        content:
          CSharp: UnitSpawned = 2
          VB: UnitSpawned = 2
        return:
          type: MinecaRTS.MessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.MessageType.UnitMoved
      commentId: F:MinecaRTS.MessageType.UnitMoved
      language: CSharp
      name:
        CSharp: UnitMoved
        VB: UnitMoved
      nameWithType:
        CSharp: MessageType.UnitMoved
        VB: MessageType.UnitMoved
      qualifiedName:
        CSharp: MinecaRTS.MessageType.UnitMoved
        VB: MinecaRTS.MessageType.UnitMoved
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MessageType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: UnitMoved
        path: MinecaRTS/Messaging/MessageType.cs
        startLine: 13
      syntax:
        content:
          CSharp: UnitMoved = 3
          VB: UnitMoved = 3
        return:
          type: MinecaRTS.MessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.MessageType.SearchComplete
      commentId: F:MinecaRTS.MessageType.SearchComplete
      language: CSharp
      name:
        CSharp: SearchComplete
        VB: SearchComplete
      nameWithType:
        CSharp: MessageType.SearchComplete
        VB: MessageType.SearchComplete
      qualifiedName:
        CSharp: MinecaRTS.MessageType.SearchComplete
        VB: MinecaRTS.MessageType.SearchComplete
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MessageType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SearchComplete
        path: MinecaRTS/Messaging/MessageType.cs
        startLine: 14
      syntax:
        content:
          CSharp: SearchComplete = 4
          VB: SearchComplete = 4
        return:
          type: MinecaRTS.MessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.MessageType.ProductionBuildingTaskComplete
      commentId: F:MinecaRTS.MessageType.ProductionBuildingTaskComplete
      language: CSharp
      name:
        CSharp: ProductionBuildingTaskComplete
        VB: ProductionBuildingTaskComplete
      nameWithType:
        CSharp: MessageType.ProductionBuildingTaskComplete
        VB: MessageType.ProductionBuildingTaskComplete
      qualifiedName:
        CSharp: MinecaRTS.MessageType.ProductionBuildingTaskComplete
        VB: MinecaRTS.MessageType.ProductionBuildingTaskComplete
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MessageType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ProductionBuildingTaskComplete
        path: MinecaRTS/Messaging/MessageType.cs
        startLine: 15
      syntax:
        content:
          CSharp: ProductionBuildingTaskComplete = 5
          VB: ProductionBuildingTaskComplete = 5
        return:
          type: MinecaRTS.MessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.MessageType.SupplyChanged
      commentId: F:MinecaRTS.MessageType.SupplyChanged
      language: CSharp
      name:
        CSharp: SupplyChanged
        VB: SupplyChanged
      nameWithType:
        CSharp: MessageType.SupplyChanged
        VB: MessageType.SupplyChanged
      qualifiedName:
        CSharp: MinecaRTS.MessageType.SupplyChanged
        VB: MinecaRTS.MessageType.SupplyChanged
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MessageType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SupplyChanged
        path: MinecaRTS/Messaging/MessageType.cs
        startLine: 16
      syntax:
        content:
          CSharp: SupplyChanged = 6
          VB: SupplyChanged = 6
        return:
          type: MinecaRTS.MessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.MessageType.BuildingComplete
      commentId: F:MinecaRTS.MessageType.BuildingComplete
      language: CSharp
      name:
        CSharp: BuildingComplete
        VB: BuildingComplete
      nameWithType:
        CSharp: MessageType.BuildingComplete
        VB: MessageType.BuildingComplete
      qualifiedName:
        CSharp: MinecaRTS.MessageType.BuildingComplete
        VB: MinecaRTS.MessageType.BuildingComplete
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MessageType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: BuildingComplete
        path: MinecaRTS/Messaging/MessageType.cs
        startLine: 17
      syntax:
        content:
          CSharp: BuildingComplete = 7
          VB: BuildingComplete = 7
        return:
          type: MinecaRTS.MessageType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: MinecaRTS.Message
    commentId: T:MinecaRTS.Message
    language: CSharp
    name:
      CSharp: Message
      VB: Message
    nameWithType:
      CSharp: Message
      VB: Message
    qualifiedName:
      CSharp: MinecaRTS.Message
      VB: MinecaRTS.Message
    type: Struct
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Messaging/MsgBoard.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Message
      path: MinecaRTS/Messaging/MsgBoard.cs
      startLine: 8
    syntax:
      content:
        CSharp: public struct Message
        VB: Public Structure Message
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: MinecaRTS.Message.sender
      commentId: F:MinecaRTS.Message.sender
      language: CSharp
      name:
        CSharp: sender
        VB: sender
      nameWithType:
        CSharp: Message.sender
        VB: Message.sender
      qualifiedName:
        CSharp: MinecaRTS.Message.sender
        VB: MinecaRTS.Message.sender
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgBoard.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: sender
        path: MinecaRTS/Messaging/MsgBoard.cs
        startLine: 10
      syntax:
        content:
          CSharp: public object sender
          VB: Public sender As Object
        return:
          type: System.Object
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Message.receiver
      commentId: F:MinecaRTS.Message.receiver
      language: CSharp
      name:
        CSharp: receiver
        VB: receiver
      nameWithType:
        CSharp: Message.receiver
        VB: Message.receiver
      qualifiedName:
        CSharp: MinecaRTS.Message.receiver
        VB: MinecaRTS.Message.receiver
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgBoard.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: receiver
        path: MinecaRTS/Messaging/MsgBoard.cs
        startLine: 11
      syntax:
        content:
          CSharp: public IHandleMessages receiver
          VB: Public receiver As IHandleMessages
        return:
          type: MinecaRTS.IHandleMessages
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Message.type
      commentId: F:MinecaRTS.Message.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: Message.type
        VB: Message.type
      qualifiedName:
        CSharp: MinecaRTS.Message.type
        VB: MinecaRTS.Message.type
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgBoard.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: type
        path: MinecaRTS/Messaging/MsgBoard.cs
        startLine: 12
      syntax:
        content:
          CSharp: public MessageType type
          VB: Public type As MessageType
        return:
          type: MinecaRTS.MessageType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Message.delay
      commentId: F:MinecaRTS.Message.delay
      language: CSharp
      name:
        CSharp: delay
        VB: delay
      nameWithType:
        CSharp: Message.delay
        VB: Message.delay
      qualifiedName:
        CSharp: MinecaRTS.Message.delay
        VB: MinecaRTS.Message.delay
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgBoard.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: delay
        path: MinecaRTS/Messaging/MsgBoard.cs
        startLine: 13
      syntax:
        content:
          CSharp: public ulong delay
          VB: Public delay As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Message.extraInfo
      commentId: F:MinecaRTS.Message.extraInfo
      language: CSharp
      name:
        CSharp: extraInfo
        VB: extraInfo
      nameWithType:
        CSharp: Message.extraInfo
        VB: Message.extraInfo
      qualifiedName:
        CSharp: MinecaRTS.Message.extraInfo
        VB: MinecaRTS.Message.extraInfo
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgBoard.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: extraInfo
        path: MinecaRTS/Messaging/MsgBoard.cs
        startLine: 14
      syntax:
        content:
          CSharp: public dynamic extraInfo
          VB: Public extraInfo As Object
        return:
          type: System.Object
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Message.dispatchTime
      commentId: F:MinecaRTS.Message.dispatchTime
      language: CSharp
      name:
        CSharp: dispatchTime
        VB: dispatchTime
      nameWithType:
        CSharp: Message.dispatchTime
        VB: Message.dispatchTime
      qualifiedName:
        CSharp: MinecaRTS.Message.dispatchTime
        VB: MinecaRTS.Message.dispatchTime
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgBoard.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: dispatchTime
        path: MinecaRTS/Messaging/MsgBoard.cs
        startLine: 15
      syntax:
        content:
          CSharp: public ulong dispatchTime
          VB: Public dispatchTime As ULong
        return:
          type: System.UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Message.#ctor(System.Object,MinecaRTS.IHandleMessages,MinecaRTS.MessageType,System.Object,System.UInt64)
      commentId: M:MinecaRTS.Message.#ctor(System.Object,MinecaRTS.IHandleMessages,MinecaRTS.MessageType,System.Object,System.UInt64)
      language: CSharp
      name:
        CSharp: Message(Object, IHandleMessages, MessageType, Object, UInt64)
        VB: Message(Object, IHandleMessages, MessageType, Object, UInt64)
      nameWithType:
        CSharp: Message.Message(Object, IHandleMessages, MessageType, Object, UInt64)
        VB: Message.Message(Object, IHandleMessages, MessageType, Object, UInt64)
      qualifiedName:
        CSharp: MinecaRTS.Message.Message(System.Object, MinecaRTS.IHandleMessages, MinecaRTS.MessageType, System.Object, System.UInt64)
        VB: MinecaRTS.Message.Message(System.Object, MinecaRTS.IHandleMessages, MinecaRTS.MessageType, System.Object, System.UInt64)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgBoard.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Messaging/MsgBoard.cs
        startLine: 17
      syntax:
        content:
          CSharp: public Message(object s, IHandleMessages r, MessageType msgType, dynamic info = null, ulong d = 0UL)
          VB: Public Sub New(s As Object, r As IHandleMessages, msgType As MessageType, info As Object = Nothing, d As ULong = 0UL)
        parameters:
        - id: s
          type: System.Object
        - id: r
          type: MinecaRTS.IHandleMessages
        - id: msgType
          type: MinecaRTS.MessageType
        - id: info
          type: System.Object
        - id: d
          type: System.UInt64
      overload: MinecaRTS.Message.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.MsgBoard
    commentId: T:MinecaRTS.MsgBoard
    language: CSharp
    name:
      CSharp: MsgBoard
      VB: MsgBoard
    nameWithType:
      CSharp: MsgBoard
      VB: MsgBoard
    qualifiedName:
      CSharp: MinecaRTS.MsgBoard
      VB: MinecaRTS.MsgBoard
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Messaging/MsgBoard.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: MsgBoard
      path: MinecaRTS/Messaging/MsgBoard.cs
      startLine: 28
    syntax:
      content:
        CSharp: public static class MsgBoard
        VB: Public Module MsgBoard
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: MinecaRTS.MsgBoard.SENDER_IRRELEVANT
      commentId: P:MinecaRTS.MsgBoard.SENDER_IRRELEVANT
      language: CSharp
      name:
        CSharp: SENDER_IRRELEVANT
        VB: SENDER_IRRELEVANT
      nameWithType:
        CSharp: MsgBoard.SENDER_IRRELEVANT
        VB: MsgBoard.SENDER_IRRELEVANT
      qualifiedName:
        CSharp: MinecaRTS.MsgBoard.SENDER_IRRELEVANT
        VB: MinecaRTS.MsgBoard.SENDER_IRRELEVANT
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgBoard.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SENDER_IRRELEVANT
        path: MinecaRTS/Messaging/MsgBoard.cs
        startLine: 32
      syntax:
        content:
          CSharp: public static object SENDER_IRRELEVANT { get; }
          VB: Public Shared ReadOnly Property SENDER_IRRELEVANT As Object
        parameters: []
        return:
          type: System.Object
      overload: MinecaRTS.MsgBoard.SENDER_IRRELEVANT*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: MinecaRTS.MsgBoard.AddMessage(System.Object,System.UInt64,MinecaRTS.MessageType,System.Object,System.UInt32)
      commentId: M:MinecaRTS.MsgBoard.AddMessage(System.Object,System.UInt64,MinecaRTS.MessageType,System.Object,System.UInt32)
      language: CSharp
      name:
        CSharp: AddMessage(Object, UInt64, MessageType, Object, UInt32)
        VB: AddMessage(Object, UInt64, MessageType, Object, UInt32)
      nameWithType:
        CSharp: MsgBoard.AddMessage(Object, UInt64, MessageType, Object, UInt32)
        VB: MsgBoard.AddMessage(Object, UInt64, MessageType, Object, UInt32)
      qualifiedName:
        CSharp: MinecaRTS.MsgBoard.AddMessage(System.Object, System.UInt64, MinecaRTS.MessageType, System.Object, System.UInt32)
        VB: MinecaRTS.MsgBoard.AddMessage(System.Object, System.UInt64, MinecaRTS.MessageType, System.Object, System.UInt32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgBoard.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddMessage
        path: MinecaRTS/Messaging/MsgBoard.cs
        startLine: 44
      syntax:
        content:
          CSharp: public static void AddMessage(object sender, ulong receiverID, MessageType msg, dynamic info = null, uint delay = 0U)
          VB: Public Shared Sub AddMessage(sender As Object, receiverID As ULong, msg As MessageType, info As Object = Nothing, delay As UInteger = 0UI)
        parameters:
        - id: sender
          type: System.Object
        - id: receiverID
          type: System.UInt64
        - id: msg
          type: MinecaRTS.MessageType
        - id: info
          type: System.Object
        - id: delay
          type: System.UInt32
      overload: MinecaRTS.MsgBoard.AddMessage*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.MsgBoard.SendMessages
      commentId: M:MinecaRTS.MsgBoard.SendMessages
      language: CSharp
      name:
        CSharp: SendMessages()
        VB: SendMessages()
      nameWithType:
        CSharp: MsgBoard.SendMessages()
        VB: MsgBoard.SendMessages()
      qualifiedName:
        CSharp: MinecaRTS.MsgBoard.SendMessages()
        VB: MinecaRTS.MsgBoard.SendMessages()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Messaging/MsgBoard.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SendMessages
        path: MinecaRTS/Messaging/MsgBoard.cs
        startLine: 52
      syntax:
        content:
          CSharp: public static void SendMessages()
          VB: Public Shared Sub SendMessages
      overload: MinecaRTS.MsgBoard.SendMessages*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: MinecaRTS.Pathfinder
    commentId: T:MinecaRTS.Pathfinder
    language: CSharp
    name:
      CSharp: Pathfinder
      VB: Pathfinder
    nameWithType:
      CSharp: Pathfinder
      VB: Pathfinder
    qualifiedName:
      CSharp: MinecaRTS.Pathfinder
      VB: MinecaRTS.Pathfinder
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Pathing/Pathfinder.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Pathfinder
      path: MinecaRTS/Pathing/Pathfinder.cs
      startLine: 12
    syntax:
      content:
        CSharp: public class Pathfinder
        VB: Public Class Pathfinder
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Pathfinder.searchType
      commentId: F:MinecaRTS.Pathfinder.searchType
      language: CSharp
      name:
        CSharp: searchType
        VB: searchType
      nameWithType:
        CSharp: Pathfinder.searchType
        VB: Pathfinder.searchType
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.searchType
        VB: MinecaRTS.Pathfinder.searchType
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: searchType
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 15
      syntax:
        content:
          CSharp: public SearchType searchType
          VB: Public searchType As SearchType
        return:
          type: MinecaRTS.SearchType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.smoothed
      commentId: F:MinecaRTS.Pathfinder.smoothed
      language: CSharp
      name:
        CSharp: smoothed
        VB: smoothed
      nameWithType:
        CSharp: Pathfinder.smoothed
        VB: Pathfinder.smoothed
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.smoothed
        VB: MinecaRTS.Pathfinder.smoothed
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: smoothed
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 26
      syntax:
        content:
          CSharp: public bool smoothed
          VB: Public smoothed As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.path
      commentId: F:MinecaRTS.Pathfinder.path
      language: CSharp
      name:
        CSharp: path
        VB: path
      nameWithType:
        CSharp: Pathfinder.path
        VB: Pathfinder.path
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.path
        VB: MinecaRTS.Pathfinder.path
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: path
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 32
      syntax:
        content:
          CSharp: public List<Cell> path
          VB: Public path As List(Of Cell)
        return:
          type: System.Collections.Generic.List{MinecaRTS.Cell}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.handler
      commentId: F:MinecaRTS.Pathfinder.handler
      language: CSharp
      name:
        CSharp: handler
        VB: handler
      nameWithType:
        CSharp: Pathfinder.handler
        VB: Pathfinder.handler
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.handler
        VB: MinecaRTS.Pathfinder.handler
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: handler
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 39
      syntax:
        content:
          CSharp: public PathHandler handler
          VB: Public handler As PathHandler
        return:
          type: MinecaRTS.PathHandler
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.owner
      commentId: F:MinecaRTS.Pathfinder.owner
      language: CSharp
      name:
        CSharp: owner
        VB: owner
      nameWithType:
        CSharp: Pathfinder.owner
        VB: Pathfinder.owner
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.owner
        VB: MinecaRTS.Pathfinder.owner
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: owner
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 40
      syntax:
        content:
          CSharp: public Unit owner
          VB: Public owner As Unit
        return:
          type: MinecaRTS.Unit
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.#ctor(MinecaRTS.Unit,MinecaRTS.PathHandler)
      commentId: M:MinecaRTS.Pathfinder.#ctor(MinecaRTS.Unit,MinecaRTS.PathHandler)
      language: CSharp
      name:
        CSharp: Pathfinder(Unit, PathHandler)
        VB: Pathfinder(Unit, PathHandler)
      nameWithType:
        CSharp: Pathfinder.Pathfinder(Unit, PathHandler)
        VB: Pathfinder.Pathfinder(Unit, PathHandler)
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.Pathfinder(MinecaRTS.Unit, MinecaRTS.PathHandler)
        VB: MinecaRTS.Pathfinder.Pathfinder(MinecaRTS.Unit, MinecaRTS.PathHandler)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 42
      syntax:
        content:
          CSharp: public Pathfinder(Unit owner, PathHandler handler)
          VB: Public Sub New(owner As Unit, handler As PathHandler)
        parameters:
        - id: owner
          type: MinecaRTS.Unit
        - id: handler
          type: MinecaRTS.PathHandler
      overload: MinecaRTS.Pathfinder.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.SingleIterationDijkstra
      commentId: M:MinecaRTS.Pathfinder.SingleIterationDijkstra
      language: CSharp
      name:
        CSharp: SingleIterationDijkstra()
        VB: SingleIterationDijkstra()
      nameWithType:
        CSharp: Pathfinder.SingleIterationDijkstra()
        VB: Pathfinder.SingleIterationDijkstra()
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.SingleIterationDijkstra()
        VB: MinecaRTS.Pathfinder.SingleIterationDijkstra()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SingleIterationDijkstra
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 89
      syntax:
        content:
          CSharp: public SearchState SingleIterationDijkstra()
          VB: Public Function SingleIterationDijkstra As SearchState
        return:
          type: MinecaRTS.SearchState
      overload: MinecaRTS.Pathfinder.SingleIterationDijkstra*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.SingleIteration
      commentId: M:MinecaRTS.Pathfinder.SingleIteration
      language: CSharp
      name:
        CSharp: SingleIteration()
        VB: SingleIteration()
      nameWithType:
        CSharp: Pathfinder.SingleIteration()
        VB: Pathfinder.SingleIteration()
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.SingleIteration()
        VB: MinecaRTS.Pathfinder.SingleIteration()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SingleIteration
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 127
      syntax:
        content:
          CSharp: public SearchState SingleIteration()
          VB: Public Function SingleIteration As SearchState
        return:
          type: MinecaRTS.SearchState
      overload: MinecaRTS.Pathfinder.SingleIteration*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.SearchDijkstra(MinecaRTS.Grid,MinecaRTS.Cell,MinecaRTS.Unit,System.Func{MinecaRTS.Cell,System.Boolean},System.Func{MinecaRTS.Cell,System.Boolean},System.Boolean,System.UInt32)
      commentId: M:MinecaRTS.Pathfinder.SearchDijkstra(MinecaRTS.Grid,MinecaRTS.Cell,MinecaRTS.Unit,System.Func{MinecaRTS.Cell,System.Boolean},System.Func{MinecaRTS.Cell,System.Boolean},System.Boolean,System.UInt32)
      language: CSharp
      name:
        CSharp: SearchDijkstra(Grid, Cell, Unit, Func<Cell, Boolean>, Func<Cell, Boolean>, Boolean, UInt32)
        VB: SearchDijkstra(Grid, Cell, Unit, Func(Of Cell, Boolean), Func(Of Cell, Boolean), Boolean, UInt32)
      nameWithType:
        CSharp: Pathfinder.SearchDijkstra(Grid, Cell, Unit, Func<Cell, Boolean>, Func<Cell, Boolean>, Boolean, UInt32)
        VB: Pathfinder.SearchDijkstra(Grid, Cell, Unit, Func(Of Cell, Boolean), Func(Of Cell, Boolean), Boolean, UInt32)
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.SearchDijkstra(MinecaRTS.Grid, MinecaRTS.Cell, MinecaRTS.Unit, System.Func<MinecaRTS.Cell, System.Boolean>, System.Func<MinecaRTS.Cell, System.Boolean>, System.Boolean, System.UInt32)
        VB: MinecaRTS.Pathfinder.SearchDijkstra(MinecaRTS.Grid, MinecaRTS.Cell, MinecaRTS.Unit, System.Func(Of MinecaRTS.Cell, System.Boolean), System.Func(Of MinecaRTS.Cell, System.Boolean), System.Boolean, System.UInt32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SearchDijkstra
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 183
      summary: "\nRuns Dijkstra's to find the closest cell with a resource of the specified type.\n"
      example: []
      syntax:
        content:
          CSharp: public List<Cell> SearchDijkstra(Grid grid, Cell source, Unit unit, Func<Cell, bool> considerationCondition, Func<Cell, bool> terminationCondition, bool smoothed = false, uint depthLimit = 4294967295U)
          VB: Public Function SearchDijkstra(grid As Grid, source As Cell, unit As Unit, considerationCondition As Func(Of Cell, Boolean), terminationCondition As Func(Of Cell, Boolean), smoothed As Boolean = False, depthLimit As UInteger = 4294967295UI) As List(Of Cell)
        parameters:
        - id: grid
          type: MinecaRTS.Grid
        - id: source
          type: MinecaRTS.Cell
        - id: unit
          type: MinecaRTS.Unit
        - id: considerationCondition
          type: System.Func{MinecaRTS.Cell,System.Boolean}
        - id: terminationCondition
          type: System.Func{MinecaRTS.Cell,System.Boolean}
        - id: smoothed
          type: System.Boolean
        - id: depthLimit
          type: System.UInt32
        return:
          type: System.Collections.Generic.List{MinecaRTS.Cell}
      overload: MinecaRTS.Pathfinder.SearchDijkstra*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.SingleIterationGreedy
      commentId: M:MinecaRTS.Pathfinder.SingleIterationGreedy
      language: CSharp
      name:
        CSharp: SingleIterationGreedy()
        VB: SingleIterationGreedy()
      nameWithType:
        CSharp: Pathfinder.SingleIterationGreedy()
        VB: Pathfinder.SingleIterationGreedy()
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.SingleIterationGreedy()
        VB: MinecaRTS.Pathfinder.SingleIterationGreedy()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SingleIterationGreedy
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 225
      syntax:
        content:
          CSharp: public SearchState SingleIterationGreedy()
          VB: Public Function SingleIterationGreedy As SearchState
        return:
          type: MinecaRTS.SearchState
      overload: MinecaRTS.Pathfinder.SingleIterationGreedy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.SearchGreedy(MinecaRTS.Grid,MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},MinecaRTS.Unit,System.Func{MinecaRTS.Cell,System.Boolean},System.Func{MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},System.Boolean},System.Func{MinecaRTS.Cell,MinecaRTS.Cell,System.Single},System.Boolean)
      commentId: M:MinecaRTS.Pathfinder.SearchGreedy(MinecaRTS.Grid,MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},MinecaRTS.Unit,System.Func{MinecaRTS.Cell,System.Boolean},System.Func{MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},System.Boolean},System.Func{MinecaRTS.Cell,MinecaRTS.Cell,System.Single},System.Boolean)
      language: CSharp
      name:
        CSharp: SearchGreedy(Grid, Cell, List<Cell>, Unit, Func<Cell, Boolean>, Func<Cell, List<Cell>, Boolean>, Func<Cell, Cell, Single>, Boolean)
        VB: SearchGreedy(Grid, Cell, List(Of Cell), Unit, Func(Of Cell, Boolean), Func(Of Cell, List(Of Cell), Boolean), Func(Of Cell, Cell, Single), Boolean)
      nameWithType:
        CSharp: Pathfinder.SearchGreedy(Grid, Cell, List<Cell>, Unit, Func<Cell, Boolean>, Func<Cell, List<Cell>, Boolean>, Func<Cell, Cell, Single>, Boolean)
        VB: Pathfinder.SearchGreedy(Grid, Cell, List(Of Cell), Unit, Func(Of Cell, Boolean), Func(Of Cell, List(Of Cell), Boolean), Func(Of Cell, Cell, Single), Boolean)
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.SearchGreedy(MinecaRTS.Grid, MinecaRTS.Cell, System.Collections.Generic.List<MinecaRTS.Cell>, MinecaRTS.Unit, System.Func<MinecaRTS.Cell, System.Boolean>, System.Func<MinecaRTS.Cell, System.Collections.Generic.List<MinecaRTS.Cell>, System.Boolean>, System.Func<MinecaRTS.Cell, MinecaRTS.Cell, System.Single>, System.Boolean)
        VB: MinecaRTS.Pathfinder.SearchGreedy(MinecaRTS.Grid, MinecaRTS.Cell, System.Collections.Generic.List(Of MinecaRTS.Cell), MinecaRTS.Unit, System.Func(Of MinecaRTS.Cell, System.Boolean), System.Func(Of MinecaRTS.Cell, System.Collections.Generic.List(Of MinecaRTS.Cell), System.Boolean), System.Func(Of MinecaRTS.Cell, MinecaRTS.Cell, System.Single), System.Boolean)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SearchGreedy
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 262
      syntax:
        content:
          CSharp: public List<Cell> SearchGreedy(Grid grid, Cell source, List<Cell> target, Unit unit, Func<Cell, bool> considerationCondition, Func<Cell, List<Cell>, bool> terminationCondition, Func<Cell, Cell, float> getScore, bool smoothed = false)
          VB: Public Function SearchGreedy(grid As Grid, source As Cell, target As List(Of Cell), unit As Unit, considerationCondition As Func(Of Cell, Boolean), terminationCondition As Func(Of Cell, List(Of Cell), Boolean), getScore As Func(Of Cell, Cell, Single), smoothed As Boolean = False) As List(Of Cell)
        parameters:
        - id: grid
          type: MinecaRTS.Grid
        - id: source
          type: MinecaRTS.Cell
        - id: target
          type: System.Collections.Generic.List{MinecaRTS.Cell}
        - id: unit
          type: MinecaRTS.Unit
        - id: considerationCondition
          type: System.Func{MinecaRTS.Cell,System.Boolean}
        - id: terminationCondition
          type: System.Func{MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},System.Boolean}
        - id: getScore
          type: System.Func{MinecaRTS.Cell,MinecaRTS.Cell,System.Single}
        - id: smoothed
          type: System.Boolean
        return:
          type: System.Collections.Generic.List{MinecaRTS.Cell}
      overload: MinecaRTS.Pathfinder.SearchGreedy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.SingleIterationSmoothPath
      commentId: M:MinecaRTS.Pathfinder.SingleIterationSmoothPath
      language: CSharp
      name:
        CSharp: SingleIterationSmoothPath()
        VB: SingleIterationSmoothPath()
      nameWithType:
        CSharp: Pathfinder.SingleIterationSmoothPath()
        VB: Pathfinder.SingleIterationSmoothPath()
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.SingleIterationSmoothPath()
        VB: MinecaRTS.Pathfinder.SingleIterationSmoothPath()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SingleIterationSmoothPath
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 318
      summary: "\nTrue indicates smoothing is finished.\nFalse indicates smoothing is still underway.\n"
      example: []
      syntax:
        content:
          CSharp: public bool SingleIterationSmoothPath()
          VB: Public Function SingleIterationSmoothPath As Boolean
        return:
          type: System.Boolean
          description: ''
      overload: MinecaRTS.Pathfinder.SingleIterationSmoothPath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.SmoothPath
      commentId: M:MinecaRTS.Pathfinder.SmoothPath
      language: CSharp
      name:
        CSharp: SmoothPath()
        VB: SmoothPath()
      nameWithType:
        CSharp: Pathfinder.SmoothPath()
        VB: Pathfinder.SmoothPath()
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.SmoothPath()
        VB: MinecaRTS.Pathfinder.SmoothPath()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SmoothPath
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 360
      syntax:
        content:
          CSharp: public List<Cell> SmoothPath()
          VB: Public Function SmoothPath As List(Of Cell)
        return:
          type: System.Collections.Generic.List{MinecaRTS.Cell}
      overload: MinecaRTS.Pathfinder.SmoothPath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.PathIsClear(MinecaRTS.Cell,MinecaRTS.Cell,MinecaRTS.Unit)
      commentId: M:MinecaRTS.Pathfinder.PathIsClear(MinecaRTS.Cell,MinecaRTS.Cell,MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: PathIsClear(Cell, Cell, Unit)
        VB: PathIsClear(Cell, Cell, Unit)
      nameWithType:
        CSharp: Pathfinder.PathIsClear(Cell, Cell, Unit)
        VB: Pathfinder.PathIsClear(Cell, Cell, Unit)
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.PathIsClear(MinecaRTS.Cell, MinecaRTS.Cell, MinecaRTS.Unit)
        VB: MinecaRTS.Pathfinder.PathIsClear(MinecaRTS.Cell, MinecaRTS.Cell, MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: PathIsClear
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 380
      syntax:
        content:
          CSharp: public bool PathIsClear(Cell from, Cell to, Unit unit)
          VB: Public Function PathIsClear(from As Cell, to As Cell, unit As Unit) As Boolean
        parameters:
        - id: from
          type: MinecaRTS.Cell
        - id: to
          type: MinecaRTS.Cell
        - id: unit
          type: MinecaRTS.Unit
        return:
          type: System.Boolean
      overload: MinecaRTS.Pathfinder.PathIsClear*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.SingleIterationRetracePath
      commentId: M:MinecaRTS.Pathfinder.SingleIterationRetracePath
      language: CSharp
      name:
        CSharp: SingleIterationRetracePath()
        VB: SingleIterationRetracePath()
      nameWithType:
        CSharp: Pathfinder.SingleIterationRetracePath()
        VB: Pathfinder.SingleIterationRetracePath()
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.SingleIterationRetracePath()
        VB: MinecaRTS.Pathfinder.SingleIterationRetracePath()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SingleIterationRetracePath
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 434
      syntax:
        content:
          CSharp: public bool SingleIterationRetracePath()
          VB: Public Function SingleIterationRetracePath As Boolean
        return:
          type: System.Boolean
      overload: MinecaRTS.Pathfinder.SingleIterationRetracePath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.SetupRetracePath
      commentId: M:MinecaRTS.Pathfinder.SetupRetracePath
      language: CSharp
      name:
        CSharp: SetupRetracePath()
        VB: SetupRetracePath()
      nameWithType:
        CSharp: Pathfinder.SetupRetracePath()
        VB: Pathfinder.SetupRetracePath()
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.SetupRetracePath()
        VB: MinecaRTS.Pathfinder.SetupRetracePath()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SetupRetracePath
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 442
      syntax:
        content:
          CSharp: public void SetupRetracePath()
          VB: Public Sub SetupRetracePath
      overload: MinecaRTS.Pathfinder.SetupRetracePath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.RetracePath
      commentId: M:MinecaRTS.Pathfinder.RetracePath
      language: CSharp
      name:
        CSharp: RetracePath()
        VB: RetracePath()
      nameWithType:
        CSharp: Pathfinder.RetracePath()
        VB: Pathfinder.RetracePath()
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.RetracePath()
        VB: MinecaRTS.Pathfinder.RetracePath()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RetracePath
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 448
      syntax:
        content:
          CSharp: public List<Cell> RetracePath()
          VB: Public Function RetracePath As List(Of Cell)
        return:
          type: System.Collections.Generic.List{MinecaRTS.Cell}
      overload: MinecaRTS.Pathfinder.RetracePath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.SetupDijkstra(MinecaRTS.Grid,MinecaRTS.Cell,MinecaRTS.Unit,System.Func{MinecaRTS.Cell,System.Boolean},System.Func{MinecaRTS.Cell,System.Boolean},System.Boolean,System.UInt32)
      commentId: M:MinecaRTS.Pathfinder.SetupDijkstra(MinecaRTS.Grid,MinecaRTS.Cell,MinecaRTS.Unit,System.Func{MinecaRTS.Cell,System.Boolean},System.Func{MinecaRTS.Cell,System.Boolean},System.Boolean,System.UInt32)
      language: CSharp
      name:
        CSharp: SetupDijkstra(Grid, Cell, Unit, Func<Cell, Boolean>, Func<Cell, Boolean>, Boolean, UInt32)
        VB: SetupDijkstra(Grid, Cell, Unit, Func(Of Cell, Boolean), Func(Of Cell, Boolean), Boolean, UInt32)
      nameWithType:
        CSharp: Pathfinder.SetupDijkstra(Grid, Cell, Unit, Func<Cell, Boolean>, Func<Cell, Boolean>, Boolean, UInt32)
        VB: Pathfinder.SetupDijkstra(Grid, Cell, Unit, Func(Of Cell, Boolean), Func(Of Cell, Boolean), Boolean, UInt32)
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.SetupDijkstra(MinecaRTS.Grid, MinecaRTS.Cell, MinecaRTS.Unit, System.Func<MinecaRTS.Cell, System.Boolean>, System.Func<MinecaRTS.Cell, System.Boolean>, System.Boolean, System.UInt32)
        VB: MinecaRTS.Pathfinder.SetupDijkstra(MinecaRTS.Grid, MinecaRTS.Cell, MinecaRTS.Unit, System.Func(Of MinecaRTS.Cell, System.Boolean), System.Func(Of MinecaRTS.Cell, System.Boolean), System.Boolean, System.UInt32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SetupDijkstra
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 460
      syntax:
        content:
          CSharp: public void SetupDijkstra(Grid grid, Cell source, Unit unit, Func<Cell, bool> considerationCondition, Func<Cell, bool> terminationCondition, bool smoothed = false, uint depthLimit = 4294967295U)
          VB: Public Sub SetupDijkstra(grid As Grid, source As Cell, unit As Unit, considerationCondition As Func(Of Cell, Boolean), terminationCondition As Func(Of Cell, Boolean), smoothed As Boolean = False, depthLimit As UInteger = 4294967295UI)
        parameters:
        - id: grid
          type: MinecaRTS.Grid
        - id: source
          type: MinecaRTS.Cell
        - id: unit
          type: MinecaRTS.Unit
        - id: considerationCondition
          type: System.Func{MinecaRTS.Cell,System.Boolean}
        - id: terminationCondition
          type: System.Func{MinecaRTS.Cell,System.Boolean}
        - id: smoothed
          type: System.Boolean
        - id: depthLimit
          type: System.UInt32
      overload: MinecaRTS.Pathfinder.SetupDijkstra*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Pathfinder.SetupGreedy(MinecaRTS.Grid,MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},MinecaRTS.Unit,System.Func{MinecaRTS.Cell,System.Boolean},System.Func{MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},System.Boolean},System.Func{MinecaRTS.Cell,MinecaRTS.Cell,System.Single},System.Boolean)
      commentId: M:MinecaRTS.Pathfinder.SetupGreedy(MinecaRTS.Grid,MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},MinecaRTS.Unit,System.Func{MinecaRTS.Cell,System.Boolean},System.Func{MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},System.Boolean},System.Func{MinecaRTS.Cell,MinecaRTS.Cell,System.Single},System.Boolean)
      language: CSharp
      name:
        CSharp: SetupGreedy(Grid, Cell, List<Cell>, Unit, Func<Cell, Boolean>, Func<Cell, List<Cell>, Boolean>, Func<Cell, Cell, Single>, Boolean)
        VB: SetupGreedy(Grid, Cell, List(Of Cell), Unit, Func(Of Cell, Boolean), Func(Of Cell, List(Of Cell), Boolean), Func(Of Cell, Cell, Single), Boolean)
      nameWithType:
        CSharp: Pathfinder.SetupGreedy(Grid, Cell, List<Cell>, Unit, Func<Cell, Boolean>, Func<Cell, List<Cell>, Boolean>, Func<Cell, Cell, Single>, Boolean)
        VB: Pathfinder.SetupGreedy(Grid, Cell, List(Of Cell), Unit, Func(Of Cell, Boolean), Func(Of Cell, List(Of Cell), Boolean), Func(Of Cell, Cell, Single), Boolean)
      qualifiedName:
        CSharp: MinecaRTS.Pathfinder.SetupGreedy(MinecaRTS.Grid, MinecaRTS.Cell, System.Collections.Generic.List<MinecaRTS.Cell>, MinecaRTS.Unit, System.Func<MinecaRTS.Cell, System.Boolean>, System.Func<MinecaRTS.Cell, System.Collections.Generic.List<MinecaRTS.Cell>, System.Boolean>, System.Func<MinecaRTS.Cell, MinecaRTS.Cell, System.Single>, System.Boolean)
        VB: MinecaRTS.Pathfinder.SetupGreedy(MinecaRTS.Grid, MinecaRTS.Cell, System.Collections.Generic.List(Of MinecaRTS.Cell), MinecaRTS.Unit, System.Func(Of MinecaRTS.Cell, System.Boolean), System.Func(Of MinecaRTS.Cell, System.Collections.Generic.List(Of MinecaRTS.Cell), System.Boolean), System.Func(Of MinecaRTS.Cell, MinecaRTS.Cell, System.Single), System.Boolean)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/Pathfinder.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SetupGreedy
        path: MinecaRTS/Pathing/Pathfinder.cs
        startLine: 497
      syntax:
        content:
          CSharp: public void SetupGreedy(Grid grid, Cell source, List<Cell> targets, Unit unit, Func<Cell, bool> considerationCondition, Func<Cell, List<Cell>, bool> terminationCondition, Func<Cell, Cell, float> getScore, bool smoothed = false)
          VB: Public Sub SetupGreedy(grid As Grid, source As Cell, targets As List(Of Cell), unit As Unit, considerationCondition As Func(Of Cell, Boolean), terminationCondition As Func(Of Cell, List(Of Cell), Boolean), getScore As Func(Of Cell, Cell, Single), smoothed As Boolean = False)
        parameters:
        - id: grid
          type: MinecaRTS.Grid
        - id: source
          type: MinecaRTS.Cell
        - id: targets
          type: System.Collections.Generic.List{MinecaRTS.Cell}
        - id: unit
          type: MinecaRTS.Unit
        - id: considerationCondition
          type: System.Func{MinecaRTS.Cell,System.Boolean}
        - id: terminationCondition
          type: System.Func{MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},System.Boolean}
        - id: getScore
          type: System.Func{MinecaRTS.Cell,MinecaRTS.Cell,System.Single}
        - id: smoothed
          type: System.Boolean
      overload: MinecaRTS.Pathfinder.SetupGreedy*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.PathHandler
    commentId: T:MinecaRTS.PathHandler
    language: CSharp
    name:
      CSharp: PathHandler
      VB: PathHandler
    nameWithType:
      CSharp: PathHandler
      VB: PathHandler
    qualifiedName:
      CSharp: MinecaRTS.PathHandler
      VB: MinecaRTS.PathHandler
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Pathing/PathHandler.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: PathHandler
      path: MinecaRTS/Pathing/PathHandler.cs
      startLine: 15
    summary: "\nResponsible for getting a unit to follow a path.\nEach unit has their own instance of PathHandler.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PathHandler : IHandleMessages'
        VB: >-
          Public Class PathHandler

              Implements IHandleMessages
    inheritance:
    - System.Object
    implements:
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.PathHandler.owner
      commentId: F:MinecaRTS.PathHandler.owner
      language: CSharp
      name:
        CSharp: owner
        VB: owner
      nameWithType:
        CSharp: PathHandler.owner
        VB: PathHandler.owner
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.owner
        VB: MinecaRTS.PathHandler.owner
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: owner
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 20
      summary: "\nWhich unit the PathHandler belongs to.\n"
      example: []
      syntax:
        content:
          CSharp: protected Unit owner
          VB: Protected owner As Unit
        return:
          type: MinecaRTS.Unit
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.Owner
      commentId: P:MinecaRTS.PathHandler.Owner
      language: CSharp
      name:
        CSharp: Owner
        VB: Owner
      nameWithType:
        CSharp: PathHandler.Owner
        VB: PathHandler.Owner
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.Owner
        VB: MinecaRTS.PathHandler.Owner
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Owner
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 22
      syntax:
        content:
          CSharp: public Unit Owner { get; }
          VB: Public ReadOnly Property Owner As Unit
        parameters: []
        return:
          type: MinecaRTS.Unit
      overload: MinecaRTS.PathHandler.Owner*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.PathHandler.buildingPathingTowards
      commentId: F:MinecaRTS.PathHandler.buildingPathingTowards
      language: CSharp
      name:
        CSharp: buildingPathingTowards
        VB: buildingPathingTowards
      nameWithType:
        CSharp: PathHandler.buildingPathingTowards
        VB: PathHandler.buildingPathingTowards
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.buildingPathingTowards
        VB: MinecaRTS.PathHandler.buildingPathingTowards
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: buildingPathingTowards
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 30
      syntax:
        content:
          CSharp: protected Building buildingPathingTowards
          VB: Protected buildingPathingTowards As Building
        return:
          type: MinecaRTS.Building
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.ID
      commentId: P:MinecaRTS.PathHandler.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: PathHandler.ID
        VB: PathHandler.ID
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.ID
        VB: MinecaRTS.PathHandler.ID
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ID
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 32
      syntax:
        content:
          CSharp: public ulong ID { get; }
          VB: Public ReadOnly Property ID As ULong
        parameters: []
        return:
          type: System.UInt64
      overload: MinecaRTS.PathHandler.ID*
      implements:
      - MinecaRTS.IHandleMessages.ID
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.PathHandler.pathfinder
      commentId: F:MinecaRTS.PathHandler.pathfinder
      language: CSharp
      name:
        CSharp: pathfinder
        VB: pathfinder
      nameWithType:
        CSharp: PathHandler.pathfinder
        VB: PathHandler.pathfinder
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.pathfinder
        VB: MinecaRTS.PathHandler.pathfinder
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: pathfinder
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 37
      syntax:
        content:
          CSharp: protected Pathfinder pathfinder
          VB: Protected pathfinder As Pathfinder
        return:
          type: MinecaRTS.Pathfinder
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.grid
      commentId: F:MinecaRTS.PathHandler.grid
      language: CSharp
      name:
        CSharp: grid
        VB: grid
      nameWithType:
        CSharp: PathHandler.grid
        VB: PathHandler.grid
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.grid
        VB: MinecaRTS.PathHandler.grid
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: grid
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 42
      summary: "\nThe grid used for path handling.\n"
      example: []
      syntax:
        content:
          CSharp: protected Grid grid
          VB: Protected grid As Grid
        return:
          type: MinecaRTS.Grid
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.path
      commentId: F:MinecaRTS.PathHandler.path
      language: CSharp
      name:
        CSharp: path
        VB: path
      nameWithType:
        CSharp: PathHandler.path
        VB: PathHandler.path
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.path
        VB: MinecaRTS.PathHandler.path
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: path
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 47
      summary: "\nThe current path.\n"
      example: []
      syntax:
        content:
          CSharp: public List<Cell> path
          VB: Public path As List(Of Cell)
        return:
          type: System.Collections.Generic.List{MinecaRTS.Cell}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PathHandler.pathIndex
      commentId: F:MinecaRTS.PathHandler.pathIndex
      language: CSharp
      name:
        CSharp: pathIndex
        VB: pathIndex
      nameWithType:
        CSharp: PathHandler.pathIndex
        VB: PathHandler.pathIndex
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.pathIndex
        VB: MinecaRTS.PathHandler.pathIndex
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: pathIndex
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 52
      summary: "\nThe index in the path the unit is currently moving towards.\n"
      example: []
      syntax:
        content:
          CSharp: protected int pathIndex
          VB: Protected pathIndex As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.estimatedTicksToReachNextCell
      commentId: F:MinecaRTS.PathHandler.estimatedTicksToReachNextCell
      language: CSharp
      name:
        CSharp: estimatedTicksToReachNextCell
        VB: estimatedTicksToReachNextCell
      nameWithType:
        CSharp: PathHandler.estimatedTicksToReachNextCell
        VB: PathHandler.estimatedTicksToReachNextCell
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.estimatedTicksToReachNextCell
        VB: MinecaRTS.PathHandler.estimatedTicksToReachNextCell
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: estimatedTicksToReachNextCell
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 59
      syntax:
        content:
          CSharp: protected int estimatedTicksToReachNextCell
          VB: Protected estimatedTicksToReachNextCell As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.ticksSpentTravellingToCell
      commentId: F:MinecaRTS.PathHandler.ticksSpentTravellingToCell
      language: CSharp
      name:
        CSharp: ticksSpentTravellingToCell
        VB: ticksSpentTravellingToCell
      nameWithType:
        CSharp: PathHandler.ticksSpentTravellingToCell
        VB: PathHandler.ticksSpentTravellingToCell
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.ticksSpentTravellingToCell
        VB: MinecaRTS.PathHandler.ticksSpentTravellingToCell
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ticksSpentTravellingToCell
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 60
      syntax:
        content:
          CSharp: protected int ticksSpentTravellingToCell
          VB: Protected ticksSpentTravellingToCell As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.HasPath
      commentId: P:MinecaRTS.PathHandler.HasPath
      language: CSharp
      name:
        CSharp: HasPath
        VB: HasPath
      nameWithType:
        CSharp: PathHandler.HasPath
        VB: PathHandler.HasPath
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.HasPath
        VB: MinecaRTS.PathHandler.HasPath
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HasPath
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 62
      syntax:
        content:
          CSharp: public bool HasPath { get; }
          VB: Public ReadOnly Property HasPath As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: MinecaRTS.PathHandler.HasPath*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.PathHandler.TargetCell
      commentId: P:MinecaRTS.PathHandler.TargetCell
      language: CSharp
      name:
        CSharp: TargetCell
        VB: TargetCell
      nameWithType:
        CSharp: PathHandler.TargetCell
        VB: PathHandler.TargetCell
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.TargetCell
        VB: MinecaRTS.PathHandler.TargetCell
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TargetCell
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 67
      syntax:
        content:
          CSharp: public Cell TargetCell { get; }
          VB: Public ReadOnly Property TargetCell As Cell
        parameters: []
        return:
          type: MinecaRTS.Cell
      overload: MinecaRTS.PathHandler.TargetCell*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.PathHandler.#ctor(MinecaRTS.Unit,MinecaRTS.Grid)
      commentId: M:MinecaRTS.PathHandler.#ctor(MinecaRTS.Unit,MinecaRTS.Grid)
      language: CSharp
      name:
        CSharp: PathHandler(Unit, Grid)
        VB: PathHandler(Unit, Grid)
      nameWithType:
        CSharp: PathHandler.PathHandler(Unit, Grid)
        VB: PathHandler.PathHandler(Unit, Grid)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.PathHandler(MinecaRTS.Unit, MinecaRTS.Grid)
        VB: MinecaRTS.PathHandler.PathHandler(MinecaRTS.Unit, MinecaRTS.Grid)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 72
      syntax:
        content:
          CSharp: public PathHandler(Unit owner, Grid grid)
          VB: Public Sub New(owner As Unit, grid As Grid)
        parameters:
        - id: owner
          type: MinecaRTS.Unit
        - id: grid
          type: MinecaRTS.Grid
      overload: MinecaRTS.PathHandler.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PathHandler.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.PathHandler.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: PathHandler.HandleMessage(Message)
        VB: PathHandler.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.PathHandler.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 85
      syntax:
        content:
          CSharp: public virtual void HandleMessage(Message message)
          VB: Public Overridable Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.PathHandler.HandleMessage*
      implements:
      - MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: MinecaRTS.PathHandler.Update
      commentId: M:MinecaRTS.PathHandler.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: PathHandler.Update()
        VB: PathHandler.Update()
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.Update()
        VB: MinecaRTS.PathHandler.Update()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 107
      summary: "\nChecks if owner has reached current cell index and, if it has, orients towards next cell.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Update()
          VB: Public Function Update As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.PathHandler.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell(MinecaRTS.Cell)
      commentId: M:MinecaRTS.PathHandler.GetEstimatedTicksToReachCell(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: GetEstimatedTicksToReachCell(Cell)
        VB: GetEstimatedTicksToReachCell(Cell)
      nameWithType:
        CSharp: PathHandler.GetEstimatedTicksToReachCell(Cell)
        VB: PathHandler.GetEstimatedTicksToReachCell(Cell)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell(MinecaRTS.Cell)
        VB: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetEstimatedTicksToReachCell
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 139
      syntax:
        content:
          CSharp: public int GetEstimatedTicksToReachCell(Cell cell)
          VB: Public Function GetEstimatedTicksToReachCell(cell As Cell) As Integer
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: System.Int32
      overload: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PathHandler.FinalisePath
      commentId: M:MinecaRTS.PathHandler.FinalisePath
      language: CSharp
      name:
        CSharp: FinalisePath()
        VB: FinalisePath()
      nameWithType:
        CSharp: PathHandler.FinalisePath()
        VB: PathHandler.FinalisePath()
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.FinalisePath()
        VB: MinecaRTS.PathHandler.FinalisePath()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: FinalisePath
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 167
      syntax:
        content:
          CSharp: public void FinalisePath()
          VB: Public Sub FinalisePath
      overload: MinecaRTS.PathHandler.FinalisePath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.PathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: GetPathTo(Vector2)
        VB: GetPathTo(Vector2)
      nameWithType:
        CSharp: PathHandler.GetPathTo(Vector2)
        VB: PathHandler.GetPathTo(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.PathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetPathTo
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 184
      summary: "\nGenerates a path to the target position.\nIf owner is set to follow paths, this will orient owner towards first cell in path.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void GetPathTo(Vector2 targetPos)
          VB: Public Overridable Sub GetPathTo(targetPos As Vector2)
        parameters:
        - id: targetPos
          type: Microsoft.Xna.Framework.Vector2
          description: ''
      overload: MinecaRTS.PathHandler.GetPathTo*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: MinecaRTS.PathHandler.RenderPath(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.PathHandler.RenderPath(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderPath(SpriteBatch)
        VB: RenderPath(SpriteBatch)
      nameWithType:
        CSharp: PathHandler.RenderPath(SpriteBatch)
        VB: PathHandler.RenderPath(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.RenderPath(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.PathHandler.RenderPath(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderPath
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 208
      syntax:
        content:
          CSharp: public void RenderPath(SpriteBatch spriteBatch)
          VB: Public Sub RenderPath(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.PathHandler.RenderPath*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PathHandler.TrackScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
      commentId: M:MinecaRTS.PathHandler.TrackScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: TrackScoreMethod(Cell, Cell)
        VB: TrackScoreMethod(Cell, Cell)
      nameWithType:
        CSharp: PathHandler.TrackScoreMethod(Cell, Cell)
        VB: PathHandler.TrackScoreMethod(Cell, Cell)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.TrackScoreMethod(MinecaRTS.Cell, MinecaRTS.Cell)
        VB: MinecaRTS.PathHandler.TrackScoreMethod(MinecaRTS.Cell, MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TrackScoreMethod
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 226
      syntax:
        content:
          CSharp: protected float TrackScoreMethod(Cell cell, Cell Target)
          VB: Protected Function TrackScoreMethod(cell As Cell, Target As Cell) As Single
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        - id: Target
          type: MinecaRTS.Cell
        return:
          type: System.Single
      overload: MinecaRTS.PathHandler.TrackScoreMethod*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.ConsiderationConditionWood(MinecaRTS.Cell)
      commentId: M:MinecaRTS.PathHandler.ConsiderationConditionWood(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: ConsiderationConditionWood(Cell)
        VB: ConsiderationConditionWood(Cell)
      nameWithType:
        CSharp: PathHandler.ConsiderationConditionWood(Cell)
        VB: PathHandler.ConsiderationConditionWood(Cell)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.ConsiderationConditionWood(MinecaRTS.Cell)
        VB: MinecaRTS.PathHandler.ConsiderationConditionWood(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ConsiderationConditionWood
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 238
      syntax:
        content:
          CSharp: protected bool ConsiderationConditionWood(Cell cell)
          VB: Protected Function ConsiderationConditionWood(cell As Cell) As Boolean
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: System.Boolean
      overload: MinecaRTS.PathHandler.ConsiderationConditionWood*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.ConsiderationConditionStone(MinecaRTS.Cell)
      commentId: M:MinecaRTS.PathHandler.ConsiderationConditionStone(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: ConsiderationConditionStone(Cell)
        VB: ConsiderationConditionStone(Cell)
      nameWithType:
        CSharp: PathHandler.ConsiderationConditionStone(Cell)
        VB: PathHandler.ConsiderationConditionStone(Cell)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.ConsiderationConditionStone(MinecaRTS.Cell)
        VB: MinecaRTS.PathHandler.ConsiderationConditionStone(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ConsiderationConditionStone
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 252
      syntax:
        content:
          CSharp: protected bool ConsiderationConditionStone(Cell cell)
          VB: Protected Function ConsiderationConditionStone(cell As Cell) As Boolean
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: System.Boolean
      overload: MinecaRTS.PathHandler.ConsiderationConditionStone*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.TerminationConditionWood(MinecaRTS.Cell)
      commentId: M:MinecaRTS.PathHandler.TerminationConditionWood(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: TerminationConditionWood(Cell)
        VB: TerminationConditionWood(Cell)
      nameWithType:
        CSharp: PathHandler.TerminationConditionWood(Cell)
        VB: PathHandler.TerminationConditionWood(Cell)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.TerminationConditionWood(MinecaRTS.Cell)
        VB: MinecaRTS.PathHandler.TerminationConditionWood(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TerminationConditionWood
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 266
      syntax:
        content:
          CSharp: protected bool TerminationConditionWood(Cell current)
          VB: Protected Function TerminationConditionWood(current As Cell) As Boolean
        parameters:
        - id: current
          type: MinecaRTS.Cell
        return:
          type: System.Boolean
      overload: MinecaRTS.PathHandler.TerminationConditionWood*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.TerminationConditionStone(MinecaRTS.Cell)
      commentId: M:MinecaRTS.PathHandler.TerminationConditionStone(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: TerminationConditionStone(Cell)
        VB: TerminationConditionStone(Cell)
      nameWithType:
        CSharp: PathHandler.TerminationConditionStone(Cell)
        VB: PathHandler.TerminationConditionStone(Cell)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.TerminationConditionStone(MinecaRTS.Cell)
        VB: MinecaRTS.PathHandler.TerminationConditionStone(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TerminationConditionStone
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 278
      syntax:
        content:
          CSharp: protected bool TerminationConditionStone(Cell current)
          VB: Protected Function TerminationConditionStone(current As Cell) As Boolean
        parameters:
        - id: current
          type: MinecaRTS.Cell
        return:
          type: System.Boolean
      overload: MinecaRTS.PathHandler.TerminationConditionStone*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.TerminationConditionFindTrack(MinecaRTS.Cell)
      commentId: M:MinecaRTS.PathHandler.TerminationConditionFindTrack(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: TerminationConditionFindTrack(Cell)
        VB: TerminationConditionFindTrack(Cell)
      nameWithType:
        CSharp: PathHandler.TerminationConditionFindTrack(Cell)
        VB: PathHandler.TerminationConditionFindTrack(Cell)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.TerminationConditionFindTrack(MinecaRTS.Cell)
        VB: MinecaRTS.PathHandler.TerminationConditionFindTrack(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TerminationConditionFindTrack
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 290
      syntax:
        content:
          CSharp: protected bool TerminationConditionFindTrack(Cell current)
          VB: Protected Function TerminationConditionFindTrack(current As Cell) As Boolean
        parameters:
        - id: current
          type: MinecaRTS.Cell
        return:
          type: System.Boolean
      overload: MinecaRTS.PathHandler.TerminationConditionFindTrack*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.GreedyConsiderationCondition(MinecaRTS.Cell)
      commentId: M:MinecaRTS.PathHandler.GreedyConsiderationCondition(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: GreedyConsiderationCondition(Cell)
        VB: GreedyConsiderationCondition(Cell)
      nameWithType:
        CSharp: PathHandler.GreedyConsiderationCondition(Cell)
        VB: PathHandler.GreedyConsiderationCondition(Cell)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.GreedyConsiderationCondition(MinecaRTS.Cell)
        VB: MinecaRTS.PathHandler.GreedyConsiderationCondition(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GreedyConsiderationCondition
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 296
      syntax:
        content:
          CSharp: protected bool GreedyConsiderationCondition(Cell cell)
          VB: Protected Function GreedyConsiderationCondition(cell As Cell) As Boolean
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: System.Boolean
      overload: MinecaRTS.PathHandler.GreedyConsiderationCondition*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.GreedyTerminationCondition(MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell})
      commentId: M:MinecaRTS.PathHandler.GreedyTerminationCondition(MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell})
      language: CSharp
      name:
        CSharp: GreedyTerminationCondition(Cell, List<Cell>)
        VB: GreedyTerminationCondition(Cell, List(Of Cell))
      nameWithType:
        CSharp: PathHandler.GreedyTerminationCondition(Cell, List<Cell>)
        VB: PathHandler.GreedyTerminationCondition(Cell, List(Of Cell))
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.GreedyTerminationCondition(MinecaRTS.Cell, System.Collections.Generic.List<MinecaRTS.Cell>)
        VB: MinecaRTS.PathHandler.GreedyTerminationCondition(MinecaRTS.Cell, System.Collections.Generic.List(Of MinecaRTS.Cell))
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GreedyTerminationCondition
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 302
      syntax:
        content:
          CSharp: protected bool GreedyTerminationCondition(Cell current, List<Cell> targets)
          VB: Protected Function GreedyTerminationCondition(current As Cell, targets As List(Of Cell)) As Boolean
        parameters:
        - id: current
          type: MinecaRTS.Cell
        - id: targets
          type: System.Collections.Generic.List{MinecaRTS.Cell}
        return:
          type: System.Boolean
      overload: MinecaRTS.PathHandler.GreedyTerminationCondition*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.PathHandler.GreedyScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
      commentId: M:MinecaRTS.PathHandler.GreedyScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: GreedyScoreMethod(Cell, Cell)
        VB: GreedyScoreMethod(Cell, Cell)
      nameWithType:
        CSharp: PathHandler.GreedyScoreMethod(Cell, Cell)
        VB: PathHandler.GreedyScoreMethod(Cell, Cell)
      qualifiedName:
        CSharp: MinecaRTS.PathHandler.GreedyScoreMethod(MinecaRTS.Cell, MinecaRTS.Cell)
        VB: MinecaRTS.PathHandler.GreedyScoreMethod(MinecaRTS.Cell, MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/PathHandler.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GreedyScoreMethod
        path: MinecaRTS/Pathing/PathHandler.cs
        startLine: 307
      syntax:
        content:
          CSharp: protected float GreedyScoreMethod(Cell cell, Cell Target)
          VB: Protected Function GreedyScoreMethod(cell As Cell, Target As Cell) As Single
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        - id: Target
          type: MinecaRTS.Cell
        return:
          type: System.Single
      overload: MinecaRTS.PathHandler.GreedyScoreMethod*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: MinecaRTS.PlayerData
    commentId: T:MinecaRTS.PlayerData
    language: CSharp
    name:
      CSharp: PlayerData
      VB: PlayerData
    nameWithType:
      CSharp: PlayerData
      VB: PlayerData
    qualifiedName:
      CSharp: MinecaRTS.PlayerData
      VB: MinecaRTS.PlayerData
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Core/PlayerData.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: PlayerData
      path: MinecaRTS/Core/PlayerData.cs
      startLine: 16
    summary: "\nThe interface through which the player interacts with the world.\nBots can be plugged in to a PlayerData and can access it to issue commands.\n"
    example: []
    syntax:
      content:
        CSharp: public class PlayerData
        VB: Public Class PlayerData
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.PlayerData.selectedBuilding
      commentId: F:MinecaRTS.PlayerData.selectedBuilding
      language: CSharp
      name:
        CSharp: selectedBuilding
        VB: selectedBuilding
      nameWithType:
        CSharp: PlayerData.selectedBuilding
        VB: PlayerData.selectedBuilding
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.selectedBuilding
        VB: MinecaRTS.PlayerData.selectedBuilding
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: selectedBuilding
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 24
      syntax:
        content:
          CSharp: public Building selectedBuilding
          VB: Public selectedBuilding As Building
        return:
          type: MinecaRTS.Building
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.Team
      commentId: P:MinecaRTS.PlayerData.Team
      language: CSharp
      name:
        CSharp: Team
        VB: Team
      nameWithType:
        CSharp: PlayerData.Team
        VB: PlayerData.Team
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.Team
        VB: MinecaRTS.PlayerData.Team
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Team
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 36
      syntax:
        content:
          CSharp: public Team Team { get; }
          VB: Public ReadOnly Property Team As Team
        parameters: []
        return:
          type: MinecaRTS.Team
      overload: MinecaRTS.PlayerData.Team*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.PlayerData.Wood
      commentId: P:MinecaRTS.PlayerData.Wood
      language: CSharp
      name:
        CSharp: Wood
        VB: Wood
      nameWithType:
        CSharp: PlayerData.Wood
        VB: PlayerData.Wood
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.Wood
        VB: MinecaRTS.PlayerData.Wood
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Wood
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 41
      syntax:
        content:
          CSharp: public uint Wood { get; }
          VB: Public ReadOnly Property Wood As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: MinecaRTS.PlayerData.Wood*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.PlayerData.Stone
      commentId: P:MinecaRTS.PlayerData.Stone
      language: CSharp
      name:
        CSharp: Stone
        VB: Stone
      nameWithType:
        CSharp: PlayerData.Stone
        VB: PlayerData.Stone
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.Stone
        VB: MinecaRTS.PlayerData.Stone
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Stone
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 46
      syntax:
        content:
          CSharp: public uint Stone { get; }
          VB: Public ReadOnly Property Stone As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: MinecaRTS.PlayerData.Stone*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.PlayerData.MaxSupply
      commentId: P:MinecaRTS.PlayerData.MaxSupply
      language: CSharp
      name:
        CSharp: MaxSupply
        VB: MaxSupply
      nameWithType:
        CSharp: PlayerData.MaxSupply
        VB: PlayerData.MaxSupply
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.MaxSupply
        VB: MinecaRTS.PlayerData.MaxSupply
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MaxSupply
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 52
      syntax:
        content:
          CSharp: public uint MaxSupply { get; }
          VB: Public ReadOnly Property MaxSupply As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: MinecaRTS.PlayerData.MaxSupply*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.PlayerData.SpareSupply
      commentId: P:MinecaRTS.PlayerData.SpareSupply
      language: CSharp
      name:
        CSharp: SpareSupply
        VB: SpareSupply
      nameWithType:
        CSharp: PlayerData.SpareSupply
        VB: PlayerData.SpareSupply
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.SpareSupply
        VB: MinecaRTS.PlayerData.SpareSupply
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SpareSupply
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 76
      syntax:
        content:
          CSharp: public uint SpareSupply { get; }
          VB: Public ReadOnly Property SpareSupply As UInteger
        parameters: []
        return:
          type: System.UInt32
      overload: MinecaRTS.PlayerData.SpareSupply*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.PlayerData.SelectedWorker
      commentId: P:MinecaRTS.PlayerData.SelectedWorker
      language: CSharp
      name:
        CSharp: SelectedWorker
        VB: SelectedWorker
      nameWithType:
        CSharp: PlayerData.SelectedWorker
        VB: PlayerData.SelectedWorker
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.SelectedWorker
        VB: MinecaRTS.PlayerData.SelectedWorker
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SelectedWorker
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 81
      syntax:
        content:
          CSharp: public Worker SelectedWorker { get; }
          VB: Public ReadOnly Property SelectedWorker As Worker
        parameters: []
        return:
          type: MinecaRTS.Worker
      overload: MinecaRTS.PlayerData.SelectedWorker*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.PlayerData.#ctor(MinecaRTS.World,MinecaRTS.Team)
      commentId: M:MinecaRTS.PlayerData.#ctor(MinecaRTS.World,MinecaRTS.Team)
      language: CSharp
      name:
        CSharp: PlayerData(World, Team)
        VB: PlayerData(World, Team)
      nameWithType:
        CSharp: PlayerData.PlayerData(World, Team)
        VB: PlayerData.PlayerData(World, Team)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.PlayerData(MinecaRTS.World, MinecaRTS.Team)
        VB: MinecaRTS.PlayerData.PlayerData(MinecaRTS.World, MinecaRTS.Team)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 97
      syntax:
        content:
          CSharp: public PlayerData(World w, Team team)
          VB: Public Sub New(w As World, team As Team)
        parameters:
        - id: w
          type: MinecaRTS.World
        - id: team
          type: MinecaRTS.Team
      overload: MinecaRTS.PlayerData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.Grid
      commentId: P:MinecaRTS.PlayerData.Grid
      language: CSharp
      name:
        CSharp: Grid
        VB: Grid
      nameWithType:
        CSharp: PlayerData.Grid
        VB: PlayerData.Grid
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.Grid
        VB: MinecaRTS.PlayerData.Grid
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Grid
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 122
      syntax:
        content:
          CSharp: public Grid Grid { get; }
          VB: Public ReadOnly Property Grid As Grid
        parameters: []
        return:
          type: MinecaRTS.Grid
      overload: MinecaRTS.PlayerData.Grid*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.PlayerData.RemoveUnitFromCollisionCells(MinecaRTS.Unit)
      commentId: M:MinecaRTS.PlayerData.RemoveUnitFromCollisionCells(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: RemoveUnitFromCollisionCells(Unit)
        VB: RemoveUnitFromCollisionCells(Unit)
      nameWithType:
        CSharp: PlayerData.RemoveUnitFromCollisionCells(Unit)
        VB: PlayerData.RemoveUnitFromCollisionCells(Unit)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.RemoveUnitFromCollisionCells(MinecaRTS.Unit)
        VB: MinecaRTS.PlayerData.RemoveUnitFromCollisionCells(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RemoveUnitFromCollisionCells
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 127
      syntax:
        content:
          CSharp: public void RemoveUnitFromCollisionCells(Unit u)
          VB: Public Sub RemoveUnitFromCollisionCells(u As Unit)
        parameters:
        - id: u
          type: MinecaRTS.Unit
      overload: MinecaRTS.PlayerData.RemoveUnitFromCollisionCells*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.AddUnitToCollisionCells(MinecaRTS.Unit)
      commentId: M:MinecaRTS.PlayerData.AddUnitToCollisionCells(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: AddUnitToCollisionCells(Unit)
        VB: AddUnitToCollisionCells(Unit)
      nameWithType:
        CSharp: PlayerData.AddUnitToCollisionCells(Unit)
        VB: PlayerData.AddUnitToCollisionCells(Unit)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.AddUnitToCollisionCells(MinecaRTS.Unit)
        VB: MinecaRTS.PlayerData.AddUnitToCollisionCells(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddUnitToCollisionCells
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 132
      syntax:
        content:
          CSharp: public void AddUnitToCollisionCells(Unit u)
          VB: Public Sub AddUnitToCollisionCells(u As Unit)
        parameters:
        - id: u
          type: MinecaRTS.Unit
      overload: MinecaRTS.PlayerData.AddUnitToCollisionCells*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.UpdateFogOfWarForUnit(MinecaRTS.Unit)
      commentId: M:MinecaRTS.PlayerData.UpdateFogOfWarForUnit(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: UpdateFogOfWarForUnit(Unit)
        VB: UpdateFogOfWarForUnit(Unit)
      nameWithType:
        CSharp: PlayerData.UpdateFogOfWarForUnit(Unit)
        VB: PlayerData.UpdateFogOfWarForUnit(Unit)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.UpdateFogOfWarForUnit(MinecaRTS.Unit)
        VB: MinecaRTS.PlayerData.UpdateFogOfWarForUnit(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: UpdateFogOfWarForUnit
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 137
      syntax:
        content:
          CSharp: public void UpdateFogOfWarForUnit(Unit u)
          VB: Public Sub UpdateFogOfWarForUnit(u As Unit)
        parameters:
        - id: u
          type: MinecaRTS.Unit
      overload: MinecaRTS.PlayerData.UpdateFogOfWarForUnit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundPos(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundPos(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: GetUnitsInCollisionCellsAroundPos(Vector2)
        VB: GetUnitsInCollisionCellsAroundPos(Vector2)
      nameWithType:
        CSharp: PlayerData.GetUnitsInCollisionCellsAroundPos(Vector2)
        VB: PlayerData.GetUnitsInCollisionCellsAroundPos(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundPos(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundPos(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetUnitsInCollisionCellsAroundPos
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 142
      syntax:
        content:
          CSharp: public List<HashSet<Unit>> GetUnitsInCollisionCellsAroundPos(Vector2 pos)
          VB: Public Function GetUnitsInCollisionCellsAroundPos(pos As Vector2) As List(Of HashSet(Of Unit))
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: System.Collections.Generic.List{System.Collections.Generic.HashSet{MinecaRTS.Unit}}
      overload: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundPos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundUnit(MinecaRTS.Unit)
      commentId: M:MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundUnit(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: GetUnitsInCollisionCellsAroundUnit(Unit)
        VB: GetUnitsInCollisionCellsAroundUnit(Unit)
      nameWithType:
        CSharp: PlayerData.GetUnitsInCollisionCellsAroundUnit(Unit)
        VB: PlayerData.GetUnitsInCollisionCellsAroundUnit(Unit)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundUnit(MinecaRTS.Unit)
        VB: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundUnit(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetUnitsInCollisionCellsAroundUnit
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 147
      syntax:
        content:
          CSharp: public List<HashSet<Unit>> GetUnitsInCollisionCellsAroundUnit(Unit u)
          VB: Public Function GetUnitsInCollisionCellsAroundUnit(u As Unit) As List(Of HashSet(Of Unit))
        parameters:
        - id: u
          type: MinecaRTS.Unit
        return:
          type: System.Collections.Generic.List{System.Collections.Generic.HashSet{MinecaRTS.Unit}}
      overload: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundUnit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.GetUnitsInSameCollisionCellsAsUnit(MinecaRTS.Unit)
      commentId: M:MinecaRTS.PlayerData.GetUnitsInSameCollisionCellsAsUnit(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: GetUnitsInSameCollisionCellsAsUnit(Unit)
        VB: GetUnitsInSameCollisionCellsAsUnit(Unit)
      nameWithType:
        CSharp: PlayerData.GetUnitsInSameCollisionCellsAsUnit(Unit)
        VB: PlayerData.GetUnitsInSameCollisionCellsAsUnit(Unit)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.GetUnitsInSameCollisionCellsAsUnit(MinecaRTS.Unit)
        VB: MinecaRTS.PlayerData.GetUnitsInSameCollisionCellsAsUnit(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetUnitsInSameCollisionCellsAsUnit
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 152
      syntax:
        content:
          CSharp: public HashSet<Unit> GetUnitsInSameCollisionCellsAsUnit(Unit u)
          VB: Public Function GetUnitsInSameCollisionCellsAsUnit(u As Unit) As HashSet(Of Unit)
        parameters:
        - id: u
          type: MinecaRTS.Unit
        return:
          type: System.Collections.Generic.HashSet{MinecaRTS.Unit}
      overload: MinecaRTS.PlayerData.GetUnitsInSameCollisionCellsAsUnit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.GetResourceFromCell(MinecaRTS.Cell)
      commentId: M:MinecaRTS.PlayerData.GetResourceFromCell(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: GetResourceFromCell(Cell)
        VB: GetResourceFromCell(Cell)
      nameWithType:
        CSharp: PlayerData.GetResourceFromCell(Cell)
        VB: PlayerData.GetResourceFromCell(Cell)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.GetResourceFromCell(MinecaRTS.Cell)
        VB: MinecaRTS.PlayerData.GetResourceFromCell(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetResourceFromCell
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 157
      syntax:
        content:
          CSharp: public Resource GetResourceFromCell(Cell cell)
          VB: Public Function GetResourceFromCell(cell As Cell) As Resource
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: MinecaRTS.Resource
      overload: MinecaRTS.PlayerData.GetResourceFromCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.GetTrackFromCell(MinecaRTS.Cell)
      commentId: M:MinecaRTS.PlayerData.GetTrackFromCell(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: GetTrackFromCell(Cell)
        VB: GetTrackFromCell(Cell)
      nameWithType:
        CSharp: PlayerData.GetTrackFromCell(Cell)
        VB: PlayerData.GetTrackFromCell(Cell)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.GetTrackFromCell(MinecaRTS.Cell)
        VB: MinecaRTS.PlayerData.GetTrackFromCell(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetTrackFromCell
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 168
      syntax:
        content:
          CSharp: public Track GetTrackFromCell(Cell cell)
          VB: Public Function GetTrackFromCell(cell As Cell) As Track
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: MinecaRTS.Track
      overload: MinecaRTS.PlayerData.GetTrackFromCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.CellHasResource(MinecaRTS.Cell)
      commentId: M:MinecaRTS.PlayerData.CellHasResource(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: CellHasResource(Cell)
        VB: CellHasResource(Cell)
      nameWithType:
        CSharp: PlayerData.CellHasResource(Cell)
        VB: PlayerData.CellHasResource(Cell)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.CellHasResource(MinecaRTS.Cell)
        VB: MinecaRTS.PlayerData.CellHasResource(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CellHasResource
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 175
      syntax:
        content:
          CSharp: public bool CellHasResource(Cell cell)
          VB: Public Function CellHasResource(cell As Cell) As Boolean
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: System.Boolean
      overload: MinecaRTS.PlayerData.CellHasResource*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.CellHasTrack(MinecaRTS.Cell)
      commentId: M:MinecaRTS.PlayerData.CellHasTrack(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: CellHasTrack(Cell)
        VB: CellHasTrack(Cell)
      nameWithType:
        CSharp: PlayerData.CellHasTrack(Cell)
        VB: PlayerData.CellHasTrack(Cell)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.CellHasTrack(MinecaRTS.Cell)
        VB: MinecaRTS.PlayerData.CellHasTrack(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CellHasTrack
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 182
      syntax:
        content:
          CSharp: public bool CellHasTrack(Cell cell)
          VB: Public Function CellHasTrack(cell As Cell) As Boolean
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: System.Boolean
      overload: MinecaRTS.PlayerData.CellHasTrack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.AddUnit(System.Type,Microsoft.Xna.Framework.Vector2,MinecaRTS.Team,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.PlayerData.AddUnit(System.Type,Microsoft.Xna.Framework.Vector2,MinecaRTS.Team,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: AddUnit(Type, Vector2, Team, Vector2)
        VB: AddUnit(Type, Vector2, Team, Vector2)
      nameWithType:
        CSharp: PlayerData.AddUnit(Type, Vector2, Team, Vector2)
        VB: PlayerData.AddUnit(Type, Vector2, Team, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.AddUnit(System.Type, Microsoft.Xna.Framework.Vector2, MinecaRTS.Team, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.PlayerData.AddUnit(System.Type, Microsoft.Xna.Framework.Vector2, MinecaRTS.Team, Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddUnit
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 189
      syntax:
        content:
          CSharp: public void AddUnit(Type unitType, Vector2 pos, Team team, Vector2 rallyPoint)
          VB: Public Sub AddUnit(unitType As Type, pos As Vector2, team As Team, rallyPoint As Vector2)
        parameters:
        - id: unitType
          type: System.Type
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: team
          type: MinecaRTS.Team
        - id: rallyPoint
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.PlayerData.AddUnit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.GiveResources(System.UInt32,MinecaRTS.ResourceType)
      commentId: M:MinecaRTS.PlayerData.GiveResources(System.UInt32,MinecaRTS.ResourceType)
      language: CSharp
      name:
        CSharp: GiveResources(UInt32, ResourceType)
        VB: GiveResources(UInt32, ResourceType)
      nameWithType:
        CSharp: PlayerData.GiveResources(UInt32, ResourceType)
        VB: PlayerData.GiveResources(UInt32, ResourceType)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.GiveResources(System.UInt32, MinecaRTS.ResourceType)
        VB: MinecaRTS.PlayerData.GiveResources(System.UInt32, MinecaRTS.ResourceType)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GiveResources
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 196
      syntax:
        content:
          CSharp: public void GiveResources(uint amount, ResourceType type)
          VB: Public Sub GiveResources(amount As UInteger, type As ResourceType)
        parameters:
        - id: amount
          type: System.UInt32
        - id: type
          type: MinecaRTS.ResourceType
      overload: MinecaRTS.PlayerData.GiveResources*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.SelectUnitsInRect(Microsoft.Xna.Framework.Rectangle)
      commentId: M:MinecaRTS.PlayerData.SelectUnitsInRect(Microsoft.Xna.Framework.Rectangle)
      language: CSharp
      name:
        CSharp: SelectUnitsInRect(Rectangle)
        VB: SelectUnitsInRect(Rectangle)
      nameWithType:
        CSharp: PlayerData.SelectUnitsInRect(Rectangle)
        VB: PlayerData.SelectUnitsInRect(Rectangle)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.SelectUnitsInRect(Microsoft.Xna.Framework.Rectangle)
        VB: MinecaRTS.PlayerData.SelectUnitsInRect(Microsoft.Xna.Framework.Rectangle)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SelectUnitsInRect
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 206
      syntax:
        content:
          CSharp: public void SelectUnitsInRect(Rectangle selectAt)
          VB: Public Sub SelectUnitsInRect(selectAt As Rectangle)
        parameters:
        - id: selectAt
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.PlayerData.SelectUnitsInRect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.MoveSelectedUnitsTo(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.PlayerData.MoveSelectedUnitsTo(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: MoveSelectedUnitsTo(Vector2)
        VB: MoveSelectedUnitsTo(Vector2)
      nameWithType:
        CSharp: PlayerData.MoveSelectedUnitsTo(Vector2)
        VB: PlayerData.MoveSelectedUnitsTo(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.MoveSelectedUnitsTo(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.PlayerData.MoveSelectedUnitsTo(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MoveSelectedUnitsTo
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 219
      syntax:
        content:
          CSharp: public void MoveSelectedUnitsTo(Vector2 pos)
          VB: Public Sub MoveSelectedUnitsTo(pos As Vector2)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.PlayerData.MoveSelectedUnitsTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.OrderSelectedWorkersToGatherClosestResource(MinecaRTS.ResourceType)
      commentId: M:MinecaRTS.PlayerData.OrderSelectedWorkersToGatherClosestResource(MinecaRTS.ResourceType)
      language: CSharp
      name:
        CSharp: OrderSelectedWorkersToGatherClosestResource(ResourceType)
        VB: OrderSelectedWorkersToGatherClosestResource(ResourceType)
      nameWithType:
        CSharp: PlayerData.OrderSelectedWorkersToGatherClosestResource(ResourceType)
        VB: PlayerData.OrderSelectedWorkersToGatherClosestResource(ResourceType)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.OrderSelectedWorkersToGatherClosestResource(MinecaRTS.ResourceType)
        VB: MinecaRTS.PlayerData.OrderSelectedWorkersToGatherClosestResource(MinecaRTS.ResourceType)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: OrderSelectedWorkersToGatherClosestResource
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 232
      syntax:
        content:
          CSharp: public void OrderSelectedWorkersToGatherClosestResource(ResourceType desiredResource)
          VB: Public Sub OrderSelectedWorkersToGatherClosestResource(desiredResource As ResourceType)
        parameters:
        - id: desiredResource
          type: MinecaRTS.ResourceType
      overload: MinecaRTS.PlayerData.OrderSelectedWorkersToGatherClosestResource*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.OrderSelectedWorkerToConstructBuilding(MinecaRTS.Building)
      commentId: M:MinecaRTS.PlayerData.OrderSelectedWorkerToConstructBuilding(MinecaRTS.Building)
      language: CSharp
      name:
        CSharp: OrderSelectedWorkerToConstructBuilding(Building)
        VB: OrderSelectedWorkerToConstructBuilding(Building)
      nameWithType:
        CSharp: PlayerData.OrderSelectedWorkerToConstructBuilding(Building)
        VB: PlayerData.OrderSelectedWorkerToConstructBuilding(Building)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.OrderSelectedWorkerToConstructBuilding(MinecaRTS.Building)
        VB: MinecaRTS.PlayerData.OrderSelectedWorkerToConstructBuilding(MinecaRTS.Building)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: OrderSelectedWorkerToConstructBuilding
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 249
      syntax:
        content:
          CSharp: public void OrderSelectedWorkerToConstructBuilding(Building building)
          VB: Public Sub OrderSelectedWorkerToConstructBuilding(building As Building)
        parameters:
        - id: building
          type: MinecaRTS.Building
      overload: MinecaRTS.PlayerData.OrderSelectedWorkerToConstructBuilding*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.OrderSelectedUnitsToStop
      commentId: M:MinecaRTS.PlayerData.OrderSelectedUnitsToStop
      language: CSharp
      name:
        CSharp: OrderSelectedUnitsToStop()
        VB: OrderSelectedUnitsToStop()
      nameWithType:
        CSharp: PlayerData.OrderSelectedUnitsToStop()
        VB: PlayerData.OrderSelectedUnitsToStop()
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.OrderSelectedUnitsToStop()
        VB: MinecaRTS.PlayerData.OrderSelectedUnitsToStop()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: OrderSelectedUnitsToStop
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 257
      syntax:
        content:
          CSharp: public void OrderSelectedUnitsToStop()
          VB: Public Sub OrderSelectedUnitsToStop
      overload: MinecaRTS.PlayerData.OrderSelectedUnitsToStop*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.GetClosestWorkerToPos(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.PlayerData.GetClosestWorkerToPos(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: GetClosestWorkerToPos(Vector2)
        VB: GetClosestWorkerToPos(Vector2)
      nameWithType:
        CSharp: PlayerData.GetClosestWorkerToPos(Vector2)
        VB: PlayerData.GetClosestWorkerToPos(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.GetClosestWorkerToPos(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.PlayerData.GetClosestWorkerToPos(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetClosestWorkerToPos
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 264
      syntax:
        content:
          CSharp: public Worker GetClosestWorkerToPos(Vector2 pos)
          VB: Public Function GetClosestWorkerToPos(pos As Vector2) As Worker
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: MinecaRTS.Worker
      overload: MinecaRTS.PlayerData.GetClosestWorkerToPos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.GetCollidingUnits(MinecaRTS.Unit)
      commentId: M:MinecaRTS.PlayerData.GetCollidingUnits(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: GetCollidingUnits(Unit)
        VB: GetCollidingUnits(Unit)
      nameWithType:
        CSharp: PlayerData.GetCollidingUnits(Unit)
        VB: PlayerData.GetCollidingUnits(Unit)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.GetCollidingUnits(MinecaRTS.Unit)
        VB: MinecaRTS.PlayerData.GetCollidingUnits(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetCollidingUnits
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 285
      syntax:
        content:
          CSharp: public List<Unit> GetCollidingUnits(Unit unit)
          VB: Public Function GetCollidingUnits(unit As Unit) As List(Of Unit)
        parameters:
        - id: unit
          type: MinecaRTS.Unit
        return:
          type: System.Collections.Generic.List{MinecaRTS.Unit}
      overload: MinecaRTS.PlayerData.GetCollidingUnits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.GetUnitsInRadius(MinecaRTS.Unit,System.Single)
      commentId: M:MinecaRTS.PlayerData.GetUnitsInRadius(MinecaRTS.Unit,System.Single)
      language: CSharp
      name:
        CSharp: GetUnitsInRadius(Unit, Single)
        VB: GetUnitsInRadius(Unit, Single)
      nameWithType:
        CSharp: PlayerData.GetUnitsInRadius(Unit, Single)
        VB: PlayerData.GetUnitsInRadius(Unit, Single)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.GetUnitsInRadius(MinecaRTS.Unit, System.Single)
        VB: MinecaRTS.PlayerData.GetUnitsInRadius(MinecaRTS.Unit, System.Single)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetUnitsInRadius
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 301
      syntax:
        content:
          CSharp: public List<Unit> GetUnitsInRadius(Unit unit, float radius)
          VB: Public Function GetUnitsInRadius(unit As Unit, radius As Single) As List(Of Unit)
        parameters:
        - id: unit
          type: MinecaRTS.Unit
        - id: radius
          type: System.Single
        return:
          type: System.Collections.Generic.List{MinecaRTS.Unit}
      overload: MinecaRTS.PlayerData.GetUnitsInRadius*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.BuildingAtPos(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.PlayerData.BuildingAtPos(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: BuildingAtPos(Vector2)
        VB: BuildingAtPos(Vector2)
      nameWithType:
        CSharp: PlayerData.BuildingAtPos(Vector2)
        VB: PlayerData.BuildingAtPos(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.BuildingAtPos(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.PlayerData.BuildingAtPos(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: BuildingAtPos
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 322
      syntax:
        content:
          CSharp: public Building BuildingAtPos(Vector2 pos)
          VB: Public Function BuildingAtPos(pos As Vector2) As Building
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: MinecaRTS.Building
      overload: MinecaRTS.PlayerData.BuildingAtPos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.SelectFirstBuildingInRect(Microsoft.Xna.Framework.Rectangle)
      commentId: M:MinecaRTS.PlayerData.SelectFirstBuildingInRect(Microsoft.Xna.Framework.Rectangle)
      language: CSharp
      name:
        CSharp: SelectFirstBuildingInRect(Rectangle)
        VB: SelectFirstBuildingInRect(Rectangle)
      nameWithType:
        CSharp: PlayerData.SelectFirstBuildingInRect(Rectangle)
        VB: PlayerData.SelectFirstBuildingInRect(Rectangle)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.SelectFirstBuildingInRect(Microsoft.Xna.Framework.Rectangle)
        VB: MinecaRTS.PlayerData.SelectFirstBuildingInRect(Microsoft.Xna.Framework.Rectangle)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SelectFirstBuildingInRect
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 333
      syntax:
        content:
          CSharp: public void SelectFirstBuildingInRect(Rectangle rect)
          VB: Public Sub SelectFirstBuildingInRect(rect As Rectangle)
        parameters:
        - id: rect
          type: Microsoft.Xna.Framework.Rectangle
      overload: MinecaRTS.PlayerData.SelectFirstBuildingInRect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.BuyBuilding(MinecaRTS.Building,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.PlayerData.BuyBuilding(MinecaRTS.Building,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: BuyBuilding(Building, Vector2)
        VB: BuyBuilding(Building, Vector2)
      nameWithType:
        CSharp: PlayerData.BuyBuilding(Building, Vector2)
        VB: PlayerData.BuyBuilding(Building, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.BuyBuilding(MinecaRTS.Building, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.PlayerData.BuyBuilding(MinecaRTS.Building, Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: BuyBuilding
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 348
      syntax:
        content:
          CSharp: public bool BuyBuilding(Building building, Vector2 pos)
          VB: Public Function BuyBuilding(building As Building, pos As Vector2) As Boolean
        parameters:
        - id: building
          type: MinecaRTS.Building
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: System.Boolean
      overload: MinecaRTS.PlayerData.BuyBuilding*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.SpendResourcesForUnitType(System.Type)
      commentId: M:MinecaRTS.PlayerData.SpendResourcesForUnitType(System.Type)
      language: CSharp
      name:
        CSharp: SpendResourcesForUnitType(Type)
        VB: SpendResourcesForUnitType(Type)
      nameWithType:
        CSharp: PlayerData.SpendResourcesForUnitType(Type)
        VB: PlayerData.SpendResourcesForUnitType(Type)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.SpendResourcesForUnitType(System.Type)
        VB: MinecaRTS.PlayerData.SpendResourcesForUnitType(System.Type)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SpendResourcesForUnitType
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 391
      syntax:
        content:
          CSharp: public void SpendResourcesForUnitType(Type unitType)
          VB: Public Sub SpendResourcesForUnitType(unitType As Type)
        parameters:
        - id: unitType
          type: System.Type
      overload: MinecaRTS.PlayerData.SpendResourcesForUnitType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.CanAffordEntityType(System.Type)
      commentId: M:MinecaRTS.PlayerData.CanAffordEntityType(System.Type)
      language: CSharp
      name:
        CSharp: CanAffordEntityType(Type)
        VB: CanAffordEntityType(Type)
      nameWithType:
        CSharp: PlayerData.CanAffordEntityType(Type)
        VB: PlayerData.CanAffordEntityType(Type)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.CanAffordEntityType(System.Type)
        VB: MinecaRTS.PlayerData.CanAffordEntityType(System.Type)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CanAffordEntityType
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 404
      syntax:
        content:
          CSharp: public bool CanAffordEntityType(Type entityType)
          VB: Public Function CanAffordEntityType(entityType As Type) As Boolean
        parameters:
        - id: entityType
          type: System.Type
        return:
          type: System.Boolean
      overload: MinecaRTS.PlayerData.CanAffordEntityType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.QueueUpProductionOnSelectedBuildingAtIndex(System.Int32)
      commentId: M:MinecaRTS.PlayerData.QueueUpProductionOnSelectedBuildingAtIndex(System.Int32)
      language: CSharp
      name:
        CSharp: QueueUpProductionOnSelectedBuildingAtIndex(Int32)
        VB: QueueUpProductionOnSelectedBuildingAtIndex(Int32)
      nameWithType:
        CSharp: PlayerData.QueueUpProductionOnSelectedBuildingAtIndex(Int32)
        VB: PlayerData.QueueUpProductionOnSelectedBuildingAtIndex(Int32)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.QueueUpProductionOnSelectedBuildingAtIndex(System.Int32)
        VB: MinecaRTS.PlayerData.QueueUpProductionOnSelectedBuildingAtIndex(System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: QueueUpProductionOnSelectedBuildingAtIndex
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 410
      syntax:
        content:
          CSharp: public void QueueUpProductionOnSelectedBuildingAtIndex(int index)
          VB: Public Sub QueueUpProductionOnSelectedBuildingAtIndex(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: MinecaRTS.PlayerData.QueueUpProductionOnSelectedBuildingAtIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.SpendResources(System.UInt32,System.UInt32)
      commentId: M:MinecaRTS.PlayerData.SpendResources(System.UInt32,System.UInt32)
      language: CSharp
      name:
        CSharp: SpendResources(UInt32, UInt32)
        VB: SpendResources(UInt32, UInt32)
      nameWithType:
        CSharp: PlayerData.SpendResources(UInt32, UInt32)
        VB: PlayerData.SpendResources(UInt32, UInt32)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.SpendResources(System.UInt32, System.UInt32)
        VB: MinecaRTS.PlayerData.SpendResources(System.UInt32, System.UInt32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SpendResources
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 418
      syntax:
        content:
          CSharp: public void SpendResources(uint wood, uint stone)
          VB: Public Sub SpendResources(wood As UInteger, stone As UInteger)
        parameters:
        - id: wood
          type: System.UInt32
        - id: stone
          type: System.UInt32
      overload: MinecaRTS.PlayerData.SpendResources*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.GetClosestActiveBuilding``1(MinecaRTS.Unit)
      commentId: M:MinecaRTS.PlayerData.GetClosestActiveBuilding``1(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: GetClosestActiveBuilding<T>(Unit)
        VB: GetClosestActiveBuilding(Of T)(Unit)
      nameWithType:
        CSharp: PlayerData.GetClosestActiveBuilding<T>(Unit)
        VB: PlayerData.GetClosestActiveBuilding(Of T)(Unit)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.GetClosestActiveBuilding<T>(MinecaRTS.Unit)
        VB: MinecaRTS.PlayerData.GetClosestActiveBuilding(Of T)(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetClosestActiveBuilding
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 430
      syntax:
        content:
          CSharp: 'public T GetClosestActiveBuilding<T>(Unit u)where T : Building'
          VB: Public Function GetClosestActiveBuilding(Of T As Building)(u As Unit) As T
        parameters:
        - id: u
          type: MinecaRTS.Unit
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: MinecaRTS.PlayerData.GetClosestActiveBuilding*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.SetSelectedBuildingRallyPointTo(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.PlayerData.SetSelectedBuildingRallyPointTo(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: SetSelectedBuildingRallyPointTo(Vector2)
        VB: SetSelectedBuildingRallyPointTo(Vector2)
      nameWithType:
        CSharp: PlayerData.SetSelectedBuildingRallyPointTo(Vector2)
        VB: PlayerData.SetSelectedBuildingRallyPointTo(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.SetSelectedBuildingRallyPointTo(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.PlayerData.SetSelectedBuildingRallyPointTo(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SetSelectedBuildingRallyPointTo
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 452
      syntax:
        content:
          CSharp: public void SetSelectedBuildingRallyPointTo(Vector2 pos)
          VB: Public Sub SetSelectedBuildingRallyPointTo(pos As Vector2)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.PlayerData.SetSelectedBuildingRallyPointTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.GetClosestResourceReturnPoint(MinecaRTS.Unit)
      commentId: M:MinecaRTS.PlayerData.GetClosestResourceReturnPoint(MinecaRTS.Unit)
      language: CSharp
      name:
        CSharp: GetClosestResourceReturnPoint(Unit)
        VB: GetClosestResourceReturnPoint(Unit)
      nameWithType:
        CSharp: PlayerData.GetClosestResourceReturnPoint(Unit)
        VB: PlayerData.GetClosestResourceReturnPoint(Unit)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.GetClosestResourceReturnPoint(MinecaRTS.Unit)
        VB: MinecaRTS.PlayerData.GetClosestResourceReturnPoint(MinecaRTS.Unit)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetClosestResourceReturnPoint
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 460
      syntax:
        content:
          CSharp: public Building GetClosestResourceReturnPoint(Unit u)
          VB: Public Function GetClosestResourceReturnPoint(u As Unit) As Building
        parameters:
        - id: u
          type: MinecaRTS.Unit
        return:
          type: MinecaRTS.Building
      overload: MinecaRTS.PlayerData.GetClosestResourceReturnPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.PlayerData.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: PlayerData.Render(SpriteBatch)
        VB: PlayerData.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.PlayerData.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 482
      syntax:
        content:
          CSharp: public void Render(SpriteBatch spriteBatch)
          VB: Public Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.PlayerData.Render*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.RenderUI(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.PlayerData.RenderUI(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderUI(SpriteBatch)
        VB: RenderUI(SpriteBatch)
      nameWithType:
        CSharp: PlayerData.RenderUI(SpriteBatch)
        VB: PlayerData.RenderUI(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.RenderUI(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.PlayerData.RenderUI(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderUI
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 498
      syntax:
        content:
          CSharp: public void RenderUI(SpriteBatch spriteBatch)
          VB: Public Sub RenderUI(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.PlayerData.RenderUI*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.PanelAtPos(System.String,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.PlayerData.PanelAtPos(System.String,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: PanelAtPos(String, Vector2)
        VB: PanelAtPos(String, Vector2)
      nameWithType:
        CSharp: PlayerData.PanelAtPos(String, Vector2)
        VB: PlayerData.PanelAtPos(String, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.PanelAtPos(System.String, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.PlayerData.PanelAtPos(System.String, Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: PanelAtPos
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 527
      syntax:
        content:
          CSharp: public bool PanelAtPos(string panelName, Vector2 pos)
          VB: Public Function PanelAtPos(panelName As String, pos As Vector2) As Boolean
        parameters:
        - id: panelName
          type: System.String
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: System.Boolean
      overload: MinecaRTS.PlayerData.PanelAtPos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.ButtonAtPos(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.PlayerData.ButtonAtPos(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: ButtonAtPos(Vector2)
        VB: ButtonAtPos(Vector2)
      nameWithType:
        CSharp: PlayerData.ButtonAtPos(Vector2)
        VB: PlayerData.ButtonAtPos(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.ButtonAtPos(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.PlayerData.ButtonAtPos(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ButtonAtPos
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 537
      syntax:
        content:
          CSharp: public Button ButtonAtPos(Vector2 pos)
          VB: Public Function ButtonAtPos(pos As Vector2) As Button
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: MinecaRTS.Button
      overload: MinecaRTS.PlayerData.ButtonAtPos*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.ClickedOnUI
      commentId: M:MinecaRTS.PlayerData.ClickedOnUI
      language: CSharp
      name:
        CSharp: ClickedOnUI()
        VB: ClickedOnUI()
      nameWithType:
        CSharp: PlayerData.ClickedOnUI()
        VB: PlayerData.ClickedOnUI()
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.ClickedOnUI()
        VB: MinecaRTS.PlayerData.ClickedOnUI()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ClickedOnUI
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 551
      syntax:
        content:
          CSharp: public bool ClickedOnUI()
          VB: Public Function ClickedOnUI As Boolean
        return:
          type: System.Boolean
      overload: MinecaRTS.PlayerData.ClickedOnUI*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.RenderMinimap(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.PlayerData.RenderMinimap(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderMinimap(SpriteBatch)
        VB: RenderMinimap(SpriteBatch)
      nameWithType:
        CSharp: PlayerData.RenderMinimap(SpriteBatch)
        VB: PlayerData.RenderMinimap(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.RenderMinimap(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.PlayerData.RenderMinimap(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderMinimap
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 570
      syntax:
        content:
          CSharp: public void RenderMinimap(SpriteBatch spriteBatch)
          VB: Public Sub RenderMinimap(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.PlayerData.RenderMinimap*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.PlayerData.TestPathfindingCalculationTime
      commentId: M:MinecaRTS.PlayerData.TestPathfindingCalculationTime
      language: CSharp
      name:
        CSharp: TestPathfindingCalculationTime()
        VB: TestPathfindingCalculationTime()
      nameWithType:
        CSharp: PlayerData.TestPathfindingCalculationTime()
        VB: PlayerData.TestPathfindingCalculationTime()
      qualifiedName:
        CSharp: MinecaRTS.PlayerData.TestPathfindingCalculationTime()
        VB: MinecaRTS.PlayerData.TestPathfindingCalculationTime()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/PlayerData.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TestPathfindingCalculationTime
        path: MinecaRTS/Core/PlayerData.cs
        startLine: 601
      syntax:
        content:
          CSharp: public void TestPathfindingCalculationTime()
          VB: Public Sub TestPathfindingCalculationTime
      overload: MinecaRTS.PlayerData.TestPathfindingCalculationTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.ProductionBuilding
    commentId: T:MinecaRTS.ProductionBuilding
    language: CSharp
    name:
      CSharp: ProductionBuilding
      VB: ProductionBuilding
    nameWithType:
      CSharp: ProductionBuilding
      VB: ProductionBuilding
    qualifiedName:
      CSharp: MinecaRTS.ProductionBuilding
      VB: MinecaRTS.ProductionBuilding
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: ProductionBuilding
      path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
      startLine: 11
    syntax:
      content:
        CSharp: 'public class ProductionBuilding : Building, IRenderable, IHandleMessages'
        VB: >-
          Public Class ProductionBuilding

              Inherits Building

              Implements IRenderable, IHandleMessages
    inheritance:
    - System.Object
    - MinecaRTS.Entity
    - MinecaRTS.Building
    implements:
    - MinecaRTS.IRenderable
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.Building.ActiveTexture
    - MinecaRTS.Building.IsActive
    - MinecaRTS.Building.Team
    - MinecaRTS.Building.Construct
    - MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
    - MinecaRTS.Building.ExitState
    - MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Entity.Pos
    - MinecaRTS.Entity.Scale
    - MinecaRTS.Entity.ID
    - MinecaRTS.Entity.RenderPos
    - MinecaRTS.Entity.CollisionRect
    - MinecaRTS.Entity.RenderRect
    - MinecaRTS.Entity.Mid
    - MinecaRTS.Entity.RenderMid
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.ProductionBuilding.MAX_HEALTH
      commentId: F:MinecaRTS.ProductionBuilding.MAX_HEALTH
      language: CSharp
      name:
        CSharp: MAX_HEALTH
        VB: MAX_HEALTH
      nameWithType:
        CSharp: ProductionBuilding.MAX_HEALTH
        VB: ProductionBuilding.MAX_HEALTH
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.MAX_HEALTH
        VB: MinecaRTS.ProductionBuilding.MAX_HEALTH
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MAX_HEALTH
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 13
      syntax:
        content:
          CSharp: public const int MAX_HEALTH = 100000
          VB: Public Const MAX_HEALTH As Integer = 100000
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.ProductionBuilding.MAX_QUEUE_LENGTH
      commentId: F:MinecaRTS.ProductionBuilding.MAX_QUEUE_LENGTH
      language: CSharp
      name:
        CSharp: MAX_QUEUE_LENGTH
        VB: MAX_QUEUE_LENGTH
      nameWithType:
        CSharp: ProductionBuilding.MAX_QUEUE_LENGTH
        VB: ProductionBuilding.MAX_QUEUE_LENGTH
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.MAX_QUEUE_LENGTH
        VB: MinecaRTS.ProductionBuilding.MAX_QUEUE_LENGTH
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MAX_QUEUE_LENGTH
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 14
      syntax:
        content:
          CSharp: public const int MAX_QUEUE_LENGTH = 5
          VB: Public Const MAX_QUEUE_LENGTH As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.ProductionBuilding.productionTimes
      commentId: F:MinecaRTS.ProductionBuilding.productionTimes
      language: CSharp
      name:
        CSharp: productionTimes
        VB: productionTimes
      nameWithType:
        CSharp: ProductionBuilding.productionTimes
        VB: ProductionBuilding.productionTimes
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.productionTimes
        VB: MinecaRTS.ProductionBuilding.productionTimes
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: productionTimes
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 15
      syntax:
        content:
          CSharp: public static Dictionary<Type, uint> productionTimes
          VB: Public Shared productionTimes As Dictionary(Of Type, UInteger)
        return:
          type: System.Collections.Generic.Dictionary{System.Type,System.UInt32}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.ProductionBuilding.ProductionTypes
      commentId: P:MinecaRTS.ProductionBuilding.ProductionTypes
      language: CSharp
      name:
        CSharp: ProductionTypes
        VB: ProductionTypes
      nameWithType:
        CSharp: ProductionBuilding.ProductionTypes
        VB: ProductionBuilding.ProductionTypes
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.ProductionTypes
        VB: MinecaRTS.ProductionBuilding.ProductionTypes
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ProductionTypes
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 22
      syntax:
        content:
          CSharp: public List<Type> ProductionTypes { get; }
          VB: Public ReadOnly Property ProductionTypes As List(Of Type)
        parameters: []
        return:
          type: System.Collections.Generic.List{System.Type}
      overload: MinecaRTS.ProductionBuilding.ProductionTypes*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.ProductionBuilding.rallyPoint
      commentId: F:MinecaRTS.ProductionBuilding.rallyPoint
      language: CSharp
      name:
        CSharp: rallyPoint
        VB: rallyPoint
      nameWithType:
        CSharp: ProductionBuilding.rallyPoint
        VB: ProductionBuilding.rallyPoint
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.rallyPoint
        VB: MinecaRTS.ProductionBuilding.rallyPoint
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: rallyPoint
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 27
      syntax:
        content:
          CSharp: public Vector2 rallyPoint
          VB: Public rallyPoint As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.ProductionBuilding.Data
      commentId: P:MinecaRTS.ProductionBuilding.Data
      language: CSharp
      name:
        CSharp: Data
        VB: Data
      nameWithType:
        CSharp: ProductionBuilding.Data
        VB: ProductionBuilding.Data
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.Data
        VB: MinecaRTS.ProductionBuilding.Data
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Data
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 31
      syntax:
        content:
          CSharp: protected PlayerData Data { get; }
          VB: Protected ReadOnly Property Data As PlayerData
        parameters: []
        return:
          type: MinecaRTS.PlayerData
      overload: MinecaRTS.ProductionBuilding.Data*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: MinecaRTS.ProductionBuilding.BeingProduced
      commentId: P:MinecaRTS.ProductionBuilding.BeingProduced
      language: CSharp
      name:
        CSharp: BeingProduced
        VB: BeingProduced
      nameWithType:
        CSharp: ProductionBuilding.BeingProduced
        VB: ProductionBuilding.BeingProduced
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.BeingProduced
        VB: MinecaRTS.ProductionBuilding.BeingProduced
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: BeingProduced
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 36
      syntax:
        content:
          CSharp: public Type BeingProduced { get; }
          VB: Public ReadOnly Property BeingProduced As Type
        parameters: []
        return:
          type: System.Type
      overload: MinecaRTS.ProductionBuilding.BeingProduced*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.ProductionBuilding.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Collections.Generic.List{System.Type},MinecaRTS.PlayerData,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D)
      commentId: M:MinecaRTS.ProductionBuilding.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Collections.Generic.List{System.Type},MinecaRTS.PlayerData,Microsoft.Xna.Framework.Graphics.Texture2D,Microsoft.Xna.Framework.Graphics.Texture2D)
      language: CSharp
      name:
        CSharp: ProductionBuilding(Vector2, Vector2, List<Type>, PlayerData, Texture2D, Texture2D)
        VB: ProductionBuilding(Vector2, Vector2, List(Of Type), PlayerData, Texture2D, Texture2D)
      nameWithType:
        CSharp: ProductionBuilding.ProductionBuilding(Vector2, Vector2, List<Type>, PlayerData, Texture2D, Texture2D)
        VB: ProductionBuilding.ProductionBuilding(Vector2, Vector2, List(Of Type), PlayerData, Texture2D, Texture2D)
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.ProductionBuilding(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, System.Collections.Generic.List<System.Type>, MinecaRTS.PlayerData, Microsoft.Xna.Framework.Graphics.Texture2D, Microsoft.Xna.Framework.Graphics.Texture2D)
        VB: MinecaRTS.ProductionBuilding.ProductionBuilding(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, System.Collections.Generic.List(Of System.Type), MinecaRTS.PlayerData, Microsoft.Xna.Framework.Graphics.Texture2D, Microsoft.Xna.Framework.Graphics.Texture2D)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 47
      syntax:
        content:
          CSharp: public ProductionBuilding(Vector2 pos, Vector2 scale, List<Type> productionTypes, PlayerData data, Texture2D activeTexture, Texture2D constructionTexture)
          VB: Public Sub New(pos As Vector2, scale As Vector2, productionTypes As List(Of Type), data As PlayerData, activeTexture As Texture2D, constructionTexture As Texture2D)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: scale
          type: Microsoft.Xna.Framework.Vector2
        - id: productionTypes
          type: System.Collections.Generic.List{System.Type}
        - id: data
          type: MinecaRTS.PlayerData
        - id: activeTexture
          type: Microsoft.Xna.Framework.Graphics.Texture2D
        - id: constructionTexture
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      overload: MinecaRTS.ProductionBuilding.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.ProductionBuilding.ResetRallyPoint
      commentId: M:MinecaRTS.ProductionBuilding.ResetRallyPoint
      language: CSharp
      name:
        CSharp: ResetRallyPoint()
        VB: ResetRallyPoint()
      nameWithType:
        CSharp: ProductionBuilding.ResetRallyPoint()
        VB: ProductionBuilding.ResetRallyPoint()
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.ResetRallyPoint()
        VB: MinecaRTS.ProductionBuilding.ResetRallyPoint()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ResetRallyPoint
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 57
      syntax:
        content:
          CSharp: public void ResetRallyPoint()
          VB: Public Sub ResetRallyPoint
      overload: MinecaRTS.ProductionBuilding.ResetRallyPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex(System.Int32)
      commentId: M:MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex(System.Int32)
      language: CSharp
      name:
        CSharp: QueueUpProductionAtIndex(Int32)
        VB: QueueUpProductionAtIndex(Int32)
      nameWithType:
        CSharp: ProductionBuilding.QueueUpProductionAtIndex(Int32)
        VB: ProductionBuilding.QueueUpProductionAtIndex(Int32)
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex(System.Int32)
        VB: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex(System.Int32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: QueueUpProductionAtIndex
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 62
      syntax:
        content:
          CSharp: public override void QueueUpProductionAtIndex(int index)
          VB: Public Overrides Sub QueueUpProductionAtIndex(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex*
      overridden: MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.ProductionBuilding.Update
      commentId: M:MinecaRTS.ProductionBuilding.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: ProductionBuilding.Update()
        VB: ProductionBuilding.Update()
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.Update()
        VB: MinecaRTS.ProductionBuilding.Update()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 80
      syntax:
        content:
          CSharp: public override void Update()
          VB: Public Overrides Sub Update
      overload: MinecaRTS.ProductionBuilding.Update*
      overridden: MinecaRTS.Building.Update
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.ProductionBuilding.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.ProductionBuilding.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: ProductionBuilding.Render(SpriteBatch)
        VB: ProductionBuilding.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.ProductionBuilding.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.ProductionBuilding.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Entities/Buildings/ProductionBuilding.cs
        startLine: 102
      syntax:
        content:
          CSharp: public override void Render(SpriteBatch spriteBatch)
          VB: Public Overrides Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.ProductionBuilding.Render*
      overridden: MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: MinecaRTS.Program
    commentId: T:MinecaRTS.Program
    language: CSharp
    name:
      CSharp: Program
      VB: Program
    nameWithType:
      CSharp: Program
      VB: Program
    qualifiedName:
      CSharp: MinecaRTS.Program
      VB: MinecaRTS.Program
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Program.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Program
      path: MinecaRTS/Program.cs
      startLine: 8
    summary: "\nThe main class.\n"
    example: []
    syntax:
      content:
        CSharp: public static class Program
        VB: Public Module Program
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items: []
  - id: MinecaRTS.Resource
    commentId: T:MinecaRTS.Resource
    language: CSharp
    name:
      CSharp: Resource
      VB: Resource
    nameWithType:
      CSharp: Resource
      VB: Resource
    qualifiedName:
      CSharp: MinecaRTS.Resource
      VB: MinecaRTS.Resource
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Resource/Resource.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Resource
      path: MinecaRTS/Resource/Resource.cs
      startLine: 12
    syntax:
      content:
        CSharp: 'public class Resource : Entity, IRenderable, IHandleMessages'
        VB: >-
          Public Class Resource

              Inherits Entity

              Implements IRenderable, IHandleMessages
    inheritance:
    - System.Object
    - MinecaRTS.Entity
    implements:
    - MinecaRTS.IRenderable
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.Entity.Pos
    - MinecaRTS.Entity.Scale
    - MinecaRTS.Entity.ID
    - MinecaRTS.Entity.RenderPos
    - MinecaRTS.Entity.CollisionRect
    - MinecaRTS.Entity.RenderRect
    - MinecaRTS.Entity.Mid
    - MinecaRTS.Entity.RenderMid
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Resource.HARVEST_DURATION
      commentId: F:MinecaRTS.Resource.HARVEST_DURATION
      language: CSharp
      name:
        CSharp: HARVEST_DURATION
        VB: HARVEST_DURATION
      nameWithType:
        CSharp: Resource.HARVEST_DURATION
        VB: Resource.HARVEST_DURATION
      qualifiedName:
        CSharp: MinecaRTS.Resource.HARVEST_DURATION
        VB: MinecaRTS.Resource.HARVEST_DURATION
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HARVEST_DURATION
        path: MinecaRTS/Resource/Resource.cs
        startLine: 14
      syntax:
        content:
          CSharp: public const int HARVEST_DURATION = 180
          VB: Public Const HARVEST_DURATION As Integer = 180
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Resource.MAX_HARVESTERS
      commentId: F:MinecaRTS.Resource.MAX_HARVESTERS
      language: CSharp
      name:
        CSharp: MAX_HARVESTERS
        VB: MAX_HARVESTERS
      nameWithType:
        CSharp: Resource.MAX_HARVESTERS
        VB: Resource.MAX_HARVESTERS
      qualifiedName:
        CSharp: MinecaRTS.Resource.MAX_HARVESTERS
        VB: MinecaRTS.Resource.MAX_HARVESTERS
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MAX_HARVESTERS
        path: MinecaRTS/Resource/Resource.cs
        startLine: 15
      syntax:
        content:
          CSharp: public const int MAX_HARVESTERS = 3
          VB: Public Const MAX_HARVESTERS As Integer = 3
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Resource.HARVEST_AMOUNT
      commentId: F:MinecaRTS.Resource.HARVEST_AMOUNT
      language: CSharp
      name:
        CSharp: HARVEST_AMOUNT
        VB: HARVEST_AMOUNT
      nameWithType:
        CSharp: Resource.HARVEST_AMOUNT
        VB: Resource.HARVEST_AMOUNT
      qualifiedName:
        CSharp: MinecaRTS.Resource.HARVEST_AMOUNT
        VB: MinecaRTS.Resource.HARVEST_AMOUNT
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HARVEST_AMOUNT
        path: MinecaRTS/Resource/Resource.cs
        startLine: 16
      syntax:
        content:
          CSharp: public const int HARVEST_AMOUNT = 5
          VB: Public Const HARVEST_AMOUNT As Integer = 5
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Resource.MAX_VALUE
      commentId: F:MinecaRTS.Resource.MAX_VALUE
      language: CSharp
      name:
        CSharp: MAX_VALUE
        VB: MAX_VALUE
      nameWithType:
        CSharp: Resource.MAX_VALUE
        VB: Resource.MAX_VALUE
      qualifiedName:
        CSharp: MinecaRTS.Resource.MAX_VALUE
        VB: MinecaRTS.Resource.MAX_VALUE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MAX_VALUE
        path: MinecaRTS/Resource/Resource.cs
        startLine: 17
      syntax:
        content:
          CSharp: public const int MAX_VALUE = 100
          VB: Public Const MAX_VALUE As Integer = 100
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Resource.WOOD_TEXTURE
      commentId: F:MinecaRTS.Resource.WOOD_TEXTURE
      language: CSharp
      name:
        CSharp: WOOD_TEXTURE
        VB: WOOD_TEXTURE
      nameWithType:
        CSharp: Resource.WOOD_TEXTURE
        VB: Resource.WOOD_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.Resource.WOOD_TEXTURE
        VB: MinecaRTS.Resource.WOOD_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: WOOD_TEXTURE
        path: MinecaRTS/Resource/Resource.cs
        startLine: 19
      syntax:
        content:
          CSharp: public static Texture2D WOOD_TEXTURE
          VB: Public Shared WOOD_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Resource.WOOD_DEPLETED_TEXTURE
      commentId: F:MinecaRTS.Resource.WOOD_DEPLETED_TEXTURE
      language: CSharp
      name:
        CSharp: WOOD_DEPLETED_TEXTURE
        VB: WOOD_DEPLETED_TEXTURE
      nameWithType:
        CSharp: Resource.WOOD_DEPLETED_TEXTURE
        VB: Resource.WOOD_DEPLETED_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.Resource.WOOD_DEPLETED_TEXTURE
        VB: MinecaRTS.Resource.WOOD_DEPLETED_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: WOOD_DEPLETED_TEXTURE
        path: MinecaRTS/Resource/Resource.cs
        startLine: 20
      syntax:
        content:
          CSharp: public static Texture2D WOOD_DEPLETED_TEXTURE
          VB: Public Shared WOOD_DEPLETED_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Resource.STONE_TEXTURE
      commentId: F:MinecaRTS.Resource.STONE_TEXTURE
      language: CSharp
      name:
        CSharp: STONE_TEXTURE
        VB: STONE_TEXTURE
      nameWithType:
        CSharp: Resource.STONE_TEXTURE
        VB: Resource.STONE_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.Resource.STONE_TEXTURE
        VB: MinecaRTS.Resource.STONE_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: STONE_TEXTURE
        path: MinecaRTS/Resource/Resource.cs
        startLine: 21
      syntax:
        content:
          CSharp: public static Texture2D STONE_TEXTURE
          VB: Public Shared STONE_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Resource.STONE_DEPLETED_TEXTURE
      commentId: F:MinecaRTS.Resource.STONE_DEPLETED_TEXTURE
      language: CSharp
      name:
        CSharp: STONE_DEPLETED_TEXTURE
        VB: STONE_DEPLETED_TEXTURE
      nameWithType:
        CSharp: Resource.STONE_DEPLETED_TEXTURE
        VB: Resource.STONE_DEPLETED_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.Resource.STONE_DEPLETED_TEXTURE
        VB: MinecaRTS.Resource.STONE_DEPLETED_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: STONE_DEPLETED_TEXTURE
        path: MinecaRTS/Resource/Resource.cs
        startLine: 22
      syntax:
        content:
          CSharp: public static Texture2D STONE_DEPLETED_TEXTURE
          VB: Public Shared STONE_DEPLETED_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Resource.Type
      commentId: F:MinecaRTS.Resource.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: Resource.Type
        VB: Resource.Type
      qualifiedName:
        CSharp: MinecaRTS.Resource.Type
        VB: MinecaRTS.Resource.Type
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Type
        path: MinecaRTS/Resource/Resource.cs
        startLine: 33
      syntax:
        content:
          CSharp: public ResourceType Type
          VB: Public Type As ResourceType
        return:
          type: MinecaRTS.ResourceType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Resource.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MinecaRTS.ResourceType)
      commentId: M:MinecaRTS.Resource.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,MinecaRTS.ResourceType)
      language: CSharp
      name:
        CSharp: Resource(Vector2, Vector2, ResourceType)
        VB: Resource(Vector2, Vector2, ResourceType)
      nameWithType:
        CSharp: Resource.Resource(Vector2, Vector2, ResourceType)
        VB: Resource.Resource(Vector2, Vector2, ResourceType)
      qualifiedName:
        CSharp: MinecaRTS.Resource.Resource(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MinecaRTS.ResourceType)
        VB: MinecaRTS.Resource.Resource(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, MinecaRTS.ResourceType)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Resource/Resource.cs
        startLine: 37
      syntax:
        content:
          CSharp: public Resource(Vector2 pos, Vector2 scale, ResourceType t)
          VB: Public Sub New(pos As Vector2, scale As Vector2, t As ResourceType)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: scale
          type: Microsoft.Xna.Framework.Vector2
        - id: t
          type: MinecaRTS.ResourceType
      overload: MinecaRTS.Resource.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Resource.Harvesters
      commentId: P:MinecaRTS.Resource.Harvesters
      language: CSharp
      name:
        CSharp: Harvesters
        VB: Harvesters
      nameWithType:
        CSharp: Resource.Harvesters
        VB: Resource.Harvesters
      qualifiedName:
        CSharp: MinecaRTS.Resource.Harvesters
        VB: MinecaRTS.Resource.Harvesters
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Harvesters
        path: MinecaRTS/Resource/Resource.cs
        startLine: 55
      syntax:
        content:
          CSharp: public HashSet<Worker> Harvesters { get; }
          VB: Public ReadOnly Property Harvesters As HashSet(Of Worker)
        parameters: []
        return:
          type: System.Collections.Generic.HashSet{MinecaRTS.Worker}
      overload: MinecaRTS.Resource.Harvesters*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Resource.IsSaturated
      commentId: P:MinecaRTS.Resource.IsSaturated
      language: CSharp
      name:
        CSharp: IsSaturated
        VB: IsSaturated
      nameWithType:
        CSharp: Resource.IsSaturated
        VB: Resource.IsSaturated
      qualifiedName:
        CSharp: MinecaRTS.Resource.IsSaturated
        VB: MinecaRTS.Resource.IsSaturated
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: IsSaturated
        path: MinecaRTS/Resource/Resource.cs
        startLine: 60
      syntax:
        content:
          CSharp: public bool IsSaturated { get; }
          VB: Public ReadOnly Property IsSaturated As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: MinecaRTS.Resource.IsSaturated*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Resource.IsDepleted
      commentId: P:MinecaRTS.Resource.IsDepleted
      language: CSharp
      name:
        CSharp: IsDepleted
        VB: IsDepleted
      nameWithType:
        CSharp: Resource.IsDepleted
        VB: Resource.IsDepleted
      qualifiedName:
        CSharp: MinecaRTS.Resource.IsDepleted
        VB: MinecaRTS.Resource.IsDepleted
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: IsDepleted
        path: MinecaRTS/Resource/Resource.cs
        startLine: 65
      syntax:
        content:
          CSharp: public bool IsDepleted { get; }
          VB: Public ReadOnly Property IsDepleted As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: MinecaRTS.Resource.IsDepleted*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Resource.GiveResources(MinecaRTS.Worker)
      commentId: M:MinecaRTS.Resource.GiveResources(MinecaRTS.Worker)
      language: CSharp
      name:
        CSharp: GiveResources(Worker)
        VB: GiveResources(Worker)
      nameWithType:
        CSharp: Resource.GiveResources(Worker)
        VB: Resource.GiveResources(Worker)
      qualifiedName:
        CSharp: MinecaRTS.Resource.GiveResources(MinecaRTS.Worker)
        VB: MinecaRTS.Resource.GiveResources(MinecaRTS.Worker)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GiveResources
        path: MinecaRTS/Resource/Resource.cs
        startLine: 70
      syntax:
        content:
          CSharp: public void GiveResources(Worker harvester)
          VB: Public Sub GiveResources(harvester As Worker)
        parameters:
        - id: harvester
          type: MinecaRTS.Worker
      overload: MinecaRTS.Resource.GiveResources*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Resource.RemoveHarvester(MinecaRTS.Worker)
      commentId: M:MinecaRTS.Resource.RemoveHarvester(MinecaRTS.Worker)
      language: CSharp
      name:
        CSharp: RemoveHarvester(Worker)
        VB: RemoveHarvester(Worker)
      nameWithType:
        CSharp: Resource.RemoveHarvester(Worker)
        VB: Resource.RemoveHarvester(Worker)
      qualifiedName:
        CSharp: MinecaRTS.Resource.RemoveHarvester(MinecaRTS.Worker)
        VB: MinecaRTS.Resource.RemoveHarvester(MinecaRTS.Worker)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RemoveHarvester
        path: MinecaRTS/Resource/Resource.cs
        startLine: 79
      syntax:
        content:
          CSharp: public void RemoveHarvester(Worker harvester)
          VB: Public Sub RemoveHarvester(harvester As Worker)
        parameters:
        - id: harvester
          type: MinecaRTS.Worker
      overload: MinecaRTS.Resource.RemoveHarvester*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Resource.AddHarvester(MinecaRTS.Worker)
      commentId: M:MinecaRTS.Resource.AddHarvester(MinecaRTS.Worker)
      language: CSharp
      name:
        CSharp: AddHarvester(Worker)
        VB: AddHarvester(Worker)
      nameWithType:
        CSharp: Resource.AddHarvester(Worker)
        VB: Resource.AddHarvester(Worker)
      qualifiedName:
        CSharp: MinecaRTS.Resource.AddHarvester(MinecaRTS.Worker)
        VB: MinecaRTS.Resource.AddHarvester(MinecaRTS.Worker)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddHarvester
        path: MinecaRTS/Resource/Resource.cs
        startLine: 84
      syntax:
        content:
          CSharp: public void AddHarvester(Worker harvester)
          VB: Public Sub AddHarvester(harvester As Worker)
        parameters:
        - id: harvester
          type: MinecaRTS.Worker
      overload: MinecaRTS.Resource.AddHarvester*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Resource.HasHarvester(MinecaRTS.Worker)
      commentId: M:MinecaRTS.Resource.HasHarvester(MinecaRTS.Worker)
      language: CSharp
      name:
        CSharp: HasHarvester(Worker)
        VB: HasHarvester(Worker)
      nameWithType:
        CSharp: Resource.HasHarvester(Worker)
        VB: Resource.HasHarvester(Worker)
      qualifiedName:
        CSharp: MinecaRTS.Resource.HasHarvester(MinecaRTS.Worker)
        VB: MinecaRTS.Resource.HasHarvester(MinecaRTS.Worker)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HasHarvester
        path: MinecaRTS/Resource/Resource.cs
        startLine: 89
      syntax:
        content:
          CSharp: public bool HasHarvester(Worker harvester)
          VB: Public Function HasHarvester(harvester As Worker) As Boolean
        parameters:
        - id: harvester
          type: MinecaRTS.Worker
        return:
          type: System.Boolean
      overload: MinecaRTS.Resource.HasHarvester*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Resource.Update
      commentId: M:MinecaRTS.Resource.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Resource.Update()
        VB: Resource.Update()
      qualifiedName:
        CSharp: MinecaRTS.Resource.Update()
        VB: MinecaRTS.Resource.Update()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Resource/Resource.cs
        startLine: 94
      syntax:
        content:
          CSharp: public override void Update()
          VB: Public Overrides Sub Update
      overload: MinecaRTS.Resource.Update*
      overridden: MinecaRTS.Entity.Update
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Resource.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Resource.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: Resource.Render(SpriteBatch)
        VB: Resource.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Resource.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Resource.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Resource/Resource.cs
        startLine: 98
      syntax:
        content:
          CSharp: public override void Render(SpriteBatch spriteBatch)
          VB: Public Overrides Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Resource.Render*
      overridden: MinecaRTS.Entity.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Resource.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.Resource.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: Resource.HandleMessage(Message)
        VB: Resource.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.Resource.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.Resource.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Resource/Resource.cs
        startLine: 106
      syntax:
        content:
          CSharp: public override void HandleMessage(Message message)
          VB: Public Overrides Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.Resource.HandleMessage*
      overridden: MinecaRTS.Entity.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Resource.ExitState
      commentId: M:MinecaRTS.Resource.ExitState
      language: CSharp
      name:
        CSharp: ExitState()
        VB: ExitState()
      nameWithType:
        CSharp: Resource.ExitState()
        VB: Resource.ExitState()
      qualifiedName:
        CSharp: MinecaRTS.Resource.ExitState()
        VB: MinecaRTS.Resource.ExitState()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ExitState
        path: MinecaRTS/Resource/Resource.cs
        startLine: 111
      syntax:
        content:
          CSharp: public override void ExitState()
          VB: Public Overrides Sub ExitState
      overload: MinecaRTS.Resource.ExitState*
      overridden: MinecaRTS.Entity.ExitState
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Resource.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Resource.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderDebug(SpriteBatch)
        VB: RenderDebug(SpriteBatch)
      nameWithType:
        CSharp: Resource.RenderDebug(SpriteBatch)
        VB: Resource.RenderDebug(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Resource.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Resource.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/Resource.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderDebug
        path: MinecaRTS/Resource/Resource.cs
        startLine: 114
      syntax:
        content:
          CSharp: public override void RenderDebug(SpriteBatch spriteBatch)
          VB: Public Overrides Sub RenderDebug(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Resource.RenderDebug*
      overridden: MinecaRTS.Entity.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: MinecaRTS.ResourceType
    commentId: T:MinecaRTS.ResourceType
    language: CSharp
    name:
      CSharp: ResourceType
      VB: ResourceType
    nameWithType:
      CSharp: ResourceType
      VB: ResourceType
    qualifiedName:
      CSharp: MinecaRTS.ResourceType
      VB: MinecaRTS.ResourceType
    type: Enum
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Resource/ResourceType.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: ResourceType
      path: MinecaRTS/Resource/ResourceType.cs
      startLine: 8
    syntax:
      content:
        CSharp: public enum ResourceType
        VB: Public Enum ResourceType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: MinecaRTS.ResourceType.None
      commentId: F:MinecaRTS.ResourceType.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: ResourceType.None
        VB: ResourceType.None
      qualifiedName:
        CSharp: MinecaRTS.ResourceType.None
        VB: MinecaRTS.ResourceType.None
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/ResourceType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: None
        path: MinecaRTS/Resource/ResourceType.cs
        startLine: 10
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: MinecaRTS.ResourceType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.ResourceType.Wood
      commentId: F:MinecaRTS.ResourceType.Wood
      language: CSharp
      name:
        CSharp: Wood
        VB: Wood
      nameWithType:
        CSharp: ResourceType.Wood
        VB: ResourceType.Wood
      qualifiedName:
        CSharp: MinecaRTS.ResourceType.Wood
        VB: MinecaRTS.ResourceType.Wood
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/ResourceType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Wood
        path: MinecaRTS/Resource/ResourceType.cs
        startLine: 11
      syntax:
        content:
          CSharp: Wood = 1
          VB: Wood = 1
        return:
          type: MinecaRTS.ResourceType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.ResourceType.Stone
      commentId: F:MinecaRTS.ResourceType.Stone
      language: CSharp
      name:
        CSharp: Stone
        VB: Stone
      nameWithType:
        CSharp: ResourceType.Stone
        VB: ResourceType.Stone
      qualifiedName:
        CSharp: MinecaRTS.ResourceType.Stone
        VB: MinecaRTS.ResourceType.Stone
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Resource/ResourceType.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Stone
        path: MinecaRTS/Resource/ResourceType.cs
        startLine: 12
      syntax:
        content:
          CSharp: Stone = 2
          VB: Stone = 2
        return:
          type: MinecaRTS.ResourceType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: MinecaRTS.State`1
    commentId: T:MinecaRTS.State`1
    language: CSharp
    name:
      CSharp: State<T>
      VB: State(Of T)
    nameWithType:
      CSharp: State<T>
      VB: State(Of T)
    qualifiedName:
      CSharp: MinecaRTS.State<T>
      VB: MinecaRTS.State(Of T)
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/States/State.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: State
      path: MinecaRTS/States/State.cs
      startLine: 8
    syntax:
      content:
        CSharp: public abstract class State<T>
        VB: Public MustInherit Class State(Of T)
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: MinecaRTS.State`1.Enter(`0)
      commentId: M:MinecaRTS.State`1.Enter(`0)
      language: CSharp
      name:
        CSharp: Enter(T)
        VB: Enter(T)
      nameWithType:
        CSharp: State<T>.Enter(T)
        VB: State(Of T).Enter(T)
      qualifiedName:
        CSharp: MinecaRTS.State<T>.Enter(T)
        VB: MinecaRTS.State(Of T).Enter(T)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/State.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Enter
        path: MinecaRTS/States/State.cs
        startLine: 10
      syntax:
        content:
          CSharp: public abstract void Enter(T owner)
          VB: Public MustOverride Sub Enter(owner As T)
        parameters:
        - id: owner
          type: '{T}'
      overload: MinecaRTS.State`1.Enter*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.State`1.Exit(`0)
      commentId: M:MinecaRTS.State`1.Exit(`0)
      language: CSharp
      name:
        CSharp: Exit(T)
        VB: Exit(T)
      nameWithType:
        CSharp: State<T>.Exit(T)
        VB: State(Of T).Exit(T)
      qualifiedName:
        CSharp: MinecaRTS.State<T>.Exit(T)
        VB: MinecaRTS.State(Of T).Exit(T)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/State.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Exit
        path: MinecaRTS/States/State.cs
        startLine: 11
      syntax:
        content:
          CSharp: public abstract void Exit(T owner)
          VB: Public MustOverride Sub Exit(owner As T)
        parameters:
        - id: owner
          type: '{T}'
      overload: MinecaRTS.State`1.Exit*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.State`1.Execute(`0)
      commentId: M:MinecaRTS.State`1.Execute(`0)
      language: CSharp
      name:
        CSharp: Execute(T)
        VB: Execute(T)
      nameWithType:
        CSharp: State<T>.Execute(T)
        VB: State(Of T).Execute(T)
      qualifiedName:
        CSharp: MinecaRTS.State<T>.Execute(T)
        VB: MinecaRTS.State(Of T).Execute(T)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/State.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Execute
        path: MinecaRTS/States/State.cs
        startLine: 12
      syntax:
        content:
          CSharp: public abstract void Execute(T owner)
          VB: Public MustOverride Sub Execute(owner As T)
        parameters:
        - id: owner
          type: '{T}'
      overload: MinecaRTS.State`1.Execute*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: MinecaRTS.State`1.HandleMessage(`0,MinecaRTS.Message)
      commentId: M:MinecaRTS.State`1.HandleMessage(`0,MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(T, Message)
        VB: HandleMessage(T, Message)
      nameWithType:
        CSharp: State<T>.HandleMessage(T, Message)
        VB: State(Of T).HandleMessage(T, Message)
      qualifiedName:
        CSharp: MinecaRTS.State<T>.HandleMessage(T, MinecaRTS.Message)
        VB: MinecaRTS.State(Of T).HandleMessage(T, MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/State.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/States/State.cs
        startLine: 13
      syntax:
        content:
          CSharp: public abstract void HandleMessage(T owner, Message message)
          VB: Public MustOverride Sub HandleMessage(owner As T, message As Message)
        parameters:
        - id: owner
          type: '{T}'
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.State`1.HandleMessage*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: MinecaRTS.StateMachine`1
    commentId: T:MinecaRTS.StateMachine`1
    language: CSharp
    name:
      CSharp: StateMachine<T>
      VB: StateMachine(Of T)
    nameWithType:
      CSharp: StateMachine<T>
      VB: StateMachine(Of T)
    qualifiedName:
      CSharp: MinecaRTS.StateMachine<T>
      VB: MinecaRTS.StateMachine(Of T)
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/States/StateMachine.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: StateMachine
      path: MinecaRTS/States/StateMachine.cs
      startLine: 8
    syntax:
      content:
        CSharp: public class StateMachine<T>
        VB: Public Class StateMachine(Of T)
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.StateMachine`1.CurrentState
      commentId: P:MinecaRTS.StateMachine`1.CurrentState
      language: CSharp
      name:
        CSharp: CurrentState
        VB: CurrentState
      nameWithType:
        CSharp: StateMachine<T>.CurrentState
        VB: StateMachine(Of T).CurrentState
      qualifiedName:
        CSharp: MinecaRTS.StateMachine<T>.CurrentState
        VB: MinecaRTS.StateMachine(Of T).CurrentState
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/StateMachine.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CurrentState
        path: MinecaRTS/States/StateMachine.cs
        startLine: 15
      syntax:
        content:
          CSharp: public State<T> CurrentState { get; }
          VB: Public ReadOnly Property CurrentState As State(Of T)
        parameters: []
        return:
          type: MinecaRTS.State{{T}}
      overload: MinecaRTS.StateMachine`1.CurrentState*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.StateMachine`1.#ctor(`0)
      commentId: M:MinecaRTS.StateMachine`1.#ctor(`0)
      language: CSharp
      name:
        CSharp: StateMachine(T)
        VB: StateMachine(T)
      nameWithType:
        CSharp: StateMachine<T>.StateMachine(T)
        VB: StateMachine(Of T).StateMachine(T)
      qualifiedName:
        CSharp: MinecaRTS.StateMachine<T>.StateMachine(T)
        VB: MinecaRTS.StateMachine(Of T).StateMachine(T)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/StateMachine.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/States/StateMachine.cs
        startLine: 20
      syntax:
        content:
          CSharp: public StateMachine(T owner)
          VB: Public Sub New(owner As T)
        parameters:
        - id: owner
          type: '{T}'
      overload: MinecaRTS.StateMachine`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.StateMachine`1.Execute
      commentId: M:MinecaRTS.StateMachine`1.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: StateMachine<T>.Execute()
        VB: StateMachine(Of T).Execute()
      qualifiedName:
        CSharp: MinecaRTS.StateMachine<T>.Execute()
        VB: MinecaRTS.StateMachine(Of T).Execute()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/StateMachine.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Execute
        path: MinecaRTS/States/StateMachine.cs
        startLine: 26
      syntax:
        content:
          CSharp: public void Execute()
          VB: Public Sub Execute
      overload: MinecaRTS.StateMachine`1.Execute*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.StateMachine`1.ChangeState(MinecaRTS.State{`0})
      commentId: M:MinecaRTS.StateMachine`1.ChangeState(MinecaRTS.State{`0})
      language: CSharp
      name:
        CSharp: ChangeState(State<T>)
        VB: ChangeState(State(Of T))
      nameWithType:
        CSharp: StateMachine<T>.ChangeState(State<T>)
        VB: StateMachine(Of T).ChangeState(State(Of T))
      qualifiedName:
        CSharp: MinecaRTS.StateMachine<T>.ChangeState(MinecaRTS.State<T>)
        VB: MinecaRTS.StateMachine(Of T).ChangeState(MinecaRTS.State(Of T))
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/StateMachine.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ChangeState
        path: MinecaRTS/States/StateMachine.cs
        startLine: 32
      syntax:
        content:
          CSharp: public void ChangeState(State<T> newState)
          VB: Public Sub ChangeState(newState As State(Of T))
        parameters:
        - id: newState
          type: MinecaRTS.State{{T}}
      overload: MinecaRTS.StateMachine`1.ChangeState*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.StateMachine`1.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.StateMachine`1.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: StateMachine<T>.HandleMessage(Message)
        VB: StateMachine(Of T).HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.StateMachine<T>.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.StateMachine(Of T).HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/States/StateMachine.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/States/StateMachine.cs
        startLine: 43
      syntax:
        content:
          CSharp: public void HandleMessage(Message message)
          VB: Public Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.StateMachine`1.HandleMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.SteeringBehaviours
    commentId: T:MinecaRTS.SteeringBehaviours
    language: CSharp
    name:
      CSharp: SteeringBehaviours
      VB: SteeringBehaviours
    nameWithType:
      CSharp: SteeringBehaviours
      VB: SteeringBehaviours
    qualifiedName:
      CSharp: MinecaRTS.SteeringBehaviours
      VB: MinecaRTS.SteeringBehaviours
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: SteeringBehaviours
      path: MinecaRTS/Pathing/SteeringBehaviours.cs
      startLine: 11
    syntax:
      content:
        CSharp: public class SteeringBehaviours
        VB: Public Class SteeringBehaviours
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.SteeringBehaviours.LOOK_AHEAD_DISTANCE
      commentId: F:MinecaRTS.SteeringBehaviours.LOOK_AHEAD_DISTANCE
      language: CSharp
      name:
        CSharp: LOOK_AHEAD_DISTANCE
        VB: LOOK_AHEAD_DISTANCE
      nameWithType:
        CSharp: SteeringBehaviours.LOOK_AHEAD_DISTANCE
        VB: SteeringBehaviours.LOOK_AHEAD_DISTANCE
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.LOOK_AHEAD_DISTANCE
        VB: MinecaRTS.SteeringBehaviours.LOOK_AHEAD_DISTANCE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: LOOK_AHEAD_DISTANCE
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 14
      syntax:
        content:
          CSharp: public static int LOOK_AHEAD_DISTANCE
          VB: Public Shared LOOK_AHEAD_DISTANCE As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.SteeringBehaviours.separationOn
      commentId: F:MinecaRTS.SteeringBehaviours.separationOn
      language: CSharp
      name:
        CSharp: separationOn
        VB: separationOn
      nameWithType:
        CSharp: SteeringBehaviours.separationOn
        VB: SteeringBehaviours.separationOn
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.separationOn
        VB: MinecaRTS.SteeringBehaviours.separationOn
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: separationOn
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 20
      syntax:
        content:
          CSharp: public bool separationOn
          VB: Public separationOn As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SteeringBehaviours.centreFeelerEnd
      commentId: F:MinecaRTS.SteeringBehaviours.centreFeelerEnd
      language: CSharp
      name:
        CSharp: centreFeelerEnd
        VB: centreFeelerEnd
      nameWithType:
        CSharp: SteeringBehaviours.centreFeelerEnd
        VB: SteeringBehaviours.centreFeelerEnd
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.centreFeelerEnd
        VB: MinecaRTS.SteeringBehaviours.centreFeelerEnd
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: centreFeelerEnd
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 24
      syntax:
        content:
          CSharp: public Vector2 centreFeelerEnd
          VB: Public centreFeelerEnd As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SteeringBehaviours.leftFeelerEnd
      commentId: F:MinecaRTS.SteeringBehaviours.leftFeelerEnd
      language: CSharp
      name:
        CSharp: leftFeelerEnd
        VB: leftFeelerEnd
      nameWithType:
        CSharp: SteeringBehaviours.leftFeelerEnd
        VB: SteeringBehaviours.leftFeelerEnd
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.leftFeelerEnd
        VB: MinecaRTS.SteeringBehaviours.leftFeelerEnd
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: leftFeelerEnd
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 24
      syntax:
        content:
          CSharp: public Vector2 leftFeelerEnd
          VB: Public leftFeelerEnd As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SteeringBehaviours.rightFeelerEnd
      commentId: F:MinecaRTS.SteeringBehaviours.rightFeelerEnd
      language: CSharp
      name:
        CSharp: rightFeelerEnd
        VB: rightFeelerEnd
      nameWithType:
        CSharp: SteeringBehaviours.rightFeelerEnd
        VB: SteeringBehaviours.rightFeelerEnd
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.rightFeelerEnd
        VB: MinecaRTS.SteeringBehaviours.rightFeelerEnd
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: rightFeelerEnd
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 24
      syntax:
        content:
          CSharp: public Vector2 rightFeelerEnd
          VB: Public rightFeelerEnd As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SteeringBehaviours.wallPushForce
      commentId: F:MinecaRTS.SteeringBehaviours.wallPushForce
      language: CSharp
      name:
        CSharp: wallPushForce
        VB: wallPushForce
      nameWithType:
        CSharp: SteeringBehaviours.wallPushForce
        VB: SteeringBehaviours.wallPushForce
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.wallPushForce
        VB: MinecaRTS.SteeringBehaviours.wallPushForce
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: wallPushForce
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 25
      syntax:
        content:
          CSharp: public Vector2 wallPushForce
          VB: Public wallPushForce As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SteeringBehaviours.closestUnpassableCellMid
      commentId: F:MinecaRTS.SteeringBehaviours.closestUnpassableCellMid
      language: CSharp
      name:
        CSharp: closestUnpassableCellMid
        VB: closestUnpassableCellMid
      nameWithType:
        CSharp: SteeringBehaviours.closestUnpassableCellMid
        VB: SteeringBehaviours.closestUnpassableCellMid
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.closestUnpassableCellMid
        VB: MinecaRTS.SteeringBehaviours.closestUnpassableCellMid
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: closestUnpassableCellMid
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 26
      syntax:
        content:
          CSharp: public Vector2 closestUnpassableCellMid
          VB: Public closestUnpassableCellMid As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SteeringBehaviours.#ctor(MinecaRTS.Unit,MinecaRTS.PlayerData)
      commentId: M:MinecaRTS.SteeringBehaviours.#ctor(MinecaRTS.Unit,MinecaRTS.PlayerData)
      language: CSharp
      name:
        CSharp: SteeringBehaviours(Unit, PlayerData)
        VB: SteeringBehaviours(Unit, PlayerData)
      nameWithType:
        CSharp: SteeringBehaviours.SteeringBehaviours(Unit, PlayerData)
        VB: SteeringBehaviours.SteeringBehaviours(Unit, PlayerData)
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.SteeringBehaviours(MinecaRTS.Unit, MinecaRTS.PlayerData)
        VB: MinecaRTS.SteeringBehaviours.SteeringBehaviours(MinecaRTS.Unit, MinecaRTS.PlayerData)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 28
      syntax:
        content:
          CSharp: public SteeringBehaviours(Unit owner, PlayerData data)
          VB: Public Sub New(owner As Unit, data As PlayerData)
        parameters:
        - id: owner
          type: MinecaRTS.Unit
        - id: data
          type: MinecaRTS.PlayerData
      overload: MinecaRTS.SteeringBehaviours.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SteeringBehaviours.Calculate
      commentId: M:MinecaRTS.SteeringBehaviours.Calculate
      language: CSharp
      name:
        CSharp: Calculate()
        VB: Calculate()
      nameWithType:
        CSharp: SteeringBehaviours.Calculate()
        VB: SteeringBehaviours.Calculate()
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.Calculate()
        VB: MinecaRTS.SteeringBehaviours.Calculate()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Calculate
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 38
      syntax:
        content:
          CSharp: public Vector2 Calculate()
          VB: Public Function Calculate As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.SteeringBehaviours.Calculate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SteeringBehaviours.Separation
      commentId: M:MinecaRTS.SteeringBehaviours.Separation
      language: CSharp
      name:
        CSharp: Separation()
        VB: Separation()
      nameWithType:
        CSharp: SteeringBehaviours.Separation()
        VB: SteeringBehaviours.Separation()
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.Separation()
        VB: MinecaRTS.SteeringBehaviours.Separation()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Separation
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 55
      syntax:
        content:
          CSharp: public Vector2 Separation()
          VB: Public Function Separation As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.SteeringBehaviours.Separation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SteeringBehaviours.UnpassableCellAvoidance
      commentId: M:MinecaRTS.SteeringBehaviours.UnpassableCellAvoidance
      language: CSharp
      name:
        CSharp: UnpassableCellAvoidance()
        VB: UnpassableCellAvoidance()
      nameWithType:
        CSharp: SteeringBehaviours.UnpassableCellAvoidance()
        VB: SteeringBehaviours.UnpassableCellAvoidance()
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.UnpassableCellAvoidance()
        VB: MinecaRTS.SteeringBehaviours.UnpassableCellAvoidance()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: UnpassableCellAvoidance
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 72
      syntax:
        content:
          CSharp: public Vector2 UnpassableCellAvoidance()
          VB: Public Function UnpassableCellAvoidance As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.SteeringBehaviours.UnpassableCellAvoidance*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SteeringBehaviours.ZeroOverlapCells
      commentId: M:MinecaRTS.SteeringBehaviours.ZeroOverlapCells
      language: CSharp
      name:
        CSharp: ZeroOverlapCells()
        VB: ZeroOverlapCells()
      nameWithType:
        CSharp: SteeringBehaviours.ZeroOverlapCells()
        VB: SteeringBehaviours.ZeroOverlapCells()
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.ZeroOverlapCells()
        VB: MinecaRTS.SteeringBehaviours.ZeroOverlapCells()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ZeroOverlapCells
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 164
      syntax:
        content:
          CSharp: public void ZeroOverlapCells()
          VB: Public Sub ZeroOverlapCells
      overload: MinecaRTS.SteeringBehaviours.ZeroOverlapCells*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.SteeringBehaviours.ZeroOverlapUnits
      commentId: M:MinecaRTS.SteeringBehaviours.ZeroOverlapUnits
      language: CSharp
      name:
        CSharp: ZeroOverlapUnits()
        VB: ZeroOverlapUnits()
      nameWithType:
        CSharp: SteeringBehaviours.ZeroOverlapUnits()
        VB: SteeringBehaviours.ZeroOverlapUnits()
      qualifiedName:
        CSharp: MinecaRTS.SteeringBehaviours.ZeroOverlapUnits()
        VB: MinecaRTS.SteeringBehaviours.ZeroOverlapUnits()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Pathing/SteeringBehaviours.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ZeroOverlapUnits
        path: MinecaRTS/Pathing/SteeringBehaviours.cs
        startLine: 195
      syntax:
        content:
          CSharp: public void ZeroOverlapUnits()
          VB: Public Sub ZeroOverlapUnits
      overload: MinecaRTS.SteeringBehaviours.ZeroOverlapUnits*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.Team
    commentId: T:MinecaRTS.Team
    language: CSharp
    name:
      CSharp: Team
      VB: Team
    nameWithType:
      CSharp: Team
      VB: Team
    qualifiedName:
      CSharp: MinecaRTS.Team
      VB: MinecaRTS.Team
    type: Enum
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Core/Team.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Team
      path: MinecaRTS/Core/Team.cs
      startLine: 8
    syntax:
      content:
        CSharp: public enum Team
        VB: Public Enum Team
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: MinecaRTS.Team.One
      commentId: F:MinecaRTS.Team.One
      language: CSharp
      name:
        CSharp: One
        VB: One
      nameWithType:
        CSharp: Team.One
        VB: Team.One
      qualifiedName:
        CSharp: MinecaRTS.Team.One
        VB: MinecaRTS.Team.One
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Team.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: One
        path: MinecaRTS/Core/Team.cs
        startLine: 10
      syntax:
        content:
          CSharp: One = 0
          VB: One = 0
        return:
          type: MinecaRTS.Team
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Team.Two
      commentId: F:MinecaRTS.Team.Two
      language: CSharp
      name:
        CSharp: Two
        VB: Two
      nameWithType:
        CSharp: Team.Two
        VB: Team.Two
      qualifiedName:
        CSharp: MinecaRTS.Team.Two
        VB: MinecaRTS.Team.Two
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/Team.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Two
        path: MinecaRTS/Core/Team.cs
        startLine: 11
      syntax:
        content:
          CSharp: Two = 1
          VB: Two = 1
        return:
          type: MinecaRTS.Team
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: MinecaRTS.TownHall
    commentId: T:MinecaRTS.TownHall
    language: CSharp
    name:
      CSharp: TownHall
      VB: TownHall
    nameWithType:
      CSharp: TownHall
      VB: TownHall
    qualifiedName:
      CSharp: MinecaRTS.TownHall
      VB: MinecaRTS.TownHall
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Buildings/TownHall.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: TownHall
      path: MinecaRTS/Entities/Buildings/TownHall.cs
      startLine: 11
    syntax:
      content:
        CSharp: 'public class TownHall : ProductionBuilding, IRenderable, IHandleMessages, ICanAcceptResources'
        VB: >-
          Public Class TownHall

              Inherits ProductionBuilding

              Implements IRenderable, IHandleMessages, ICanAcceptResources
    inheritance:
    - System.Object
    - MinecaRTS.Entity
    - MinecaRTS.Building
    - MinecaRTS.ProductionBuilding
    implements:
    - MinecaRTS.IRenderable
    - MinecaRTS.IHandleMessages
    - MinecaRTS.ICanAcceptResources
    inheritedMembers:
    - MinecaRTS.ProductionBuilding.MAX_HEALTH
    - MinecaRTS.ProductionBuilding.MAX_QUEUE_LENGTH
    - MinecaRTS.ProductionBuilding.productionTimes
    - MinecaRTS.ProductionBuilding.ProductionTypes
    - MinecaRTS.ProductionBuilding.rallyPoint
    - MinecaRTS.ProductionBuilding.Data
    - MinecaRTS.ProductionBuilding.BeingProduced
    - MinecaRTS.ProductionBuilding.ResetRallyPoint
    - MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex(System.Int32)
    - MinecaRTS.ProductionBuilding.Update
    - MinecaRTS.ProductionBuilding.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Building.ActiveTexture
    - MinecaRTS.Building.IsActive
    - MinecaRTS.Building.Team
    - MinecaRTS.Building.Construct
    - MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
    - MinecaRTS.Building.ExitState
    - MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Entity.Pos
    - MinecaRTS.Entity.Scale
    - MinecaRTS.Entity.ID
    - MinecaRTS.Entity.RenderPos
    - MinecaRTS.Entity.CollisionRect
    - MinecaRTS.Entity.RenderRect
    - MinecaRTS.Entity.Mid
    - MinecaRTS.Entity.RenderMid
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.TownHall.ACTIVE_TEXTURE
      commentId: F:MinecaRTS.TownHall.ACTIVE_TEXTURE
      language: CSharp
      name:
        CSharp: ACTIVE_TEXTURE
        VB: ACTIVE_TEXTURE
      nameWithType:
        CSharp: TownHall.ACTIVE_TEXTURE
        VB: TownHall.ACTIVE_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.TownHall.ACTIVE_TEXTURE
        VB: MinecaRTS.TownHall.ACTIVE_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/TownHall.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ACTIVE_TEXTURE
        path: MinecaRTS/Entities/Buildings/TownHall.cs
        startLine: 13
      syntax:
        content:
          CSharp: public static Texture2D ACTIVE_TEXTURE
          VB: Public Shared ACTIVE_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.TownHall.CONSTRUCTION_TEXTURE
      commentId: F:MinecaRTS.TownHall.CONSTRUCTION_TEXTURE
      language: CSharp
      name:
        CSharp: CONSTRUCTION_TEXTURE
        VB: CONSTRUCTION_TEXTURE
      nameWithType:
        CSharp: TownHall.CONSTRUCTION_TEXTURE
        VB: TownHall.CONSTRUCTION_TEXTURE
      qualifiedName:
        CSharp: MinecaRTS.TownHall.CONSTRUCTION_TEXTURE
        VB: MinecaRTS.TownHall.CONSTRUCTION_TEXTURE
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/TownHall.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CONSTRUCTION_TEXTURE
        path: MinecaRTS/Entities/Buildings/TownHall.cs
        startLine: 14
      syntax:
        content:
          CSharp: public static Texture2D CONSTRUCTION_TEXTURE
          VB: Public Shared CONSTRUCTION_TEXTURE As Texture2D
        return:
          type: Microsoft.Xna.Framework.Graphics.Texture2D
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.TownHall.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Collections.Generic.List{System.Type},MinecaRTS.PlayerData)
      commentId: M:MinecaRTS.TownHall.#ctor(Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2,System.Collections.Generic.List{System.Type},MinecaRTS.PlayerData)
      language: CSharp
      name:
        CSharp: TownHall(Vector2, Vector2, List<Type>, PlayerData)
        VB: TownHall(Vector2, Vector2, List(Of Type), PlayerData)
      nameWithType:
        CSharp: TownHall.TownHall(Vector2, Vector2, List<Type>, PlayerData)
        VB: TownHall.TownHall(Vector2, Vector2, List(Of Type), PlayerData)
      qualifiedName:
        CSharp: MinecaRTS.TownHall.TownHall(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, System.Collections.Generic.List<System.Type>, MinecaRTS.PlayerData)
        VB: MinecaRTS.TownHall.TownHall(Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2, System.Collections.Generic.List(Of System.Type), MinecaRTS.PlayerData)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/TownHall.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Entities/Buildings/TownHall.cs
        startLine: 16
      syntax:
        content:
          CSharp: public TownHall(Vector2 pos, Vector2 scale, List<Type> productionTypes, PlayerData data)
          VB: Public Sub New(pos As Vector2, scale As Vector2, productionTypes As List(Of Type), data As PlayerData)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: scale
          type: Microsoft.Xna.Framework.Vector2
        - id: productionTypes
          type: System.Collections.Generic.List{System.Type}
        - id: data
          type: MinecaRTS.PlayerData
      overload: MinecaRTS.TownHall.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.TownHall.AcceptResources(System.UInt32,System.UInt32)
      commentId: M:MinecaRTS.TownHall.AcceptResources(System.UInt32,System.UInt32)
      language: CSharp
      name:
        CSharp: AcceptResources(UInt32, UInt32)
        VB: AcceptResources(UInt32, UInt32)
      nameWithType:
        CSharp: TownHall.AcceptResources(UInt32, UInt32)
        VB: TownHall.AcceptResources(UInt32, UInt32)
      qualifiedName:
        CSharp: MinecaRTS.TownHall.AcceptResources(System.UInt32, System.UInt32)
        VB: MinecaRTS.TownHall.AcceptResources(System.UInt32, System.UInt32)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Buildings/TownHall.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AcceptResources
        path: MinecaRTS/Entities/Buildings/TownHall.cs
        startLine: 19
      syntax:
        content:
          CSharp: public void AcceptResources(uint woodAmount, uint stoneAmount)
          VB: Public Sub AcceptResources(woodAmount As UInteger, stoneAmount As UInteger)
        parameters:
        - id: woodAmount
          type: System.UInt32
        - id: stoneAmount
          type: System.UInt32
      overload: MinecaRTS.TownHall.AcceptResources*
      implements:
      - MinecaRTS.ICanAcceptResources.AcceptResources(System.UInt32,System.UInt32)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.Unit
    commentId: T:MinecaRTS.Unit
    language: CSharp
    name:
      CSharp: Unit
      VB: Unit
    nameWithType:
      CSharp: Unit
      VB: Unit
    qualifiedName:
      CSharp: MinecaRTS.Unit
      VB: MinecaRTS.Unit
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Units/Unit.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Unit
      path: MinecaRTS/Entities/Units/Unit.cs
      startLine: 15
    summary: "\nExtends Entity with velocity, path following and goal planning / execution capabilities.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Unit : Entity, IRenderable, IHandleMessages'
        VB: >-
          Public Class Unit

              Inherits Entity

              Implements IRenderable, IHandleMessages
    inheritance:
    - System.Object
    - MinecaRTS.Entity
    implements:
    - MinecaRTS.IRenderable
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.Entity.Pos
    - MinecaRTS.Entity.Scale
    - MinecaRTS.Entity.ID
    - MinecaRTS.Entity.RenderPos
    - MinecaRTS.Entity.CollisionRect
    - MinecaRTS.Entity.RenderRect
    - MinecaRTS.Entity.Mid
    - MinecaRTS.Entity.RenderMid
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Unit.NEIGHBOUR_RADIUS
      commentId: F:MinecaRTS.Unit.NEIGHBOUR_RADIUS
      language: CSharp
      name:
        CSharp: NEIGHBOUR_RADIUS
        VB: NEIGHBOUR_RADIUS
      nameWithType:
        CSharp: Unit.NEIGHBOUR_RADIUS
        VB: Unit.NEIGHBOUR_RADIUS
      qualifiedName:
        CSharp: MinecaRTS.Unit.NEIGHBOUR_RADIUS
        VB: MinecaRTS.Unit.NEIGHBOUR_RADIUS
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: NEIGHBOUR_RADIUS
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 17
      syntax:
        content:
          CSharp: public static float NEIGHBOUR_RADIUS
          VB: Public Shared NEIGHBOUR_RADIUS As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Unit.lastHeading
      commentId: F:MinecaRTS.Unit.lastHeading
      language: CSharp
      name:
        CSharp: lastHeading
        VB: lastHeading
      nameWithType:
        CSharp: Unit.lastHeading
        VB: Unit.lastHeading
      qualifiedName:
        CSharp: MinecaRTS.Unit.lastHeading
        VB: MinecaRTS.Unit.lastHeading
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: lastHeading
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 19
      syntax:
        content:
          CSharp: protected Dir lastHeading
          VB: Protected lastHeading As Dir
        return:
          type: MinecaRTS.Dir
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.Unit.heading
      commentId: F:MinecaRTS.Unit.heading
      language: CSharp
      name:
        CSharp: heading
        VB: heading
      nameWithType:
        CSharp: Unit.heading
        VB: Unit.heading
      qualifiedName:
        CSharp: MinecaRTS.Unit.heading
        VB: MinecaRTS.Unit.heading
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: heading
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 20
      syntax:
        content:
          CSharp: protected Dir heading
          VB: Protected heading As Dir
        return:
          type: MinecaRTS.Dir
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: MinecaRTS.Unit.Speed
      commentId: P:MinecaRTS.Unit.Speed
      language: CSharp
      name:
        CSharp: Speed
        VB: Speed
      nameWithType:
        CSharp: Unit.Speed
        VB: Unit.Speed
      qualifiedName:
        CSharp: MinecaRTS.Unit.Speed
        VB: MinecaRTS.Unit.Speed
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Speed
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 24
      syntax:
        content:
          CSharp: public float Speed { get; set; }
          VB: Public Property Speed As Single
        parameters: []
        return:
          type: System.Single
      overload: MinecaRTS.Unit.Speed*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MinecaRTS.Unit.Team
      commentId: P:MinecaRTS.Unit.Team
      language: CSharp
      name:
        CSharp: Team
        VB: Team
      nameWithType:
        CSharp: Unit.Team
        VB: Unit.Team
      qualifiedName:
        CSharp: MinecaRTS.Unit.Team
        VB: MinecaRTS.Unit.Team
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Team
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 26
      syntax:
        content:
          CSharp: public Team Team { get; }
          VB: Public ReadOnly Property Team As Team
        parameters: []
        return:
          type: MinecaRTS.Team
      overload: MinecaRTS.Unit.Team*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Unit.Vel
      commentId: F:MinecaRTS.Unit.Vel
      language: CSharp
      name:
        CSharp: Vel
        VB: Vel
      nameWithType:
        CSharp: Unit.Vel
        VB: Unit.Vel
      qualifiedName:
        CSharp: MinecaRTS.Unit.Vel
        VB: MinecaRTS.Unit.Vel
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Vel
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 34
      summary: "\nCurrent velocity of the unit.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 Vel
          VB: Public Vel As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Unit.pathHandler
      commentId: F:MinecaRTS.Unit.pathHandler
      language: CSharp
      name:
        CSharp: pathHandler
        VB: pathHandler
      nameWithType:
        CSharp: Unit.pathHandler
        VB: Unit.pathHandler
      qualifiedName:
        CSharp: MinecaRTS.Unit.pathHandler
        VB: MinecaRTS.Unit.pathHandler
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: pathHandler
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 39
      summary: "\nPath finding component. Requests paths from Pathfinder and handles unit movement along path.\n"
      example: []
      syntax:
        content:
          CSharp: public PathHandler pathHandler
          VB: Public pathHandler As PathHandler
        return:
          type: MinecaRTS.PathHandler
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Unit.lastMid
      commentId: F:MinecaRTS.Unit.lastMid
      language: CSharp
      name:
        CSharp: lastMid
        VB: lastMid
      nameWithType:
        CSharp: Unit.lastMid
        VB: Unit.lastMid
      qualifiedName:
        CSharp: MinecaRTS.Unit.lastMid
        VB: MinecaRTS.Unit.lastMid
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: lastMid
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 43
      syntax:
        content:
          CSharp: public Vector2 lastMid
          VB: Public lastMid As Vector2
        return:
          type: Microsoft.Xna.Framework.Vector2
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Unit.Data
      commentId: P:MinecaRTS.Unit.Data
      language: CSharp
      name:
        CSharp: Data
        VB: Data
      nameWithType:
        CSharp: Unit.Data
        VB: Unit.Data
      qualifiedName:
        CSharp: MinecaRTS.Unit.Data
        VB: MinecaRTS.Unit.Data
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Data
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 45
      syntax:
        content:
          CSharp: public PlayerData Data { get; }
          VB: Public ReadOnly Property Data As PlayerData
        parameters: []
        return:
          type: MinecaRTS.PlayerData
      overload: MinecaRTS.Unit.Data*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Unit.Steering
      commentId: P:MinecaRTS.Unit.Steering
      language: CSharp
      name:
        CSharp: Steering
        VB: Steering
      nameWithType:
        CSharp: Unit.Steering
        VB: Unit.Steering
      qualifiedName:
        CSharp: MinecaRTS.Unit.Steering
        VB: MinecaRTS.Unit.Steering
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Steering
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 52
      syntax:
        content:
          CSharp: public SteeringBehaviours Steering { get; }
          VB: Public ReadOnly Property Steering As SteeringBehaviours
        parameters: []
        return:
          type: MinecaRTS.SteeringBehaviours
      overload: MinecaRTS.Unit.Steering*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Unit.animation
      commentId: F:MinecaRTS.Unit.animation
      language: CSharp
      name:
        CSharp: animation
        VB: animation
      nameWithType:
        CSharp: Unit.animation
        VB: Unit.animation
      qualifiedName:
        CSharp: MinecaRTS.Unit.animation
        VB: MinecaRTS.Unit.animation
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: animation
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 57
      syntax:
        content:
          CSharp: public Animation animation
          VB: Public animation As Animation
        return:
          type: MinecaRTS.Animation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Unit.FollowPath
      commentId: P:MinecaRTS.Unit.FollowPath
      language: CSharp
      name:
        CSharp: FollowPath
        VB: FollowPath
      nameWithType:
        CSharp: Unit.FollowPath
        VB: Unit.FollowPath
      qualifiedName:
        CSharp: MinecaRTS.Unit.FollowPath
        VB: MinecaRTS.Unit.FollowPath
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: FollowPath
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 62
      summary: "\nSpecifies if the unit's PathHandler should update.\n"
      example: []
      syntax:
        content:
          CSharp: public bool FollowPath { get; set; }
          VB: Public Property FollowPath As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: MinecaRTS.Unit.FollowPath*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: MinecaRTS.Unit.#ctor(MinecaRTS.PlayerData,MinecaRTS.Team,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Unit.#ctor(MinecaRTS.PlayerData,MinecaRTS.Team,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: Unit(PlayerData, Team, Vector2, Vector2)
        VB: Unit(PlayerData, Team, Vector2, Vector2)
      nameWithType:
        CSharp: Unit.Unit(PlayerData, Team, Vector2, Vector2)
        VB: Unit.Unit(PlayerData, Team, Vector2, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Unit.Unit(MinecaRTS.PlayerData, MinecaRTS.Team, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Unit.Unit(MinecaRTS.PlayerData, MinecaRTS.Team, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 64
      syntax:
        content:
          CSharp: public Unit(PlayerData data, Team team, Vector2 pos, Vector2 scale)
          VB: Public Sub New(data As PlayerData, team As Team, pos As Vector2, scale As Vector2)
        parameters:
        - id: data
          type: MinecaRTS.PlayerData
        - id: team
          type: MinecaRTS.Team
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: scale
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Unit.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Unit.Update
      commentId: M:MinecaRTS.Unit.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Unit.Update()
        VB: Unit.Update()
      qualifiedName:
        CSharp: MinecaRTS.Unit.Update()
        VB: MinecaRTS.Unit.Update()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 78
      summary: "\nCalled once per frame, handles all relevant updating methods including PathHandler.\n"
      example: []
      syntax:
        content:
          CSharp: public override void Update()
          VB: Public Overrides Sub Update
      overload: MinecaRTS.Unit.Update*
      overridden: MinecaRTS.Entity.Update
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Unit.Stop
      commentId: M:MinecaRTS.Unit.Stop
      language: CSharp
      name:
        CSharp: Stop()
        VB: Stop()
      nameWithType:
        CSharp: Unit.Stop()
        VB: Unit.Stop()
      qualifiedName:
        CSharp: MinecaRTS.Unit.Stop()
        VB: MinecaRTS.Unit.Stop()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Stop
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 115
      syntax:
        content:
          CSharp: public virtual void Stop()
          VB: Public Overridable Sub Stop
      overload: MinecaRTS.Unit.Stop*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: MinecaRTS.Unit.MoveTowards(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Unit.MoveTowards(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: MoveTowards(Vector2)
        VB: MoveTowards(Vector2)
      nameWithType:
        CSharp: Unit.MoveTowards(Vector2)
        VB: Unit.MoveTowards(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Unit.MoveTowards(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Unit.MoveTowards(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MoveTowards
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 122
      syntax:
        content:
          CSharp: public virtual void MoveTowards(Vector2 pos)
          VB: Public Overridable Sub MoveTowards(pos As Vector2)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Unit.MoveTowards*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: MinecaRTS.Unit.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Unit.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: Unit.Render(SpriteBatch)
        VB: Unit.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Unit.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Unit.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 133
      syntax:
        content:
          CSharp: public override void Render(SpriteBatch spriteBatch)
          VB: Public Overrides Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Unit.Render*
      overridden: MinecaRTS.Entity.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Unit.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.Unit.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: Unit.HandleMessage(Message)
        VB: Unit.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.Unit.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.Unit.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 138
      syntax:
        content:
          CSharp: public override void HandleMessage(Message message)
          VB: Public Overrides Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.Unit.HandleMessage*
      overridden: MinecaRTS.Entity.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Unit.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Unit.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderDebug(SpriteBatch)
        VB: RenderDebug(SpriteBatch)
      nameWithType:
        CSharp: Unit.RenderDebug(SpriteBatch)
        VB: Unit.RenderDebug(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Unit.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Unit.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderDebug
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 143
      syntax:
        content:
          CSharp: public override void RenderDebug(SpriteBatch spriteBatch)
          VB: Public Overrides Sub RenderDebug(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Unit.RenderDebug*
      overridden: MinecaRTS.Entity.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Unit.ExitState
      commentId: M:MinecaRTS.Unit.ExitState
      language: CSharp
      name:
        CSharp: ExitState()
        VB: ExitState()
      nameWithType:
        CSharp: Unit.ExitState()
        VB: Unit.ExitState()
      qualifiedName:
        CSharp: MinecaRTS.Unit.ExitState()
        VB: MinecaRTS.Unit.ExitState()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Unit.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ExitState
        path: MinecaRTS/Entities/Units/Unit.cs
        startLine: 149
      syntax:
        content:
          CSharp: public override void ExitState()
          VB: Public Overrides Sub ExitState
      overload: MinecaRTS.Unit.ExitState*
      overridden: MinecaRTS.Entity.ExitState
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: MinecaRTS.Utils
    commentId: T:MinecaRTS.Utils
    language: CSharp
    name:
      CSharp: Utils
      VB: Utils
    nameWithType:
      CSharp: Utils
      VB: Utils
    qualifiedName:
      CSharp: MinecaRTS.Utils
      VB: MinecaRTS.Utils
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Utils/Utils.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Utils
      path: MinecaRTS/Utils/Utils.cs
      startLine: 9
    syntax:
      content:
        CSharp: public static class Utils
        VB: Public Module Utils
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: MinecaRTS.Utils.Swap(System.Single@,System.Single@)
      commentId: M:MinecaRTS.Utils.Swap(System.Single@,System.Single@)
      language: CSharp
      name:
        CSharp: Swap(ref Single, ref Single)
        VB: Swap(ByRef Single, ByRef Single)
      nameWithType:
        CSharp: Utils.Swap(ref Single, ref Single)
        VB: Utils.Swap(ByRef Single, ByRef Single)
      qualifiedName:
        CSharp: MinecaRTS.Utils.Swap(ref System.Single, ref System.Single)
        VB: MinecaRTS.Utils.Swap(ByRef System.Single, ByRef System.Single)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Utils.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Swap
        path: MinecaRTS/Utils/Utils.cs
        startLine: 11
      syntax:
        content:
          CSharp: public static void Swap(ref float first, ref float second)
          VB: Public Shared Sub Swap(ByRef first As Single, ByRef second As Single)
        parameters:
        - id: first
          type: System.Single
        - id: second
          type: System.Single
      overload: MinecaRTS.Utils.Swap*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Utils.VectorToDir(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Utils.VectorToDir(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: VectorToDir(Vector2)
        VB: VectorToDir(Vector2)
      nameWithType:
        CSharp: Utils.VectorToDir(Vector2)
        VB: Utils.VectorToDir(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Utils.VectorToDir(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Utils.VectorToDir(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Utils/Utils.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: VectorToDir
        path: MinecaRTS/Utils/Utils.cs
        startLine: 18
      syntax:
        content:
          CSharp: public static Dir VectorToDir(Vector2 v)
          VB: Public Shared Function VectorToDir(v As Vector2) As Dir
        parameters:
        - id: v
          type: Microsoft.Xna.Framework.Vector2
        return:
          type: MinecaRTS.Dir
      overload: MinecaRTS.Utils.VectorToDir*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: MinecaRTS.WkrAnim
    commentId: T:MinecaRTS.WkrAnim
    language: CSharp
    name:
      CSharp: WkrAnim
      VB: WkrAnim
    nameWithType:
      CSharp: WkrAnim
      VB: WkrAnim
    qualifiedName:
      CSharp: MinecaRTS.WkrAnim
      VB: MinecaRTS.WkrAnim
    type: Enum
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Units/Worker.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: WkrAnim
      path: MinecaRTS/Entities/Units/Worker.cs
      startLine: 13
    syntax:
      content:
        CSharp: public enum WkrAnim
        VB: Public Enum WkrAnim
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: MinecaRTS.WkrAnim.Walk
      commentId: F:MinecaRTS.WkrAnim.Walk
      language: CSharp
      name:
        CSharp: Walk
        VB: Walk
      nameWithType:
        CSharp: WkrAnim.Walk
        VB: WkrAnim.Walk
      qualifiedName:
        CSharp: MinecaRTS.WkrAnim.Walk
        VB: MinecaRTS.WkrAnim.Walk
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Walk
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 15
      syntax:
        content:
          CSharp: Walk = 0
          VB: Walk = 0
        return:
          type: MinecaRTS.WkrAnim
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.WkrAnim.Chop
      commentId: F:MinecaRTS.WkrAnim.Chop
      language: CSharp
      name:
        CSharp: Chop
        VB: Chop
      nameWithType:
        CSharp: WkrAnim.Chop
        VB: WkrAnim.Chop
      qualifiedName:
        CSharp: MinecaRTS.WkrAnim.Chop
        VB: MinecaRTS.WkrAnim.Chop
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Chop
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 16
      syntax:
        content:
          CSharp: Chop = 1
          VB: Chop = 1
        return:
          type: MinecaRTS.WkrAnim
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.WkrAnim.Logs
      commentId: F:MinecaRTS.WkrAnim.Logs
      language: CSharp
      name:
        CSharp: Logs
        VB: Logs
      nameWithType:
        CSharp: WkrAnim.Logs
        VB: WkrAnim.Logs
      qualifiedName:
        CSharp: MinecaRTS.WkrAnim.Logs
        VB: MinecaRTS.WkrAnim.Logs
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Logs
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 17
      syntax:
        content:
          CSharp: Logs = 2
          VB: Logs = 2
        return:
          type: MinecaRTS.WkrAnim
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.WkrAnim.Mine
      commentId: F:MinecaRTS.WkrAnim.Mine
      language: CSharp
      name:
        CSharp: Mine
        VB: Mine
      nameWithType:
        CSharp: WkrAnim.Mine
        VB: WkrAnim.Mine
      qualifiedName:
        CSharp: MinecaRTS.WkrAnim.Mine
        VB: MinecaRTS.WkrAnim.Mine
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Mine
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 18
      syntax:
        content:
          CSharp: Mine = 3
          VB: Mine = 3
        return:
          type: MinecaRTS.WkrAnim
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.WkrAnim.Bag
      commentId: F:MinecaRTS.WkrAnim.Bag
      language: CSharp
      name:
        CSharp: Bag
        VB: Bag
      nameWithType:
        CSharp: WkrAnim.Bag
        VB: WkrAnim.Bag
      qualifiedName:
        CSharp: MinecaRTS.WkrAnim.Bag
        VB: MinecaRTS.WkrAnim.Bag
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Bag
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 19
      syntax:
        content:
          CSharp: Bag = 4
          VB: Bag = 4
        return:
          type: MinecaRTS.WkrAnim
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.WkrAnim.Build
      commentId: F:MinecaRTS.WkrAnim.Build
      language: CSharp
      name:
        CSharp: Build
        VB: Build
      nameWithType:
        CSharp: WkrAnim.Build
        VB: WkrAnim.Build
      qualifiedName:
        CSharp: MinecaRTS.WkrAnim.Build
        VB: MinecaRTS.WkrAnim.Build
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Build
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 20
      syntax:
        content:
          CSharp: Build = 5
          VB: Build = 5
        return:
          type: MinecaRTS.WkrAnim
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: MinecaRTS.Worker
    commentId: T:MinecaRTS.Worker
    language: CSharp
    name:
      CSharp: Worker
      VB: Worker
    nameWithType:
      CSharp: Worker
      VB: Worker
    qualifiedName:
      CSharp: MinecaRTS.Worker
      VB: MinecaRTS.Worker
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Entities/Units/Worker.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: Worker
      path: MinecaRTS/Entities/Units/Worker.cs
      startLine: 23
    syntax:
      content:
        CSharp: 'public class Worker : Unit, IRenderable, IHandleMessages'
        VB: >-
          Public Class Worker

              Inherits Unit

              Implements IRenderable, IHandleMessages
    inheritance:
    - System.Object
    - MinecaRTS.Entity
    - MinecaRTS.Unit
    implements:
    - MinecaRTS.IRenderable
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - MinecaRTS.Unit.NEIGHBOUR_RADIUS
    - MinecaRTS.Unit.lastHeading
    - MinecaRTS.Unit.heading
    - MinecaRTS.Unit.Speed
    - MinecaRTS.Unit.Team
    - MinecaRTS.Unit.Vel
    - MinecaRTS.Unit.pathHandler
    - MinecaRTS.Unit.lastMid
    - MinecaRTS.Unit.Data
    - MinecaRTS.Unit.Steering
    - MinecaRTS.Unit.animation
    - MinecaRTS.Unit.FollowPath
    - MinecaRTS.Unit.Stop
    - MinecaRTS.Unit.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
    - MinecaRTS.Entity.Pos
    - MinecaRTS.Entity.Scale
    - MinecaRTS.Entity.ID
    - MinecaRTS.Entity.RenderPos
    - MinecaRTS.Entity.CollisionRect
    - MinecaRTS.Entity.RenderRect
    - MinecaRTS.Entity.Mid
    - MinecaRTS.Entity.RenderMid
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.Worker.spriteSheets
      commentId: F:MinecaRTS.Worker.spriteSheets
      language: CSharp
      name:
        CSharp: spriteSheets
        VB: spriteSheets
      nameWithType:
        CSharp: Worker.spriteSheets
        VB: Worker.spriteSheets
      qualifiedName:
        CSharp: MinecaRTS.Worker.spriteSheets
        VB: MinecaRTS.Worker.spriteSheets
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: spriteSheets
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 25
      syntax:
        content:
          CSharp: public static Dictionary<WkrAnim, SpriteSheet> spriteSheets
          VB: Public Shared spriteSheets As Dictionary(Of WkrAnim, SpriteSheet)
        return:
          type: System.Collections.Generic.Dictionary{MinecaRTS.WkrAnim,MinecaRTS.SpriteSheet}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Worker.animFrames
      commentId: F:MinecaRTS.Worker.animFrames
      language: CSharp
      name:
        CSharp: animFrames
        VB: animFrames
      nameWithType:
        CSharp: Worker.animFrames
        VB: Worker.animFrames
      qualifiedName:
        CSharp: MinecaRTS.Worker.animFrames
        VB: MinecaRTS.Worker.animFrames
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: animFrames
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 26
      syntax:
        content:
          CSharp: public static Dictionary<WkrAnim, Dictionary<Dir, List<Frame>>> animFrames
          VB: Public Shared animFrames As Dictionary(Of WkrAnim, Dictionary(Of Dir, List(Of Frame)))
        return:
          type: System.Collections.Generic.Dictionary{MinecaRTS.WkrAnim,System.Collections.Generic.Dictionary{MinecaRTS.Dir,System.Collections.Generic.List{MinecaRTS.Frame}}}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Worker.animOffsets
      commentId: F:MinecaRTS.Worker.animOffsets
      language: CSharp
      name:
        CSharp: animOffsets
        VB: animOffsets
      nameWithType:
        CSharp: Worker.animOffsets
        VB: Worker.animOffsets
      qualifiedName:
        CSharp: MinecaRTS.Worker.animOffsets
        VB: MinecaRTS.Worker.animOffsets
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: animOffsets
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 27
      syntax:
        content:
          CSharp: public static Dictionary<WkrAnim, Vector2> animOffsets
          VB: Public Shared animOffsets As Dictionary(Of WkrAnim, Vector2)
        return:
          type: System.Collections.Generic.Dictionary{MinecaRTS.WkrAnim,Microsoft.Xna.Framework.Vector2}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.Worker.BASE_SPEED
      commentId: F:MinecaRTS.Worker.BASE_SPEED
      language: CSharp
      name:
        CSharp: BASE_SPEED
        VB: BASE_SPEED
      nameWithType:
        CSharp: Worker.BASE_SPEED
        VB: Worker.BASE_SPEED
      qualifiedName:
        CSharp: MinecaRTS.Worker.BASE_SPEED
        VB: MinecaRTS.Worker.BASE_SPEED
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: BASE_SPEED
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 29
      syntax:
        content:
          CSharp: public const float BASE_SPEED = 2F
          VB: Public Const BASE_SPEED As Single = 2F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.Worker.returningResourcesTo
      commentId: F:MinecaRTS.Worker.returningResourcesTo
      language: CSharp
      name:
        CSharp: returningResourcesTo
        VB: returningResourcesTo
      nameWithType:
        CSharp: Worker.returningResourcesTo
        VB: Worker.returningResourcesTo
      qualifiedName:
        CSharp: MinecaRTS.Worker.returningResourcesTo
        VB: MinecaRTS.Worker.returningResourcesTo
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: returningResourcesTo
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 31
      syntax:
        content:
          CSharp: public ICanAcceptResources returningResourcesTo
          VB: Public returningResourcesTo As ICanAcceptResources
        return:
          type: MinecaRTS.ICanAcceptResources
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Worker.targetResourceCell
      commentId: F:MinecaRTS.Worker.targetResourceCell
      language: CSharp
      name:
        CSharp: targetResourceCell
        VB: targetResourceCell
      nameWithType:
        CSharp: Worker.targetResourceCell
        VB: Worker.targetResourceCell
      qualifiedName:
        CSharp: MinecaRTS.Worker.targetResourceCell
        VB: MinecaRTS.Worker.targetResourceCell
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: targetResourceCell
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 32
      syntax:
        content:
          CSharp: public Cell targetResourceCell
          VB: Public targetResourceCell As Cell
        return:
          type: MinecaRTS.Cell
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Worker.constructing
      commentId: F:MinecaRTS.Worker.constructing
      language: CSharp
      name:
        CSharp: constructing
        VB: constructing
      nameWithType:
        CSharp: Worker.constructing
        VB: Worker.constructing
      qualifiedName:
        CSharp: MinecaRTS.Worker.constructing
        VB: MinecaRTS.Worker.constructing
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: constructing
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 33
      syntax:
        content:
          CSharp: public Building constructing
          VB: Public constructing As Building
        return:
          type: MinecaRTS.Building
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Worker.resrcLookingFor
      commentId: F:MinecaRTS.Worker.resrcLookingFor
      language: CSharp
      name:
        CSharp: resrcLookingFor
        VB: resrcLookingFor
      nameWithType:
        CSharp: Worker.resrcLookingFor
        VB: Worker.resrcLookingFor
      qualifiedName:
        CSharp: MinecaRTS.Worker.resrcLookingFor
        VB: MinecaRTS.Worker.resrcLookingFor
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: resrcLookingFor
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 35
      syntax:
        content:
          CSharp: public ResourceType resrcLookingFor
          VB: Public resrcLookingFor As ResourceType
        return:
          type: MinecaRTS.ResourceType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Worker.currentAnim
      commentId: F:MinecaRTS.Worker.currentAnim
      language: CSharp
      name:
        CSharp: currentAnim
        VB: currentAnim
      nameWithType:
        CSharp: Worker.currentAnim
        VB: Worker.currentAnim
      qualifiedName:
        CSharp: MinecaRTS.Worker.currentAnim
        VB: MinecaRTS.Worker.currentAnim
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: currentAnim
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 37
      syntax:
        content:
          CSharp: public WkrAnim currentAnim
          VB: Public currentAnim As WkrAnim
        return:
          type: MinecaRTS.WkrAnim
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Worker.resrcHolding
      commentId: F:MinecaRTS.Worker.resrcHolding
      language: CSharp
      name:
        CSharp: resrcHolding
        VB: resrcHolding
      nameWithType:
        CSharp: Worker.resrcHolding
        VB: Worker.resrcHolding
      qualifiedName:
        CSharp: MinecaRTS.Worker.resrcHolding
        VB: MinecaRTS.Worker.resrcHolding
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: resrcHolding
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 39
      syntax:
        content:
          CSharp: public ResourceType resrcHolding
          VB: Public resrcHolding As ResourceType
        return:
          type: MinecaRTS.ResourceType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Worker.timeSpentHarvesting
      commentId: F:MinecaRTS.Worker.timeSpentHarvesting
      language: CSharp
      name:
        CSharp: timeSpentHarvesting
        VB: timeSpentHarvesting
      nameWithType:
        CSharp: Worker.timeSpentHarvesting
        VB: Worker.timeSpentHarvesting
      qualifiedName:
        CSharp: MinecaRTS.Worker.timeSpentHarvesting
        VB: MinecaRTS.Worker.timeSpentHarvesting
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: timeSpentHarvesting
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 41
      syntax:
        content:
          CSharp: public uint timeSpentHarvesting
          VB: Public timeSpentHarvesting As UInteger
        return:
          type: System.UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Worker.FSM
      commentId: P:MinecaRTS.Worker.FSM
      language: CSharp
      name:
        CSharp: FSM
        VB: FSM
      nameWithType:
        CSharp: Worker.FSM
        VB: Worker.FSM
      qualifiedName:
        CSharp: MinecaRTS.Worker.FSM
        VB: MinecaRTS.Worker.FSM
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: FSM
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 45
      syntax:
        content:
          CSharp: public StateMachine<Worker> FSM { get; }
          VB: Public ReadOnly Property FSM As StateMachine(Of Worker)
        parameters: []
        return:
          type: MinecaRTS.StateMachine{MinecaRTS.Worker}
      overload: MinecaRTS.Worker.FSM*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Worker.TargetResource
      commentId: P:MinecaRTS.Worker.TargetResource
      language: CSharp
      name:
        CSharp: TargetResource
        VB: TargetResource
      nameWithType:
        CSharp: Worker.TargetResource
        VB: Worker.TargetResource
      qualifiedName:
        CSharp: MinecaRTS.Worker.TargetResource
        VB: MinecaRTS.Worker.TargetResource
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TargetResource
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 50
      syntax:
        content:
          CSharp: public Resource TargetResource { get; }
          VB: Public ReadOnly Property TargetResource As Resource
        parameters: []
        return:
          type: MinecaRTS.Resource
      overload: MinecaRTS.Worker.TargetResource*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.Worker.#ctor(MinecaRTS.PlayerData,MinecaRTS.Team,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Worker.#ctor(MinecaRTS.PlayerData,MinecaRTS.Team,Microsoft.Xna.Framework.Vector2,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: Worker(PlayerData, Team, Vector2, Vector2)
        VB: Worker(PlayerData, Team, Vector2, Vector2)
      nameWithType:
        CSharp: Worker.Worker(PlayerData, Team, Vector2, Vector2)
        VB: Worker.Worker(PlayerData, Team, Vector2, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Worker.Worker(MinecaRTS.PlayerData, MinecaRTS.Team, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Worker.Worker(MinecaRTS.PlayerData, MinecaRTS.Team, Microsoft.Xna.Framework.Vector2, Microsoft.Xna.Framework.Vector2)
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 55
      syntax:
        content:
          CSharp: public Worker(PlayerData data, Team team, Vector2 pos, Vector2 scale)
          VB: Public Sub New(data As PlayerData, team As Team, pos As Vector2, scale As Vector2)
        parameters:
        - id: data
          type: MinecaRTS.PlayerData
        - id: team
          type: MinecaRTS.Team
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: scale
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Worker.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Worker.DepositResources
      commentId: M:MinecaRTS.Worker.DepositResources
      language: CSharp
      name:
        CSharp: DepositResources()
        VB: DepositResources()
      nameWithType:
        CSharp: Worker.DepositResources()
        VB: Worker.DepositResources()
      qualifiedName:
        CSharp: MinecaRTS.Worker.DepositResources()
        VB: MinecaRTS.Worker.DepositResources()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: DepositResources
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 63
      syntax:
        content:
          CSharp: public void DepositResources()
          VB: Public Sub DepositResources
      overload: MinecaRTS.Worker.DepositResources*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Worker.Update
      commentId: M:MinecaRTS.Worker.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Worker.Update()
        VB: Worker.Update()
      qualifiedName:
        CSharp: MinecaRTS.Worker.Update()
        VB: MinecaRTS.Worker.Update()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 73
      syntax:
        content:
          CSharp: public override void Update()
          VB: Public Overrides Sub Update
      overload: MinecaRTS.Worker.Update*
      overridden: MinecaRTS.Unit.Update
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Worker.MoveTowards(Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.Worker.MoveTowards(Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: MoveTowards(Vector2)
        VB: MoveTowards(Vector2)
      nameWithType:
        CSharp: Worker.MoveTowards(Vector2)
        VB: Worker.MoveTowards(Vector2)
      qualifiedName:
        CSharp: MinecaRTS.Worker.MoveTowards(Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.Worker.MoveTowards(Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MoveTowards
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 88
      syntax:
        content:
          CSharp: public override void MoveTowards(Vector2 pos)
          VB: Public Overrides Sub MoveTowards(pos As Vector2)
        parameters:
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.Worker.MoveTowards*
      overridden: MinecaRTS.Unit.MoveTowards(Microsoft.Xna.Framework.Vector2)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Worker.GoConstructBuilding(MinecaRTS.Building)
      commentId: M:MinecaRTS.Worker.GoConstructBuilding(MinecaRTS.Building)
      language: CSharp
      name:
        CSharp: GoConstructBuilding(Building)
        VB: GoConstructBuilding(Building)
      nameWithType:
        CSharp: Worker.GoConstructBuilding(Building)
        VB: Worker.GoConstructBuilding(Building)
      qualifiedName:
        CSharp: MinecaRTS.Worker.GoConstructBuilding(MinecaRTS.Building)
        VB: MinecaRTS.Worker.GoConstructBuilding(MinecaRTS.Building)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GoConstructBuilding
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 114
      syntax:
        content:
          CSharp: public void GoConstructBuilding(Building building)
          VB: Public Sub GoConstructBuilding(building As Building)
        parameters:
        - id: building
          type: MinecaRTS.Building
      overload: MinecaRTS.Worker.GoConstructBuilding*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Worker.ChangeAnimation(MinecaRTS.WkrAnim)
      commentId: M:MinecaRTS.Worker.ChangeAnimation(MinecaRTS.WkrAnim)
      language: CSharp
      name:
        CSharp: ChangeAnimation(WkrAnim)
        VB: ChangeAnimation(WkrAnim)
      nameWithType:
        CSharp: Worker.ChangeAnimation(WkrAnim)
        VB: Worker.ChangeAnimation(WkrAnim)
      qualifiedName:
        CSharp: MinecaRTS.Worker.ChangeAnimation(MinecaRTS.WkrAnim)
        VB: MinecaRTS.Worker.ChangeAnimation(MinecaRTS.WkrAnim)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ChangeAnimation
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 120
      syntax:
        content:
          CSharp: public void ChangeAnimation(WkrAnim newAnim)
          VB: Public Sub ChangeAnimation(newAnim As WkrAnim)
        parameters:
        - id: newAnim
          type: MinecaRTS.WkrAnim
      overload: MinecaRTS.Worker.ChangeAnimation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.Worker.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.Worker.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: Worker.HandleMessage(Message)
        VB: Worker.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.Worker.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.Worker.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 128
      syntax:
        content:
          CSharp: public override void HandleMessage(Message message)
          VB: Public Overrides Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.Worker.HandleMessage*
      overridden: MinecaRTS.Unit.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Worker.ExitState
      commentId: M:MinecaRTS.Worker.ExitState
      language: CSharp
      name:
        CSharp: ExitState()
        VB: ExitState()
      nameWithType:
        CSharp: Worker.ExitState()
        VB: Worker.ExitState()
      qualifiedName:
        CSharp: MinecaRTS.Worker.ExitState()
        VB: MinecaRTS.Worker.ExitState()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ExitState
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 133
      syntax:
        content:
          CSharp: public override void ExitState()
          VB: Public Overrides Sub ExitState
      overload: MinecaRTS.Worker.ExitState*
      overridden: MinecaRTS.Unit.ExitState
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: MinecaRTS.Worker.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.Worker.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderDebug(SpriteBatch)
        VB: RenderDebug(SpriteBatch)
      nameWithType:
        CSharp: Worker.RenderDebug(SpriteBatch)
        VB: Worker.RenderDebug(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.Worker.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.Worker.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Entities/Units/Worker.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderDebug
        path: MinecaRTS/Entities/Units/Worker.cs
        startLine: 138
      syntax:
        content:
          CSharp: public override void RenderDebug(SpriteBatch spriteBatch)
          VB: Public Overrides Sub RenderDebug(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.Worker.RenderDebug*
      overridden: MinecaRTS.Unit.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: MinecaRTS.World
    commentId: T:MinecaRTS.World
    language: CSharp
    name:
      CSharp: World
      VB: World
    nameWithType:
      CSharp: World
      VB: World
    qualifiedName:
      CSharp: MinecaRTS.World
      VB: MinecaRTS.World
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/Core/World.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: World
      path: MinecaRTS/Core/World.cs
      startLine: 12
    syntax:
      content:
        CSharp: 'public class World : IHandleMessages'
        VB: >-
          Public Class World

              Implements IHandleMessages
    inheritance:
    - System.Object
    implements:
    - MinecaRTS.IHandleMessages
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: MinecaRTS.World.GameTime
      commentId: P:MinecaRTS.World.GameTime
      language: CSharp
      name:
        CSharp: GameTime
        VB: GameTime
      nameWithType:
        CSharp: World.GameTime
        VB: World.GameTime
      qualifiedName:
        CSharp: MinecaRTS.World.GameTime
        VB: MinecaRTS.World.GameTime
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GameTime
        path: MinecaRTS/Core/World.cs
        startLine: 16
      syntax:
        content:
          CSharp: public static ulong GameTime { get; }
          VB: Public Shared ReadOnly Property GameTime As ULong
        parameters: []
        return:
          type: System.UInt64
      overload: MinecaRTS.World.GameTime*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: MinecaRTS.World.MSG_ID
      commentId: F:MinecaRTS.World.MSG_ID
      language: CSharp
      name:
        CSharp: MSG_ID
        VB: MSG_ID
      nameWithType:
        CSharp: World.MSG_ID
        VB: World.MSG_ID
      qualifiedName:
        CSharp: MinecaRTS.World.MSG_ID
        VB: MinecaRTS.World.MSG_ID
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: MSG_ID
        path: MinecaRTS/Core/World.cs
        startLine: 25
      summary: "\nWorld will always be created first and we may want to send messages to the world from anywhere.\nTherefore its ID is globally accessible.\n"
      example: []
      syntax:
        content:
          CSharp: public const int MSG_ID = 0
          VB: Public Const MSG_ID As Integer = 0
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: MinecaRTS.World.ID
      commentId: P:MinecaRTS.World.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: World.ID
        VB: World.ID
      qualifiedName:
        CSharp: MinecaRTS.World.ID
        VB: MinecaRTS.World.ID
      type: Property
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: ID
        path: MinecaRTS/Core/World.cs
        startLine: 29
      syntax:
        content:
          CSharp: public ulong ID { get; }
          VB: Public ReadOnly Property ID As ULong
        parameters: []
        return:
          type: System.UInt64
      overload: MinecaRTS.World.ID*
      implements:
      - MinecaRTS.IHandleMessages.ID
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.World.Width
      commentId: F:MinecaRTS.World.Width
      language: CSharp
      name:
        CSharp: Width
        VB: Width
      nameWithType:
        CSharp: World.Width
        VB: World.Width
      qualifiedName:
        CSharp: MinecaRTS.World.Width
        VB: MinecaRTS.World.Width
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Width
        path: MinecaRTS/Core/World.cs
        startLine: 34
      syntax:
        content:
          CSharp: public static int Width
          VB: Public Shared Width As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.World.Height
      commentId: F:MinecaRTS.World.Height
      language: CSharp
      name:
        CSharp: Height
        VB: Height
      nameWithType:
        CSharp: World.Height
        VB: World.Height
      qualifiedName:
        CSharp: MinecaRTS.World.Height
        VB: MinecaRTS.World.Height
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Height
        path: MinecaRTS/Core/World.cs
        startLine: 35
      syntax:
        content:
          CSharp: public static int Height
          VB: Public Shared Height As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.World.entityCosts
      commentId: F:MinecaRTS.World.entityCosts
      language: CSharp
      name:
        CSharp: entityCosts
        VB: entityCosts
      nameWithType:
        CSharp: World.entityCosts
        VB: World.entityCosts
      qualifiedName:
        CSharp: MinecaRTS.World.entityCosts
        VB: MinecaRTS.World.entityCosts
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: entityCosts
        path: MinecaRTS/Core/World.cs
        startLine: 37
      syntax:
        content:
          CSharp: public static Dictionary<Type, Cost> entityCosts
          VB: Public Shared entityCosts As Dictionary(Of Type, Cost)
        return:
          type: System.Collections.Generic.Dictionary{System.Type,MinecaRTS.Cost}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: MinecaRTS.World.Grid
      commentId: F:MinecaRTS.World.Grid
      language: CSharp
      name:
        CSharp: Grid
        VB: Grid
      nameWithType:
        CSharp: World.Grid
        VB: World.Grid
      qualifiedName:
        CSharp: MinecaRTS.World.Grid
        VB: MinecaRTS.World.Grid
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Grid
        path: MinecaRTS/Core/World.cs
        startLine: 41
      syntax:
        content:
          CSharp: public readonly Grid Grid
          VB: Public ReadOnly Grid As Grid
        return:
          type: MinecaRTS.Grid
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.World.CoarseGrid
      commentId: F:MinecaRTS.World.CoarseGrid
      language: CSharp
      name:
        CSharp: CoarseGrid
        VB: CoarseGrid
      nameWithType:
        CSharp: World.CoarseGrid
        VB: World.CoarseGrid
      qualifiedName:
        CSharp: MinecaRTS.World.CoarseGrid
        VB: MinecaRTS.World.CoarseGrid
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CoarseGrid
        path: MinecaRTS/Core/World.cs
        startLine: 42
      syntax:
        content:
          CSharp: public readonly Grid CoarseGrid
          VB: Public ReadOnly CoarseGrid As Grid
        return:
          type: MinecaRTS.Grid
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.World.Units
      commentId: F:MinecaRTS.World.Units
      language: CSharp
      name:
        CSharp: Units
        VB: Units
      nameWithType:
        CSharp: World.Units
        VB: World.Units
      qualifiedName:
        CSharp: MinecaRTS.World.Units
        VB: MinecaRTS.World.Units
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Units
        path: MinecaRTS/Core/World.cs
        startLine: 43
      syntax:
        content:
          CSharp: public readonly List<Unit> Units
          VB: Public ReadOnly Units As List(Of Unit)
        return:
          type: System.Collections.Generic.List{MinecaRTS.Unit}
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.World.Buildings
      commentId: F:MinecaRTS.World.Buildings
      language: CSharp
      name:
        CSharp: Buildings
        VB: Buildings
      nameWithType:
        CSharp: World.Buildings
        VB: World.Buildings
      qualifiedName:
        CSharp: MinecaRTS.World.Buildings
        VB: MinecaRTS.World.Buildings
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Buildings
        path: MinecaRTS/Core/World.cs
        startLine: 44
      syntax:
        content:
          CSharp: public readonly List<Building> Buildings
          VB: Public ReadOnly Buildings As List(Of Building)
        return:
          type: System.Collections.Generic.List{MinecaRTS.Building}
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.World.SelectedUnits
      commentId: F:MinecaRTS.World.SelectedUnits
      language: CSharp
      name:
        CSharp: SelectedUnits
        VB: SelectedUnits
      nameWithType:
        CSharp: World.SelectedUnits
        VB: World.SelectedUnits
      qualifiedName:
        CSharp: MinecaRTS.World.SelectedUnits
        VB: MinecaRTS.World.SelectedUnits
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: SelectedUnits
        path: MinecaRTS/Core/World.cs
        startLine: 45
      syntax:
        content:
          CSharp: public List<Unit> SelectedUnits
          VB: Public SelectedUnits As List(Of Unit)
        return:
          type: System.Collections.Generic.List{MinecaRTS.Unit}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.Resources
      commentId: F:MinecaRTS.World.Resources
      language: CSharp
      name:
        CSharp: Resources
        VB: Resources
      nameWithType:
        CSharp: World.Resources
        VB: World.Resources
      qualifiedName:
        CSharp: MinecaRTS.World.Resources
        VB: MinecaRTS.World.Resources
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Resources
        path: MinecaRTS/Core/World.cs
        startLine: 47
      syntax:
        content:
          CSharp: public readonly Dictionary<Cell, Resource> Resources
          VB: Public ReadOnly Resources As Dictionary(Of Cell, Resource)
        return:
          type: System.Collections.Generic.Dictionary{MinecaRTS.Cell,MinecaRTS.Resource}
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.World.Tracks
      commentId: F:MinecaRTS.World.Tracks
      language: CSharp
      name:
        CSharp: Tracks
        VB: Tracks
      nameWithType:
        CSharp: World.Tracks
        VB: World.Tracks
      qualifiedName:
        CSharp: MinecaRTS.World.Tracks
        VB: MinecaRTS.World.Tracks
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Tracks
        path: MinecaRTS/Core/World.cs
        startLine: 48
      syntax:
        content:
          CSharp: public readonly Dictionary<Cell, Track> Tracks
          VB: Public ReadOnly Tracks As Dictionary(Of Cell, Track)
        return:
          type: System.Collections.Generic.Dictionary{MinecaRTS.Cell,MinecaRTS.Track}
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.World.collisionCells
      commentId: F:MinecaRTS.World.collisionCells
      language: CSharp
      name:
        CSharp: collisionCells
        VB: collisionCells
      nameWithType:
        CSharp: World.collisionCells
        VB: World.collisionCells
      qualifiedName:
        CSharp: MinecaRTS.World.collisionCells
        VB: MinecaRTS.World.collisionCells
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: collisionCells
        path: MinecaRTS/Core/World.cs
        startLine: 53
      syntax:
        content:
          CSharp: public readonly CollisionCellData collisionCells
          VB: Public ReadOnly collisionCells As CollisionCellData
        return:
          type: MinecaRTS.CollisionCellData
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.World.fogOfWar
      commentId: F:MinecaRTS.World.fogOfWar
      language: CSharp
      name:
        CSharp: fogOfWar
        VB: fogOfWar
      nameWithType:
        CSharp: World.fogOfWar
        VB: World.fogOfWar
      qualifiedName:
        CSharp: MinecaRTS.World.fogOfWar
        VB: MinecaRTS.World.fogOfWar
      type: Field
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: fogOfWar
        path: MinecaRTS/Core/World.cs
        startLine: 54
      syntax:
        content:
          CSharp: public readonly FogOfWarData fogOfWar
          VB: Public ReadOnly fogOfWar As FogOfWarData
        return:
          type: MinecaRTS.FogOfWarData
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: MinecaRTS.World.#ctor
      commentId: M:MinecaRTS.World.#ctor
      language: CSharp
      name:
        CSharp: World()
        VB: World()
      nameWithType:
        CSharp: World.World()
        VB: World.World()
      qualifiedName:
        CSharp: MinecaRTS.World.World()
        VB: MinecaRTS.World.World()
      type: Constructor
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: .ctor
        path: MinecaRTS/Core/World.cs
        startLine: 57
      syntax:
        content:
          CSharp: public World()
          VB: Public Sub New
      overload: MinecaRTS.World.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.Setup
      commentId: M:MinecaRTS.World.Setup
      language: CSharp
      name:
        CSharp: Setup()
        VB: Setup()
      nameWithType:
        CSharp: World.Setup()
        VB: World.Setup()
      qualifiedName:
        CSharp: MinecaRTS.World.Setup()
        VB: MinecaRTS.World.Setup()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Setup
        path: MinecaRTS/Core/World.cs
        startLine: 84
      syntax:
        content:
          CSharp: public void Setup()
          VB: Public Sub Setup
      overload: MinecaRTS.World.Setup*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.HandleMessage(MinecaRTS.Message)
      commentId: M:MinecaRTS.World.HandleMessage(MinecaRTS.Message)
      language: CSharp
      name:
        CSharp: HandleMessage(Message)
        VB: HandleMessage(Message)
      nameWithType:
        CSharp: World.HandleMessage(Message)
        VB: World.HandleMessage(Message)
      qualifiedName:
        CSharp: MinecaRTS.World.HandleMessage(MinecaRTS.Message)
        VB: MinecaRTS.World.HandleMessage(MinecaRTS.Message)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleMessage
        path: MinecaRTS/Core/World.cs
        startLine: 95
      syntax:
        content:
          CSharp: public void HandleMessage(Message message)
          VB: Public Sub HandleMessage(message As Message)
        parameters:
        - id: message
          type: MinecaRTS.Message
      overload: MinecaRTS.World.HandleMessage*
      implements:
      - MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message)
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.HandleInput
      commentId: M:MinecaRTS.World.HandleInput
      language: CSharp
      name:
        CSharp: HandleInput()
        VB: HandleInput()
      nameWithType:
        CSharp: World.HandleInput()
        VB: World.HandleInput()
      qualifiedName:
        CSharp: MinecaRTS.World.HandleInput()
        VB: MinecaRTS.World.HandleInput()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleInput
        path: MinecaRTS/Core/World.cs
        startLine: 143
      syntax:
        content:
          CSharp: public void HandleInput()
          VB: Public Sub HandleInput
      overload: MinecaRTS.World.HandleInput*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.Update
      commentId: M:MinecaRTS.World.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: World.Update()
        VB: World.Update()
      qualifiedName:
        CSharp: MinecaRTS.World.Update()
        VB: MinecaRTS.World.Update()
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Update
        path: MinecaRTS/Core/World.cs
        startLine: 157
      syntax:
        content:
          CSharp: public void Update()
          VB: Public Sub Update
      overload: MinecaRTS.World.Update*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.TeamCanSeeCell(System.Int32,System.Int32,MinecaRTS.Team)
      commentId: M:MinecaRTS.World.TeamCanSeeCell(System.Int32,System.Int32,MinecaRTS.Team)
      language: CSharp
      name:
        CSharp: TeamCanSeeCell(Int32, Int32, Team)
        VB: TeamCanSeeCell(Int32, Int32, Team)
      nameWithType:
        CSharp: World.TeamCanSeeCell(Int32, Int32, Team)
        VB: World.TeamCanSeeCell(Int32, Int32, Team)
      qualifiedName:
        CSharp: MinecaRTS.World.TeamCanSeeCell(System.Int32, System.Int32, MinecaRTS.Team)
        VB: MinecaRTS.World.TeamCanSeeCell(System.Int32, System.Int32, MinecaRTS.Team)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: TeamCanSeeCell
        path: MinecaRTS/Core/World.cs
        startLine: 171
      syntax:
        content:
          CSharp: public bool TeamCanSeeCell(int c, int r, Team team)
          VB: Public Function TeamCanSeeCell(c As Integer, r As Integer, team As Team) As Boolean
        parameters:
        - id: c
          type: System.Int32
        - id: r
          type: System.Int32
        - id: team
          type: MinecaRTS.Team
        return:
          type: System.Boolean
      overload: MinecaRTS.World.TeamCanSeeCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.World.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: Render(SpriteBatch)
        VB: Render(SpriteBatch)
      nameWithType:
        CSharp: World.Render(SpriteBatch)
        VB: World.Render(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.World.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.World.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: Render
        path: MinecaRTS/Core/World.cs
        startLine: 205
      syntax:
        content:
          CSharp: public void Render(SpriteBatch spriteBatch)
          VB: Public Sub Render(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.World.Render*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.AddUnit(System.Type,Microsoft.Xna.Framework.Vector2,MinecaRTS.Team,Microsoft.Xna.Framework.Vector2)
      commentId: M:MinecaRTS.World.AddUnit(System.Type,Microsoft.Xna.Framework.Vector2,MinecaRTS.Team,Microsoft.Xna.Framework.Vector2)
      language: CSharp
      name:
        CSharp: AddUnit(Type, Vector2, Team, Vector2)
        VB: AddUnit(Type, Vector2, Team, Vector2)
      nameWithType:
        CSharp: World.AddUnit(Type, Vector2, Team, Vector2)
        VB: World.AddUnit(Type, Vector2, Team, Vector2)
      qualifiedName:
        CSharp: MinecaRTS.World.AddUnit(System.Type, Microsoft.Xna.Framework.Vector2, MinecaRTS.Team, Microsoft.Xna.Framework.Vector2)
        VB: MinecaRTS.World.AddUnit(System.Type, Microsoft.Xna.Framework.Vector2, MinecaRTS.Team, Microsoft.Xna.Framework.Vector2)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddUnit
        path: MinecaRTS/Core/World.cs
        startLine: 265
      syntax:
        content:
          CSharp: public void AddUnit(Type unitType, Vector2 pos, Team team, Vector2 rallyPoint)
          VB: Public Sub AddUnit(unitType As Type, pos As Vector2, team As Team, rallyPoint As Vector2)
        parameters:
        - id: unitType
          type: System.Type
        - id: pos
          type: Microsoft.Xna.Framework.Vector2
        - id: team
          type: MinecaRTS.Team
        - id: rallyPoint
          type: Microsoft.Xna.Framework.Vector2
      overload: MinecaRTS.World.AddUnit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.AddBuilding(MinecaRTS.Building)
      commentId: M:MinecaRTS.World.AddBuilding(MinecaRTS.Building)
      language: CSharp
      name:
        CSharp: AddBuilding(Building)
        VB: AddBuilding(Building)
      nameWithType:
        CSharp: World.AddBuilding(Building)
        VB: World.AddBuilding(Building)
      qualifiedName:
        CSharp: MinecaRTS.World.AddBuilding(MinecaRTS.Building)
        VB: MinecaRTS.World.AddBuilding(MinecaRTS.Building)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddBuilding
        path: MinecaRTS/Core/World.cs
        startLine: 286
      syntax:
        content:
          CSharp: public void AddBuilding(Building building)
          VB: Public Sub AddBuilding(building As Building)
        parameters:
        - id: building
          type: MinecaRTS.Building
      overload: MinecaRTS.World.AddBuilding*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.AddResourceToCell(MinecaRTS.Resource,MinecaRTS.Cell)
      commentId: M:MinecaRTS.World.AddResourceToCell(MinecaRTS.Resource,MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: AddResourceToCell(Resource, Cell)
        VB: AddResourceToCell(Resource, Cell)
      nameWithType:
        CSharp: World.AddResourceToCell(Resource, Cell)
        VB: World.AddResourceToCell(Resource, Cell)
      qualifiedName:
        CSharp: MinecaRTS.World.AddResourceToCell(MinecaRTS.Resource, MinecaRTS.Cell)
        VB: MinecaRTS.World.AddResourceToCell(MinecaRTS.Resource, MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: AddResourceToCell
        path: MinecaRTS/Core/World.cs
        startLine: 307
      syntax:
        content:
          CSharp: public void AddResourceToCell(Resource resource, Cell cell)
          VB: Public Sub AddResourceToCell(resource As Resource, cell As Cell)
        parameters:
        - id: resource
          type: MinecaRTS.Resource
        - id: cell
          type: MinecaRTS.Cell
      overload: MinecaRTS.World.AddResourceToCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.RemoveResourceFromCell(MinecaRTS.Cell)
      commentId: M:MinecaRTS.World.RemoveResourceFromCell(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: RemoveResourceFromCell(Cell)
        VB: RemoveResourceFromCell(Cell)
      nameWithType:
        CSharp: World.RemoveResourceFromCell(Cell)
        VB: World.RemoveResourceFromCell(Cell)
      qualifiedName:
        CSharp: MinecaRTS.World.RemoveResourceFromCell(MinecaRTS.Cell)
        VB: MinecaRTS.World.RemoveResourceFromCell(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RemoveResourceFromCell
        path: MinecaRTS/Core/World.cs
        startLine: 323
      syntax:
        content:
          CSharp: public void RemoveResourceFromCell(Cell cell)
          VB: Public Sub RemoveResourceFromCell(cell As Cell)
        parameters:
        - id: cell
          type: MinecaRTS.Cell
      overload: MinecaRTS.World.RemoveResourceFromCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.CellHasResource(MinecaRTS.Cell)
      commentId: M:MinecaRTS.World.CellHasResource(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: CellHasResource(Cell)
        VB: CellHasResource(Cell)
      nameWithType:
        CSharp: World.CellHasResource(Cell)
        VB: World.CellHasResource(Cell)
      qualifiedName:
        CSharp: MinecaRTS.World.CellHasResource(MinecaRTS.Cell)
        VB: MinecaRTS.World.CellHasResource(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CellHasResource
        path: MinecaRTS/Core/World.cs
        startLine: 339
      syntax:
        content:
          CSharp: public bool CellHasResource(Cell cell)
          VB: Public Function CellHasResource(cell As Cell) As Boolean
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: System.Boolean
      overload: MinecaRTS.World.CellHasResource*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.CellHasTrack(MinecaRTS.Cell)
      commentId: M:MinecaRTS.World.CellHasTrack(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: CellHasTrack(Cell)
        VB: CellHasTrack(Cell)
      nameWithType:
        CSharp: World.CellHasTrack(Cell)
        VB: World.CellHasTrack(Cell)
      qualifiedName:
        CSharp: MinecaRTS.World.CellHasTrack(MinecaRTS.Cell)
        VB: MinecaRTS.World.CellHasTrack(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: CellHasTrack
        path: MinecaRTS/Core/World.cs
        startLine: 344
      syntax:
        content:
          CSharp: public bool CellHasTrack(Cell cell)
          VB: Public Function CellHasTrack(cell As Cell) As Boolean
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: System.Boolean
      overload: MinecaRTS.World.CellHasTrack*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.GetResourceFromCell(MinecaRTS.Cell)
      commentId: M:MinecaRTS.World.GetResourceFromCell(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: GetResourceFromCell(Cell)
        VB: GetResourceFromCell(Cell)
      nameWithType:
        CSharp: World.GetResourceFromCell(Cell)
        VB: World.GetResourceFromCell(Cell)
      qualifiedName:
        CSharp: MinecaRTS.World.GetResourceFromCell(MinecaRTS.Cell)
        VB: MinecaRTS.World.GetResourceFromCell(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetResourceFromCell
        path: MinecaRTS/Core/World.cs
        startLine: 349
      syntax:
        content:
          CSharp: public Resource GetResourceFromCell(Cell cell)
          VB: Public Function GetResourceFromCell(cell As Cell) As Resource
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: MinecaRTS.Resource
      overload: MinecaRTS.World.GetResourceFromCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.GetTrackFromCell(MinecaRTS.Cell)
      commentId: M:MinecaRTS.World.GetTrackFromCell(MinecaRTS.Cell)
      language: CSharp
      name:
        CSharp: GetTrackFromCell(Cell)
        VB: GetTrackFromCell(Cell)
      nameWithType:
        CSharp: World.GetTrackFromCell(Cell)
        VB: World.GetTrackFromCell(Cell)
      qualifiedName:
        CSharp: MinecaRTS.World.GetTrackFromCell(MinecaRTS.Cell)
        VB: MinecaRTS.World.GetTrackFromCell(MinecaRTS.Cell)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: GetTrackFromCell
        path: MinecaRTS/Core/World.cs
        startLine: 360
      syntax:
        content:
          CSharp: public Track GetTrackFromCell(Cell cell)
          VB: Public Function GetTrackFromCell(cell As Cell) As Track
        parameters:
        - id: cell
          type: MinecaRTS.Cell
        return:
          type: MinecaRTS.Track
      overload: MinecaRTS.World.GetTrackFromCell*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: MinecaRTS.World.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      commentId: M:MinecaRTS.World.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      language: CSharp
      name:
        CSharp: RenderDebug(SpriteBatch)
        VB: RenderDebug(SpriteBatch)
      nameWithType:
        CSharp: World.RenderDebug(SpriteBatch)
        VB: World.RenderDebug(SpriteBatch)
      qualifiedName:
        CSharp: MinecaRTS.World.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        VB: MinecaRTS.World.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/Core/World.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: RenderDebug
        path: MinecaRTS/Core/World.cs
        startLine: 371
      syntax:
        content:
          CSharp: public void RenderDebug(SpriteBatch spriteBatch)
          VB: Public Sub RenderDebug(spriteBatch As SpriteBatch)
        parameters:
        - id: spriteBatch
          type: Microsoft.Xna.Framework.Graphics.SpriteBatch
      overload: MinecaRTS.World.RenderDebug*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: MinecaRTS.WorldEditor
    commentId: T:MinecaRTS.WorldEditor
    language: CSharp
    name:
      CSharp: WorldEditor
      VB: WorldEditor
    nameWithType:
      CSharp: WorldEditor
      VB: WorldEditor
    qualifiedName:
      CSharp: MinecaRTS.WorldEditor
      VB: MinecaRTS.WorldEditor
    type: Class
    assemblies:
    - MinecaRTS
    namespace: MinecaRTS
    source:
      remote:
        path: MinecaRTS/EditAndDebug/WorldEditor.cs
        branch: master
        repo: https://github.com/Plottel/MinecaRTS.git
      id: WorldEditor
      path: MinecaRTS/EditAndDebug/WorldEditor.cs
      startLine: 13
    summary: "\nHandles the level editing functionality of the program.\n"
    example: []
    syntax:
      content:
        CSharp: public static class WorldEditor
        VB: Public Module WorldEditor
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: MinecaRTS.WorldEditor.HandleInput(MinecaRTS.World)
      commentId: M:MinecaRTS.WorldEditor.HandleInput(MinecaRTS.World)
      language: CSharp
      name:
        CSharp: HandleInput(World)
        VB: HandleInput(World)
      nameWithType:
        CSharp: WorldEditor.HandleInput(World)
        VB: WorldEditor.HandleInput(World)
      qualifiedName:
        CSharp: MinecaRTS.WorldEditor.HandleInput(MinecaRTS.World)
        VB: MinecaRTS.WorldEditor.HandleInput(MinecaRTS.World)
      type: Method
      assemblies:
      - MinecaRTS
      namespace: MinecaRTS
      source:
        remote:
          path: MinecaRTS/EditAndDebug/WorldEditor.cs
          branch: master
          repo: https://github.com/Plottel/MinecaRTS.git
        id: HandleInput
        path: MinecaRTS/EditAndDebug/WorldEditor.cs
        startLine: 19
      summary: "\nThe process method. This is called once per frame and will handle any editing input.\n"
      example: []
      syntax:
        content:
          CSharp: public static void HandleInput(World world)
          VB: Public Shared Sub HandleInput(world As World)
        parameters:
        - id: world
          type: MinecaRTS.World
          description: ''
      overload: MinecaRTS.WorldEditor.HandleInput*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
references:
  MinecaRTS:
    name:
      CSharp:
      - name: MinecaRTS
        nameWithType: MinecaRTS
        qualifiedName: MinecaRTS
      VB:
      - name: MinecaRTS
        nameWithType: MinecaRTS
        qualifiedName: MinecaRTS
    isDefinition: true
    commentId: N:MinecaRTS
  MinecaRTS.Player:
    name:
      CSharp:
      - id: MinecaRTS.Player
        name: Player
        nameWithType: Player
        qualifiedName: MinecaRTS.Player
      VB:
      - id: MinecaRTS.Player
        name: Player
        nameWithType: Player
        qualifiedName: MinecaRTS.Player
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Player
  MinecaRTS.Player.ID:
    name:
      CSharp:
      - id: MinecaRTS.Player.ID
        name: ID
        nameWithType: Player.ID
        qualifiedName: MinecaRTS.Player.ID
      VB:
      - id: MinecaRTS.Player.ID
        name: ID
        nameWithType: Player.ID
        qualifiedName: MinecaRTS.Player.ID
    isDefinition: true
    parent: MinecaRTS.Player
    commentId: P:MinecaRTS.Player.ID
  MinecaRTS.Player.Data:
    name:
      CSharp:
      - id: MinecaRTS.Player.Data
        name: Data
        nameWithType: Player.Data
        qualifiedName: MinecaRTS.Player.Data
      VB:
      - id: MinecaRTS.Player.Data
        name: Data
        nameWithType: Player.Data
        qualifiedName: MinecaRTS.Player.Data
    isDefinition: true
    parent: MinecaRTS.Player
    commentId: P:MinecaRTS.Player.Data
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  MinecaRTS.IHandleMessages:
    name:
      CSharp:
      - id: MinecaRTS.IHandleMessages
        name: IHandleMessages
        nameWithType: IHandleMessages
        qualifiedName: MinecaRTS.IHandleMessages
      VB:
      - id: MinecaRTS.IHandleMessages
        name: IHandleMessages
        nameWithType: IHandleMessages
        qualifiedName: MinecaRTS.IHandleMessages
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.IHandleMessages
  MinecaRTS.PlayerData:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData
        name: PlayerData
        nameWithType: PlayerData
        qualifiedName: MinecaRTS.PlayerData
      VB:
      - id: MinecaRTS.PlayerData
        name: PlayerData
        nameWithType: PlayerData
        qualifiedName: MinecaRTS.PlayerData
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.PlayerData
  MinecaRTS.Bot.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Bot.#ctor*
        name: Bot
        nameWithType: Bot.Bot
        qualifiedName: MinecaRTS.Bot.Bot
      VB:
      - id: MinecaRTS.Bot.#ctor*
        name: Bot
        nameWithType: Bot.Bot
        qualifiedName: MinecaRTS.Bot.Bot
    isDefinition: true
    commentId: Overload:MinecaRTS.Bot.#ctor
  MinecaRTS.Player.HandleInput:
    name:
      CSharp:
      - id: MinecaRTS.Player.HandleInput
        name: HandleInput
        nameWithType: Player.HandleInput
        qualifiedName: MinecaRTS.Player.HandleInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Player.HandleInput
        name: HandleInput
        nameWithType: Player.HandleInput
        qualifiedName: MinecaRTS.Player.HandleInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Player
    commentId: M:MinecaRTS.Player.HandleInput
  MinecaRTS.Bot.HandleInput*:
    name:
      CSharp:
      - id: MinecaRTS.Bot.HandleInput*
        name: HandleInput
        nameWithType: Bot.HandleInput
        qualifiedName: MinecaRTS.Bot.HandleInput
      VB:
      - id: MinecaRTS.Bot.HandleInput*
        name: HandleInput
        nameWithType: Bot.HandleInput
        qualifiedName: MinecaRTS.Bot.HandleInput
    isDefinition: true
    commentId: Overload:MinecaRTS.Bot.HandleInput
  MinecaRTS.Unit:
    name:
      CSharp:
      - id: MinecaRTS.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: MinecaRTS.Unit
      VB:
      - id: MinecaRTS.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: MinecaRTS.Unit
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Unit
  MinecaRTS.Bot.OnUnitSpawn*:
    name:
      CSharp:
      - id: MinecaRTS.Bot.OnUnitSpawn*
        name: OnUnitSpawn
        nameWithType: Bot.OnUnitSpawn
        qualifiedName: MinecaRTS.Bot.OnUnitSpawn
      VB:
      - id: MinecaRTS.Bot.OnUnitSpawn*
        name: OnUnitSpawn
        nameWithType: Bot.OnUnitSpawn
        qualifiedName: MinecaRTS.Bot.OnUnitSpawn
    isDefinition: true
    commentId: Overload:MinecaRTS.Bot.OnUnitSpawn
  MinecaRTS.ProductionBuilding:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding
        name: ProductionBuilding
        nameWithType: ProductionBuilding
        qualifiedName: MinecaRTS.ProductionBuilding
      VB:
      - id: MinecaRTS.ProductionBuilding
        name: ProductionBuilding
        nameWithType: ProductionBuilding
        qualifiedName: MinecaRTS.ProductionBuilding
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.ProductionBuilding
  MinecaRTS.Bot.OnProductionBuildingTaskComplete*:
    name:
      CSharp:
      - id: MinecaRTS.Bot.OnProductionBuildingTaskComplete*
        name: OnProductionBuildingTaskComplete
        nameWithType: Bot.OnProductionBuildingTaskComplete
        qualifiedName: MinecaRTS.Bot.OnProductionBuildingTaskComplete
      VB:
      - id: MinecaRTS.Bot.OnProductionBuildingTaskComplete*
        name: OnProductionBuildingTaskComplete
        nameWithType: Bot.OnProductionBuildingTaskComplete
        qualifiedName: MinecaRTS.Bot.OnProductionBuildingTaskComplete
    isDefinition: true
    commentId: Overload:MinecaRTS.Bot.OnProductionBuildingTaskComplete
  MinecaRTS.Bot.OnSupplyChange*:
    name:
      CSharp:
      - id: MinecaRTS.Bot.OnSupplyChange*
        name: OnSupplyChange
        nameWithType: Bot.OnSupplyChange
        qualifiedName: MinecaRTS.Bot.OnSupplyChange
      VB:
      - id: MinecaRTS.Bot.OnSupplyChange*
        name: OnSupplyChange
        nameWithType: Bot.OnSupplyChange
        qualifiedName: MinecaRTS.Bot.OnSupplyChange
    isDefinition: true
    commentId: Overload:MinecaRTS.Bot.OnSupplyChange
  MinecaRTS.Building:
    name:
      CSharp:
      - id: MinecaRTS.Building
        name: Building
        nameWithType: Building
        qualifiedName: MinecaRTS.Building
      VB:
      - id: MinecaRTS.Building
        name: Building
        nameWithType: Building
        qualifiedName: MinecaRTS.Building
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Building
  MinecaRTS.Bot.OnBuildingComplete*:
    name:
      CSharp:
      - id: MinecaRTS.Bot.OnBuildingComplete*
        name: OnBuildingComplete
        nameWithType: Bot.OnBuildingComplete
        qualifiedName: MinecaRTS.Bot.OnBuildingComplete
      VB:
      - id: MinecaRTS.Bot.OnBuildingComplete*
        name: OnBuildingComplete
        nameWithType: Bot.OnBuildingComplete
        qualifiedName: MinecaRTS.Bot.OnBuildingComplete
    isDefinition: true
    commentId: Overload:MinecaRTS.Bot.OnBuildingComplete
  MinecaRTS.Message:
    name:
      CSharp:
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      VB:
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Message
  MinecaRTS.Player.HandleMessage(MinecaRTS.Message):
    name:
      CSharp:
      - id: MinecaRTS.Player.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: Player.HandleMessage
        qualifiedName: MinecaRTS.Player.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Player.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: Player.HandleMessage
        qualifiedName: MinecaRTS.Player.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Player
    commentId: M:MinecaRTS.Player.HandleMessage(MinecaRTS.Message)
  MinecaRTS.Bot.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.Bot.HandleMessage*
        name: HandleMessage
        nameWithType: Bot.HandleMessage
        qualifiedName: MinecaRTS.Bot.HandleMessage
      VB:
      - id: MinecaRTS.Bot.HandleMessage*
        name: HandleMessage
        nameWithType: Bot.HandleMessage
        qualifiedName: MinecaRTS.Bot.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.Bot.HandleMessage
  Microsoft.Xna.Framework.Graphics:
    name:
      CSharp:
      - name: Microsoft.Xna.Framework.Graphics
        nameWithType: Microsoft.Xna.Framework.Graphics
        qualifiedName: Microsoft.Xna.Framework.Graphics
      VB:
      - name: Microsoft.Xna.Framework.Graphics
        nameWithType: Microsoft.Xna.Framework.Graphics
        qualifiedName: Microsoft.Xna.Framework.Graphics
    isDefinition: true
    commentId: N:Microsoft.Xna.Framework.Graphics
  Microsoft.Xna.Framework.Graphics.SpriteBatch:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Graphics
    commentId: T:Microsoft.Xna.Framework.Graphics.SpriteBatch
  MinecaRTS.Player.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch):
    name:
      CSharp:
      - id: MinecaRTS.Player.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: Player.Render
        qualifiedName: MinecaRTS.Player.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Player.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: Player.Render
        qualifiedName: MinecaRTS.Player.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Player
    commentId: M:MinecaRTS.Player.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  MinecaRTS.Bot.Render*:
    name:
      CSharp:
      - id: MinecaRTS.Bot.Render*
        name: Render
        nameWithType: Bot.Render
        qualifiedName: MinecaRTS.Bot.Render
      VB:
      - id: MinecaRTS.Bot.Render*
        name: Render
        nameWithType: Bot.Render
        qualifiedName: MinecaRTS.Bot.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.Bot.Render
  MinecaRTS.Bot:
    name:
      CSharp:
      - id: MinecaRTS.Bot
        name: Bot
        nameWithType: Bot
        qualifiedName: MinecaRTS.Bot
      VB:
      - id: MinecaRTS.Bot
        name: Bot
        nameWithType: Bot
        qualifiedName: MinecaRTS.Bot
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Bot
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  System.Collections.Generic.HashSet`1:
    name:
      CSharp:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: System.Collections.Generic.HashSet
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: System.Collections.Generic.HashSet
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.HashSet`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.HashSet{MinecaRTS.Unit}:
    name:
      CSharp:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: System.Collections.Generic.HashSet
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: MinecaRTS.Unit
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: System.Collections.Generic.HashSet
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: MinecaRTS.Unit
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.HashSet`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.HashSet{MinecaRTS.Unit}
  MinecaRTS.CollisionCellData.Item*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.Item*
        name: Item
        nameWithType: CollisionCellData.Item
        qualifiedName: MinecaRTS.CollisionCellData.Item
      VB:
      - id: MinecaRTS.CollisionCellData.Item*
        name: Item
        nameWithType: CollisionCellData.Item
        qualifiedName: MinecaRTS.CollisionCellData.Item
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.Item
  Microsoft.Xna.Framework:
    name:
      CSharp:
      - name: Microsoft.Xna.Framework
        nameWithType: Microsoft.Xna.Framework
        qualifiedName: Microsoft.Xna.Framework
      VB:
      - name: Microsoft.Xna.Framework
        nameWithType: Microsoft.Xna.Framework
        qualifiedName: Microsoft.Xna.Framework
    isDefinition: true
    commentId: N:Microsoft.Xna.Framework
  Microsoft.Xna.Framework.Point:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Point
        name: Point
        nameWithType: Point
        qualifiedName: Microsoft.Xna.Framework.Point
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Point
        name: Point
        nameWithType: Point
        qualifiedName: Microsoft.Xna.Framework.Point
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework
    commentId: T:Microsoft.Xna.Framework.Point
  MinecaRTS.Grid:
    name:
      CSharp:
      - id: MinecaRTS.Grid
        name: Grid
        nameWithType: Grid
        qualifiedName: MinecaRTS.Grid
      VB:
      - id: MinecaRTS.Grid
        name: Grid
        nameWithType: Grid
        qualifiedName: MinecaRTS.Grid
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Grid
  MinecaRTS.CollisionCellData.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.#ctor*
        name: CollisionCellData
        nameWithType: CollisionCellData.CollisionCellData
        qualifiedName: MinecaRTS.CollisionCellData.CollisionCellData
      VB:
      - id: MinecaRTS.CollisionCellData.#ctor*
        name: CollisionCellData
        nameWithType: CollisionCellData.CollisionCellData
        qualifiedName: MinecaRTS.CollisionCellData.CollisionCellData
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.#ctor
  MinecaRTS.CollisionCellData.Grid*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.Grid*
        name: Grid
        nameWithType: CollisionCellData.Grid
        qualifiedName: MinecaRTS.CollisionCellData.Grid
      VB:
      - id: MinecaRTS.CollisionCellData.Grid*
        name: Grid
        nameWithType: CollisionCellData.Grid
        qualifiedName: MinecaRTS.CollisionCellData.Grid
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.Grid
  MinecaRTS.CollisionCellData.AddUnit*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.AddUnit*
        name: AddUnit
        nameWithType: CollisionCellData.AddUnit
        qualifiedName: MinecaRTS.CollisionCellData.AddUnit
      VB:
      - id: MinecaRTS.CollisionCellData.AddUnit*
        name: AddUnit
        nameWithType: CollisionCellData.AddUnit
        qualifiedName: MinecaRTS.CollisionCellData.AddUnit
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.AddUnit
  MinecaRTS.CollisionCellData.RemoveUnit*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.RemoveUnit*
        name: RemoveUnit
        nameWithType: CollisionCellData.RemoveUnit
        qualifiedName: MinecaRTS.CollisionCellData.RemoveUnit
      VB:
      - id: MinecaRTS.CollisionCellData.RemoveUnit*
        name: RemoveUnit
        nameWithType: CollisionCellData.RemoveUnit
        qualifiedName: MinecaRTS.CollisionCellData.RemoveUnit
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.RemoveUnit
  MinecaRTS.CollisionCellData.UnitMoved*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.UnitMoved*
        name: UnitMoved
        nameWithType: CollisionCellData.UnitMoved
        qualifiedName: MinecaRTS.CollisionCellData.UnitMoved
      VB:
      - id: MinecaRTS.CollisionCellData.UnitMoved*
        name: UnitMoved
        nameWithType: CollisionCellData.UnitMoved
        qualifiedName: MinecaRTS.CollisionCellData.UnitMoved
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.UnitMoved
  Microsoft.Xna.Framework.Vector2:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Microsoft.Xna.Framework.Vector2
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Microsoft.Xna.Framework.Vector2
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework
    commentId: T:Microsoft.Xna.Framework.Vector2
  MinecaRTS.CollisionCellData.GetUnitsInSameCellAsPos*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsPos*
        name: GetUnitsInSameCellAsPos
        nameWithType: CollisionCellData.GetUnitsInSameCellAsPos
        qualifiedName: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsPos
      VB:
      - id: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsPos*
        name: GetUnitsInSameCellAsPos
        nameWithType: CollisionCellData.GetUnitsInSameCellAsPos
        qualifiedName: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsPos
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.GetUnitsInSameCellAsPos
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic.List{System.Collections.Generic.HashSet{MinecaRTS.Unit}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: System.Collections.Generic.HashSet
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: MinecaRTS.Unit
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: System.Collections.Generic.HashSet
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: MinecaRTS.Unit
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Collections.Generic.HashSet{MinecaRTS.Unit}}
  MinecaRTS.CollisionCellData.GetUnitsInCellsAroundPos*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundPos*
        name: GetUnitsInCellsAroundPos
        nameWithType: CollisionCellData.GetUnitsInCellsAroundPos
        qualifiedName: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundPos
      VB:
      - id: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundPos*
        name: GetUnitsInCellsAroundPos
        nameWithType: CollisionCellData.GetUnitsInCellsAroundPos
        qualifiedName: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundPos
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.GetUnitsInCellsAroundPos
  MinecaRTS.CollisionCellData.GetUnitsInSameCellAsUnit*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsUnit*
        name: GetUnitsInSameCellAsUnit
        nameWithType: CollisionCellData.GetUnitsInSameCellAsUnit
        qualifiedName: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsUnit
      VB:
      - id: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsUnit*
        name: GetUnitsInSameCellAsUnit
        nameWithType: CollisionCellData.GetUnitsInSameCellAsUnit
        qualifiedName: MinecaRTS.CollisionCellData.GetUnitsInSameCellAsUnit
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.GetUnitsInSameCellAsUnit
  MinecaRTS.CollisionCellData.GetUnitsInCellsAroundUnit*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundUnit*
        name: GetUnitsInCellsAroundUnit
        nameWithType: CollisionCellData.GetUnitsInCellsAroundUnit
        qualifiedName: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundUnit
      VB:
      - id: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundUnit*
        name: GetUnitsInCellsAroundUnit
        nameWithType: CollisionCellData.GetUnitsInCellsAroundUnit
        qualifiedName: MinecaRTS.CollisionCellData.GetUnitsInCellsAroundUnit
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.GetUnitsInCellsAroundUnit
  System.Collections.Generic.List{Microsoft.Xna.Framework.Point}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Microsoft.Xna.Framework.Point
        name: Point
        nameWithType: Point
        qualifiedName: Microsoft.Xna.Framework.Point
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Microsoft.Xna.Framework.Point
        name: Point
        nameWithType: Point
        qualifiedName: Microsoft.Xna.Framework.Point
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Microsoft.Xna.Framework.Point}
  MinecaRTS.CollisionCellData.GetCellIndexesAroundPos*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.GetCellIndexesAroundPos*
        name: GetCellIndexesAroundPos
        nameWithType: CollisionCellData.GetCellIndexesAroundPos
        qualifiedName: MinecaRTS.CollisionCellData.GetCellIndexesAroundPos
      VB:
      - id: MinecaRTS.CollisionCellData.GetCellIndexesAroundPos*
        name: GetCellIndexesAroundPos
        nameWithType: CollisionCellData.GetCellIndexesAroundPos
        qualifiedName: MinecaRTS.CollisionCellData.GetCellIndexesAroundPos
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.GetCellIndexesAroundPos
  MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex*:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex*
        name: GetUnitsInCellFromIndex
        nameWithType: CollisionCellData.GetUnitsInCellFromIndex
        qualifiedName: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex
      VB:
      - id: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex*
        name: GetUnitsInCellFromIndex
        nameWithType: CollisionCellData.GetUnitsInCellFromIndex
        qualifiedName: MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex
    isDefinition: true
    commentId: Overload:MinecaRTS.CollisionCellData.GetUnitsInCellFromIndex
  MinecaRTS.CollisionCellData:
    name:
      CSharp:
      - id: MinecaRTS.CollisionCellData
        name: CollisionCellData
        nameWithType: CollisionCellData
        qualifiedName: MinecaRTS.CollisionCellData
      VB:
      - id: MinecaRTS.CollisionCellData
        name: CollisionCellData
        nameWithType: CollisionCellData
        qualifiedName: MinecaRTS.CollisionCellData
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.CollisionCellData
  MinecaRTS.World:
    name:
      CSharp:
      - id: MinecaRTS.World
        name: World
        nameWithType: World
        qualifiedName: MinecaRTS.World
      VB:
      - id: MinecaRTS.World
        name: World
        nameWithType: World
        qualifiedName: MinecaRTS.World
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.World
  MinecaRTS.FogOfWarData.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.FogOfWarData.#ctor*
        name: FogOfWarData
        nameWithType: FogOfWarData.FogOfWarData
        qualifiedName: MinecaRTS.FogOfWarData.FogOfWarData
      VB:
      - id: MinecaRTS.FogOfWarData.#ctor*
        name: FogOfWarData
        nameWithType: FogOfWarData.FogOfWarData
        qualifiedName: MinecaRTS.FogOfWarData.FogOfWarData
    isDefinition: true
    commentId: Overload:MinecaRTS.FogOfWarData.#ctor
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  MinecaRTS.Team:
    name:
      CSharp:
      - id: MinecaRTS.Team
        name: Team
        nameWithType: Team
        qualifiedName: MinecaRTS.Team
      VB:
      - id: MinecaRTS.Team
        name: Team
        nameWithType: Team
        qualifiedName: MinecaRTS.Team
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Team
  MinecaRTS.FogOfWarData.TeamCanSeeCell*:
    name:
      CSharp:
      - id: MinecaRTS.FogOfWarData.TeamCanSeeCell*
        name: TeamCanSeeCell
        nameWithType: FogOfWarData.TeamCanSeeCell
        qualifiedName: MinecaRTS.FogOfWarData.TeamCanSeeCell
      VB:
      - id: MinecaRTS.FogOfWarData.TeamCanSeeCell*
        name: TeamCanSeeCell
        nameWithType: FogOfWarData.TeamCanSeeCell
        qualifiedName: MinecaRTS.FogOfWarData.TeamCanSeeCell
    isDefinition: true
    commentId: Overload:MinecaRTS.FogOfWarData.TeamCanSeeCell
  MinecaRTS.FogOfWarData.TeamCanSeePos*:
    name:
      CSharp:
      - id: MinecaRTS.FogOfWarData.TeamCanSeePos*
        name: TeamCanSeePos
        nameWithType: FogOfWarData.TeamCanSeePos
        qualifiedName: MinecaRTS.FogOfWarData.TeamCanSeePos
      VB:
      - id: MinecaRTS.FogOfWarData.TeamCanSeePos*
        name: TeamCanSeePos
        nameWithType: FogOfWarData.TeamCanSeePos
        qualifiedName: MinecaRTS.FogOfWarData.TeamCanSeePos
    isDefinition: true
    commentId: Overload:MinecaRTS.FogOfWarData.TeamCanSeePos
  MinecaRTS.FogOfWarData.TeamHasExploredCell*:
    name:
      CSharp:
      - id: MinecaRTS.FogOfWarData.TeamHasExploredCell*
        name: TeamHasExploredCell
        nameWithType: FogOfWarData.TeamHasExploredCell
        qualifiedName: MinecaRTS.FogOfWarData.TeamHasExploredCell
      VB:
      - id: MinecaRTS.FogOfWarData.TeamHasExploredCell*
        name: TeamHasExploredCell
        nameWithType: FogOfWarData.TeamHasExploredCell
        qualifiedName: MinecaRTS.FogOfWarData.TeamHasExploredCell
    isDefinition: true
    commentId: Overload:MinecaRTS.FogOfWarData.TeamHasExploredCell
  MinecaRTS.FogOfWarData.TeamHasExploredPos*:
    name:
      CSharp:
      - id: MinecaRTS.FogOfWarData.TeamHasExploredPos*
        name: TeamHasExploredPos
        nameWithType: FogOfWarData.TeamHasExploredPos
        qualifiedName: MinecaRTS.FogOfWarData.TeamHasExploredPos
      VB:
      - id: MinecaRTS.FogOfWarData.TeamHasExploredPos*
        name: TeamHasExploredPos
        nameWithType: FogOfWarData.TeamHasExploredPos
        qualifiedName: MinecaRTS.FogOfWarData.TeamHasExploredPos
    isDefinition: true
    commentId: Overload:MinecaRTS.FogOfWarData.TeamHasExploredPos
  MinecaRTS.FogOfWarData.BuildingAdded*:
    name:
      CSharp:
      - id: MinecaRTS.FogOfWarData.BuildingAdded*
        name: BuildingAdded
        nameWithType: FogOfWarData.BuildingAdded
        qualifiedName: MinecaRTS.FogOfWarData.BuildingAdded
      VB:
      - id: MinecaRTS.FogOfWarData.BuildingAdded*
        name: BuildingAdded
        nameWithType: FogOfWarData.BuildingAdded
        qualifiedName: MinecaRTS.FogOfWarData.BuildingAdded
    isDefinition: true
    commentId: Overload:MinecaRTS.FogOfWarData.BuildingAdded
  MinecaRTS.FogOfWarData.UnitMoved*:
    name:
      CSharp:
      - id: MinecaRTS.FogOfWarData.UnitMoved*
        name: UnitMoved
        nameWithType: FogOfWarData.UnitMoved
        qualifiedName: MinecaRTS.FogOfWarData.UnitMoved
      VB:
      - id: MinecaRTS.FogOfWarData.UnitMoved*
        name: UnitMoved
        nameWithType: FogOfWarData.UnitMoved
        qualifiedName: MinecaRTS.FogOfWarData.UnitMoved
    isDefinition: true
    commentId: Overload:MinecaRTS.FogOfWarData.UnitMoved
  MinecaRTS.FogOfWarData.UnitAdded*:
    name:
      CSharp:
      - id: MinecaRTS.FogOfWarData.UnitAdded*
        name: UnitAdded
        nameWithType: FogOfWarData.UnitAdded
        qualifiedName: MinecaRTS.FogOfWarData.UnitAdded
      VB:
      - id: MinecaRTS.FogOfWarData.UnitAdded*
        name: UnitAdded
        nameWithType: FogOfWarData.UnitAdded
        qualifiedName: MinecaRTS.FogOfWarData.UnitAdded
    isDefinition: true
    commentId: Overload:MinecaRTS.FogOfWarData.UnitAdded
  MinecaRTS.FogOfWarData:
    name:
      CSharp:
      - id: MinecaRTS.FogOfWarData
        name: FogOfWarData
        nameWithType: FogOfWarData
        qualifiedName: MinecaRTS.FogOfWarData
      VB:
      - id: MinecaRTS.FogOfWarData
        name: FogOfWarData
        nameWithType: FogOfWarData
        qualifiedName: MinecaRTS.FogOfWarData
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.FogOfWarData
  System.UInt64:
    name:
      CSharp:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
      VB:
      - id: System.UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: System.UInt64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt64
  MinecaRTS.Player.ID*:
    name:
      CSharp:
      - id: MinecaRTS.Player.ID*
        name: ID
        nameWithType: Player.ID
        qualifiedName: MinecaRTS.Player.ID
      VB:
      - id: MinecaRTS.Player.ID*
        name: ID
        nameWithType: Player.ID
        qualifiedName: MinecaRTS.Player.ID
    isDefinition: true
    commentId: Overload:MinecaRTS.Player.ID
  MinecaRTS.IHandleMessages.ID:
    name:
      CSharp:
      - id: MinecaRTS.IHandleMessages.ID
        name: ID
        nameWithType: IHandleMessages.ID
        qualifiedName: MinecaRTS.IHandleMessages.ID
      VB:
      - id: MinecaRTS.IHandleMessages.ID
        name: ID
        nameWithType: IHandleMessages.ID
        qualifiedName: MinecaRTS.IHandleMessages.ID
    isDefinition: true
    parent: MinecaRTS.IHandleMessages
    commentId: P:MinecaRTS.IHandleMessages.ID
  MinecaRTS.Player.Data*:
    name:
      CSharp:
      - id: MinecaRTS.Player.Data*
        name: Data
        nameWithType: Player.Data
        qualifiedName: MinecaRTS.Player.Data
      VB:
      - id: MinecaRTS.Player.Data*
        name: Data
        nameWithType: Player.Data
        qualifiedName: MinecaRTS.Player.Data
    isDefinition: true
    commentId: Overload:MinecaRTS.Player.Data
  MinecaRTS.Player.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Player.#ctor*
        name: Player
        nameWithType: Player.Player
        qualifiedName: MinecaRTS.Player.Player
      VB:
      - id: MinecaRTS.Player.#ctor*
        name: Player
        nameWithType: Player.Player
        qualifiedName: MinecaRTS.Player.Player
    isDefinition: true
    commentId: Overload:MinecaRTS.Player.#ctor
  MinecaRTS.Player.HandleInput*:
    name:
      CSharp:
      - id: MinecaRTS.Player.HandleInput*
        name: HandleInput
        nameWithType: Player.HandleInput
        qualifiedName: MinecaRTS.Player.HandleInput
      VB:
      - id: MinecaRTS.Player.HandleInput*
        name: HandleInput
        nameWithType: Player.HandleInput
        qualifiedName: MinecaRTS.Player.HandleInput
    isDefinition: true
    commentId: Overload:MinecaRTS.Player.HandleInput
  MinecaRTS.Player.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.Player.HandleMessage*
        name: HandleMessage
        nameWithType: Player.HandleMessage
        qualifiedName: MinecaRTS.Player.HandleMessage
      VB:
      - id: MinecaRTS.Player.HandleMessage*
        name: HandleMessage
        nameWithType: Player.HandleMessage
        qualifiedName: MinecaRTS.Player.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.Player.HandleMessage
  MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message):
    name:
      CSharp:
      - id: MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: IHandleMessages.HandleMessage
        qualifiedName: MinecaRTS.IHandleMessages.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: IHandleMessages.HandleMessage
        qualifiedName: MinecaRTS.IHandleMessages.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.IHandleMessages
    commentId: M:MinecaRTS.IHandleMessages.HandleMessage(MinecaRTS.Message)
  MinecaRTS.Player.Render*:
    name:
      CSharp:
      - id: MinecaRTS.Player.Render*
        name: Render
        nameWithType: Player.Render
        qualifiedName: MinecaRTS.Player.Render
      VB:
      - id: MinecaRTS.Player.Render*
        name: Render
        nameWithType: Player.Render
        qualifiedName: MinecaRTS.Player.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.Player.Render
  MinecaRTS.Bot.HandleMessage(MinecaRTS.Message):
    name:
      CSharp:
      - id: MinecaRTS.Bot.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: Bot.HandleMessage
        qualifiedName: MinecaRTS.Bot.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Bot.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: Bot.HandleMessage
        qualifiedName: MinecaRTS.Bot.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Bot
    commentId: M:MinecaRTS.Bot.HandleMessage(MinecaRTS.Message)
  MinecaRTS.Bot.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch):
    name:
      CSharp:
      - id: MinecaRTS.Bot.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: Bot.Render
        qualifiedName: MinecaRTS.Bot.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Bot.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: Bot.Render
        qualifiedName: MinecaRTS.Bot.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Bot
    commentId: M:MinecaRTS.Bot.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  MinecaRTS.MinecartO.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.MinecartO.#ctor*
        name: MinecartO
        nameWithType: MinecartO.MinecartO
        qualifiedName: MinecaRTS.MinecartO.MinecartO
      VB:
      - id: MinecaRTS.MinecartO.#ctor*
        name: MinecartO
        nameWithType: MinecartO.MinecartO
        qualifiedName: MinecaRTS.MinecartO.MinecartO
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecartO.#ctor
  MinecaRTS.Bot.HandleInput:
    name:
      CSharp:
      - id: MinecaRTS.Bot.HandleInput
        name: HandleInput
        nameWithType: Bot.HandleInput
        qualifiedName: MinecaRTS.Bot.HandleInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Bot.HandleInput
        name: HandleInput
        nameWithType: Bot.HandleInput
        qualifiedName: MinecaRTS.Bot.HandleInput
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Bot
    commentId: M:MinecaRTS.Bot.HandleInput
  MinecaRTS.MinecartO.HandleInput*:
    name:
      CSharp:
      - id: MinecaRTS.MinecartO.HandleInput*
        name: HandleInput
        nameWithType: MinecartO.HandleInput
        qualifiedName: MinecaRTS.MinecartO.HandleInput
      VB:
      - id: MinecaRTS.MinecartO.HandleInput*
        name: HandleInput
        nameWithType: MinecartO.HandleInput
        qualifiedName: MinecaRTS.MinecartO.HandleInput
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecartO.HandleInput
  MinecaRTS.Bot.OnUnitSpawn(MinecaRTS.Unit):
    name:
      CSharp:
      - id: MinecaRTS.Bot.OnUnitSpawn(MinecaRTS.Unit)
        name: OnUnitSpawn
        nameWithType: Bot.OnUnitSpawn
        qualifiedName: MinecaRTS.Bot.OnUnitSpawn
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: MinecaRTS.Unit
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Bot.OnUnitSpawn(MinecaRTS.Unit)
        name: OnUnitSpawn
        nameWithType: Bot.OnUnitSpawn
        qualifiedName: MinecaRTS.Bot.OnUnitSpawn
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: MinecaRTS.Unit
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Bot
    commentId: M:MinecaRTS.Bot.OnUnitSpawn(MinecaRTS.Unit)
  MinecaRTS.MinecartO.OnUnitSpawn*:
    name:
      CSharp:
      - id: MinecaRTS.MinecartO.OnUnitSpawn*
        name: OnUnitSpawn
        nameWithType: MinecartO.OnUnitSpawn
        qualifiedName: MinecaRTS.MinecartO.OnUnitSpawn
      VB:
      - id: MinecaRTS.MinecartO.OnUnitSpawn*
        name: OnUnitSpawn
        nameWithType: MinecartO.OnUnitSpawn
        qualifiedName: MinecaRTS.MinecartO.OnUnitSpawn
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecartO.OnUnitSpawn
  MinecaRTS.Bot.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding):
    name:
      CSharp:
      - id: MinecaRTS.Bot.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
        name: OnProductionBuildingTaskComplete
        nameWithType: Bot.OnProductionBuildingTaskComplete
        qualifiedName: MinecaRTS.Bot.OnProductionBuildingTaskComplete
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.ProductionBuilding
        name: ProductionBuilding
        nameWithType: ProductionBuilding
        qualifiedName: MinecaRTS.ProductionBuilding
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Bot.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
        name: OnProductionBuildingTaskComplete
        nameWithType: Bot.OnProductionBuildingTaskComplete
        qualifiedName: MinecaRTS.Bot.OnProductionBuildingTaskComplete
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.ProductionBuilding
        name: ProductionBuilding
        nameWithType: ProductionBuilding
        qualifiedName: MinecaRTS.ProductionBuilding
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Bot
    commentId: M:MinecaRTS.Bot.OnProductionBuildingTaskComplete(MinecaRTS.ProductionBuilding)
  MinecaRTS.MinecartO.OnProductionBuildingTaskComplete*:
    name:
      CSharp:
      - id: MinecaRTS.MinecartO.OnProductionBuildingTaskComplete*
        name: OnProductionBuildingTaskComplete
        nameWithType: MinecartO.OnProductionBuildingTaskComplete
        qualifiedName: MinecaRTS.MinecartO.OnProductionBuildingTaskComplete
      VB:
      - id: MinecaRTS.MinecartO.OnProductionBuildingTaskComplete*
        name: OnProductionBuildingTaskComplete
        nameWithType: MinecartO.OnProductionBuildingTaskComplete
        qualifiedName: MinecaRTS.MinecartO.OnProductionBuildingTaskComplete
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecartO.OnProductionBuildingTaskComplete
  MinecaRTS.Bot.OnSupplyChange:
    name:
      CSharp:
      - id: MinecaRTS.Bot.OnSupplyChange
        name: OnSupplyChange
        nameWithType: Bot.OnSupplyChange
        qualifiedName: MinecaRTS.Bot.OnSupplyChange
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Bot.OnSupplyChange
        name: OnSupplyChange
        nameWithType: Bot.OnSupplyChange
        qualifiedName: MinecaRTS.Bot.OnSupplyChange
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Bot
    commentId: M:MinecaRTS.Bot.OnSupplyChange
  MinecaRTS.MinecartO.OnSupplyChange*:
    name:
      CSharp:
      - id: MinecaRTS.MinecartO.OnSupplyChange*
        name: OnSupplyChange
        nameWithType: MinecartO.OnSupplyChange
        qualifiedName: MinecaRTS.MinecartO.OnSupplyChange
      VB:
      - id: MinecaRTS.MinecartO.OnSupplyChange*
        name: OnSupplyChange
        nameWithType: MinecartO.OnSupplyChange
        qualifiedName: MinecaRTS.MinecartO.OnSupplyChange
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecartO.OnSupplyChange
  MinecaRTS.Bot.OnBuildingComplete(MinecaRTS.Building):
    name:
      CSharp:
      - id: MinecaRTS.Bot.OnBuildingComplete(MinecaRTS.Building)
        name: OnBuildingComplete
        nameWithType: Bot.OnBuildingComplete
        qualifiedName: MinecaRTS.Bot.OnBuildingComplete
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Building
        name: Building
        nameWithType: Building
        qualifiedName: MinecaRTS.Building
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Bot.OnBuildingComplete(MinecaRTS.Building)
        name: OnBuildingComplete
        nameWithType: Bot.OnBuildingComplete
        qualifiedName: MinecaRTS.Bot.OnBuildingComplete
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Building
        name: Building
        nameWithType: Building
        qualifiedName: MinecaRTS.Building
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Bot
    commentId: M:MinecaRTS.Bot.OnBuildingComplete(MinecaRTS.Building)
  MinecaRTS.MinecartO.OnBuildingComplete*:
    name:
      CSharp:
      - id: MinecaRTS.MinecartO.OnBuildingComplete*
        name: OnBuildingComplete
        nameWithType: MinecartO.OnBuildingComplete
        qualifiedName: MinecaRTS.MinecartO.OnBuildingComplete
      VB:
      - id: MinecaRTS.MinecartO.OnBuildingComplete*
        name: OnBuildingComplete
        nameWithType: MinecartO.OnBuildingComplete
        qualifiedName: MinecaRTS.MinecartO.OnBuildingComplete
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecartO.OnBuildingComplete
  MinecaRTS.MinecartO:
    name:
      CSharp:
      - id: MinecaRTS.MinecartO
        name: MinecartO
        nameWithType: MinecartO
        qualifiedName: MinecaRTS.MinecartO
      VB:
      - id: MinecaRTS.MinecartO
        name: MinecartO
        nameWithType: MinecartO
        qualifiedName: MinecaRTS.MinecartO
    isDefinition: true
    commentId: T:MinecaRTS.MinecartO
  MinecaRTS.Panel:
    name:
      CSharp:
      - id: MinecaRTS.Panel
        name: Panel
        nameWithType: Panel
        qualifiedName: MinecaRTS.Panel
      VB:
      - id: MinecaRTS.Panel
        name: Panel
        nameWithType: Panel
        qualifiedName: MinecaRTS.Panel
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Panel
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  MinecaRTS.Button.Name*:
    name:
      CSharp:
      - id: MinecaRTS.Button.Name*
        name: Name
        nameWithType: Button.Name
        qualifiedName: MinecaRTS.Button.Name
      VB:
      - id: MinecaRTS.Button.Name*
        name: Name
        nameWithType: Button.Name
        qualifiedName: MinecaRTS.Button.Name
    isDefinition: true
    commentId: Overload:MinecaRTS.Button.Name
  Microsoft.Xna.Framework.Rectangle:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Rectangle
        name: Rectangle
        nameWithType: Rectangle
        qualifiedName: Microsoft.Xna.Framework.Rectangle
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Rectangle
        name: Rectangle
        nameWithType: Rectangle
        qualifiedName: Microsoft.Xna.Framework.Rectangle
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework
    commentId: T:Microsoft.Xna.Framework.Rectangle
  MinecaRTS.Button.RenderRect*:
    name:
      CSharp:
      - id: MinecaRTS.Button.RenderRect*
        name: RenderRect
        nameWithType: Button.RenderRect
        qualifiedName: MinecaRTS.Button.RenderRect
      VB:
      - id: MinecaRTS.Button.RenderRect*
        name: RenderRect
        nameWithType: Button.RenderRect
        qualifiedName: MinecaRTS.Button.RenderRect
    isDefinition: true
    commentId: Overload:MinecaRTS.Button.RenderRect
  MinecaRTS.Button.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Button.#ctor*
        name: Button
        nameWithType: Button.Button
        qualifiedName: MinecaRTS.Button.Button
      VB:
      - id: MinecaRTS.Button.#ctor*
        name: Button
        nameWithType: Button.Button
        qualifiedName: MinecaRTS.Button.Button
    isDefinition: true
    commentId: Overload:MinecaRTS.Button.#ctor
  MinecaRTS.Button.Render*:
    name:
      CSharp:
      - id: MinecaRTS.Button.Render*
        name: Render
        nameWithType: Button.Render
        qualifiedName: MinecaRTS.Button.Render
      VB:
      - id: MinecaRTS.Button.Render*
        name: Render
        nameWithType: Button.Render
        qualifiedName: MinecaRTS.Button.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.Button.Render
  MinecaRTS.Button:
    name:
      CSharp:
      - id: MinecaRTS.Button
        name: Button
        nameWithType: Button
        qualifiedName: MinecaRTS.Button
      VB:
      - id: MinecaRTS.Button
        name: Button
        nameWithType: Button
        qualifiedName: MinecaRTS.Button
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Button
  MinecaRTS.Building.ActiveTexture:
    name:
      CSharp:
      - id: MinecaRTS.Building.ActiveTexture
        name: ActiveTexture
        nameWithType: Building.ActiveTexture
        qualifiedName: MinecaRTS.Building.ActiveTexture
      VB:
      - id: MinecaRTS.Building.ActiveTexture
        name: ActiveTexture
        nameWithType: Building.ActiveTexture
        qualifiedName: MinecaRTS.Building.ActiveTexture
    isDefinition: true
    parent: MinecaRTS.Building
    commentId: P:MinecaRTS.Building.ActiveTexture
  MinecaRTS.Building.IsActive:
    name:
      CSharp:
      - id: MinecaRTS.Building.IsActive
        name: IsActive
        nameWithType: Building.IsActive
        qualifiedName: MinecaRTS.Building.IsActive
      VB:
      - id: MinecaRTS.Building.IsActive
        name: IsActive
        nameWithType: Building.IsActive
        qualifiedName: MinecaRTS.Building.IsActive
    isDefinition: true
    parent: MinecaRTS.Building
    commentId: P:MinecaRTS.Building.IsActive
  MinecaRTS.Building.Team:
    name:
      CSharp:
      - id: MinecaRTS.Building.Team
        name: Team
        nameWithType: Building.Team
        qualifiedName: MinecaRTS.Building.Team
      VB:
      - id: MinecaRTS.Building.Team
        name: Team
        nameWithType: Building.Team
        qualifiedName: MinecaRTS.Building.Team
    isDefinition: true
    parent: MinecaRTS.Building
    commentId: P:MinecaRTS.Building.Team
  MinecaRTS.Building.Construct:
    name:
      CSharp:
      - id: MinecaRTS.Building.Construct
        name: Construct
        nameWithType: Building.Construct
        qualifiedName: MinecaRTS.Building.Construct
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Building.Construct
        name: Construct
        nameWithType: Building.Construct
        qualifiedName: MinecaRTS.Building.Construct
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Building
    commentId: M:MinecaRTS.Building.Construct
  MinecaRTS.Building.Update:
    name:
      CSharp:
      - id: MinecaRTS.Building.Update
        name: Update
        nameWithType: Building.Update
        qualifiedName: MinecaRTS.Building.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Building.Update
        name: Update
        nameWithType: Building.Update
        qualifiedName: MinecaRTS.Building.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Building
    commentId: M:MinecaRTS.Building.Update
  MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch):
    name:
      CSharp:
      - id: MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: Building.Render
        qualifiedName: MinecaRTS.Building.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: Building.Render
        qualifiedName: MinecaRTS.Building.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Building
    commentId: M:MinecaRTS.Building.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32):
    name:
      CSharp:
      - id: MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32)
        name: QueueUpProductionAtIndex
        nameWithType: Building.QueueUpProductionAtIndex
        qualifiedName: MinecaRTS.Building.QueueUpProductionAtIndex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32)
        name: QueueUpProductionAtIndex
        nameWithType: Building.QueueUpProductionAtIndex
        qualifiedName: MinecaRTS.Building.QueueUpProductionAtIndex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Building
    commentId: M:MinecaRTS.Building.QueueUpProductionAtIndex(System.Int32)
  MinecaRTS.Building.ExitState:
    name:
      CSharp:
      - id: MinecaRTS.Building.ExitState
        name: ExitState
        nameWithType: Building.ExitState
        qualifiedName: MinecaRTS.Building.ExitState
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Building.ExitState
        name: ExitState
        nameWithType: Building.ExitState
        qualifiedName: MinecaRTS.Building.ExitState
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Building
    commentId: M:MinecaRTS.Building.ExitState
  MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch):
    name:
      CSharp:
      - id: MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: RenderDebug
        nameWithType: Building.RenderDebug
        qualifiedName: MinecaRTS.Building.RenderDebug
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: RenderDebug
        nameWithType: Building.RenderDebug
        qualifiedName: MinecaRTS.Building.RenderDebug
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Building
    commentId: M:MinecaRTS.Building.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  MinecaRTS.Entity:
    name:
      CSharp:
      - id: MinecaRTS.Entity
        name: Entity
        nameWithType: Entity
        qualifiedName: MinecaRTS.Entity
      VB:
      - id: MinecaRTS.Entity
        name: Entity
        nameWithType: Entity
        qualifiedName: MinecaRTS.Entity
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Entity
  MinecaRTS.Entity.Pos:
    name:
      CSharp:
      - id: MinecaRTS.Entity.Pos
        name: Pos
        nameWithType: Entity.Pos
        qualifiedName: MinecaRTS.Entity.Pos
      VB:
      - id: MinecaRTS.Entity.Pos
        name: Pos
        nameWithType: Entity.Pos
        qualifiedName: MinecaRTS.Entity.Pos
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: F:MinecaRTS.Entity.Pos
  MinecaRTS.Entity.Scale:
    name:
      CSharp:
      - id: MinecaRTS.Entity.Scale
        name: Scale
        nameWithType: Entity.Scale
        qualifiedName: MinecaRTS.Entity.Scale
      VB:
      - id: MinecaRTS.Entity.Scale
        name: Scale
        nameWithType: Entity.Scale
        qualifiedName: MinecaRTS.Entity.Scale
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: F:MinecaRTS.Entity.Scale
  MinecaRTS.Entity.ID:
    name:
      CSharp:
      - id: MinecaRTS.Entity.ID
        name: ID
        nameWithType: Entity.ID
        qualifiedName: MinecaRTS.Entity.ID
      VB:
      - id: MinecaRTS.Entity.ID
        name: ID
        nameWithType: Entity.ID
        qualifiedName: MinecaRTS.Entity.ID
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: P:MinecaRTS.Entity.ID
  MinecaRTS.Entity.RenderPos:
    name:
      CSharp:
      - id: MinecaRTS.Entity.RenderPos
        name: RenderPos
        nameWithType: Entity.RenderPos
        qualifiedName: MinecaRTS.Entity.RenderPos
      VB:
      - id: MinecaRTS.Entity.RenderPos
        name: RenderPos
        nameWithType: Entity.RenderPos
        qualifiedName: MinecaRTS.Entity.RenderPos
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: P:MinecaRTS.Entity.RenderPos
  MinecaRTS.Entity.CollisionRect:
    name:
      CSharp:
      - id: MinecaRTS.Entity.CollisionRect
        name: CollisionRect
        nameWithType: Entity.CollisionRect
        qualifiedName: MinecaRTS.Entity.CollisionRect
      VB:
      - id: MinecaRTS.Entity.CollisionRect
        name: CollisionRect
        nameWithType: Entity.CollisionRect
        qualifiedName: MinecaRTS.Entity.CollisionRect
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: P:MinecaRTS.Entity.CollisionRect
  MinecaRTS.Entity.RenderRect:
    name:
      CSharp:
      - id: MinecaRTS.Entity.RenderRect
        name: RenderRect
        nameWithType: Entity.RenderRect
        qualifiedName: MinecaRTS.Entity.RenderRect
      VB:
      - id: MinecaRTS.Entity.RenderRect
        name: RenderRect
        nameWithType: Entity.RenderRect
        qualifiedName: MinecaRTS.Entity.RenderRect
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: P:MinecaRTS.Entity.RenderRect
  MinecaRTS.Entity.Mid:
    name:
      CSharp:
      - id: MinecaRTS.Entity.Mid
        name: Mid
        nameWithType: Entity.Mid
        qualifiedName: MinecaRTS.Entity.Mid
      VB:
      - id: MinecaRTS.Entity.Mid
        name: Mid
        nameWithType: Entity.Mid
        qualifiedName: MinecaRTS.Entity.Mid
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: P:MinecaRTS.Entity.Mid
  MinecaRTS.Entity.RenderMid:
    name:
      CSharp:
      - id: MinecaRTS.Entity.RenderMid
        name: RenderMid
        nameWithType: Entity.RenderMid
        qualifiedName: MinecaRTS.Entity.RenderMid
      VB:
      - id: MinecaRTS.Entity.RenderMid
        name: RenderMid
        nameWithType: Entity.RenderMid
        qualifiedName: MinecaRTS.Entity.RenderMid
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: P:MinecaRTS.Entity.RenderMid
  MinecaRTS.IRenderable:
    name:
      CSharp:
      - id: MinecaRTS.IRenderable
        name: IRenderable
        nameWithType: IRenderable
        qualifiedName: MinecaRTS.IRenderable
      VB:
      - id: MinecaRTS.IRenderable
        name: IRenderable
        nameWithType: IRenderable
        qualifiedName: MinecaRTS.IRenderable
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.IRenderable
  MinecaRTS.ICanAcceptResources:
    name:
      CSharp:
      - id: MinecaRTS.ICanAcceptResources
        name: ICanAcceptResources
        nameWithType: ICanAcceptResources
        qualifiedName: MinecaRTS.ICanAcceptResources
      VB:
      - id: MinecaRTS.ICanAcceptResources
        name: ICanAcceptResources
        nameWithType: ICanAcceptResources
        qualifiedName: MinecaRTS.ICanAcceptResources
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.ICanAcceptResources
  Microsoft.Xna.Framework.Graphics.Texture2D:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Graphics.Texture2D
        name: Texture2D
        nameWithType: Texture2D
        qualifiedName: Microsoft.Xna.Framework.Graphics.Texture2D
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Graphics.Texture2D
        name: Texture2D
        nameWithType: Texture2D
        qualifiedName: Microsoft.Xna.Framework.Graphics.Texture2D
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Graphics
    commentId: T:Microsoft.Xna.Framework.Graphics.Texture2D
  System.UInt32:
    name:
      CSharp:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      VB:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt32
  MinecaRTS.DepositBox.Wood*:
    name:
      CSharp:
      - id: MinecaRTS.DepositBox.Wood*
        name: Wood
        nameWithType: DepositBox.Wood
        qualifiedName: MinecaRTS.DepositBox.Wood
      VB:
      - id: MinecaRTS.DepositBox.Wood*
        name: Wood
        nameWithType: DepositBox.Wood
        qualifiedName: MinecaRTS.DepositBox.Wood
    isDefinition: true
    commentId: Overload:MinecaRTS.DepositBox.Wood
  MinecaRTS.DepositBox.Stone*:
    name:
      CSharp:
      - id: MinecaRTS.DepositBox.Stone*
        name: Stone
        nameWithType: DepositBox.Stone
        qualifiedName: MinecaRTS.DepositBox.Stone
      VB:
      - id: MinecaRTS.DepositBox.Stone*
        name: Stone
        nameWithType: DepositBox.Stone
        qualifiedName: MinecaRTS.DepositBox.Stone
    isDefinition: true
    commentId: Overload:MinecaRTS.DepositBox.Stone
  MinecaRTS.DepositBox.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.DepositBox.#ctor*
        name: DepositBox
        nameWithType: DepositBox.DepositBox
        qualifiedName: MinecaRTS.DepositBox.DepositBox
      VB:
      - id: MinecaRTS.DepositBox.#ctor*
        name: DepositBox
        nameWithType: DepositBox.DepositBox
        qualifiedName: MinecaRTS.DepositBox.DepositBox
    isDefinition: true
    commentId: Overload:MinecaRTS.DepositBox.#ctor
  MinecaRTS.DepositBox.AcceptResources*:
    name:
      CSharp:
      - id: MinecaRTS.DepositBox.AcceptResources*
        name: AcceptResources
        nameWithType: DepositBox.AcceptResources
        qualifiedName: MinecaRTS.DepositBox.AcceptResources
      VB:
      - id: MinecaRTS.DepositBox.AcceptResources*
        name: AcceptResources
        nameWithType: DepositBox.AcceptResources
        qualifiedName: MinecaRTS.DepositBox.AcceptResources
    isDefinition: true
    commentId: Overload:MinecaRTS.DepositBox.AcceptResources
  MinecaRTS.ICanAcceptResources.AcceptResources(System.UInt32,System.UInt32):
    name:
      CSharp:
      - id: MinecaRTS.ICanAcceptResources.AcceptResources(System.UInt32,System.UInt32)
        name: AcceptResources
        nameWithType: ICanAcceptResources.AcceptResources
        qualifiedName: MinecaRTS.ICanAcceptResources.AcceptResources
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.ICanAcceptResources.AcceptResources(System.UInt32,System.UInt32)
        name: AcceptResources
        nameWithType: ICanAcceptResources.AcceptResources
        qualifiedName: MinecaRTS.ICanAcceptResources.AcceptResources
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.ICanAcceptResources
    commentId: M:MinecaRTS.ICanAcceptResources.AcceptResources(System.UInt32,System.UInt32)
  MinecaRTS.Building.HandleMessage(MinecaRTS.Message):
    name:
      CSharp:
      - id: MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: Building.HandleMessage
        qualifiedName: MinecaRTS.Building.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: Building.HandleMessage
        qualifiedName: MinecaRTS.Building.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Building
    commentId: M:MinecaRTS.Building.HandleMessage(MinecaRTS.Message)
  MinecaRTS.DepositBox.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.DepositBox.HandleMessage*
        name: HandleMessage
        nameWithType: DepositBox.HandleMessage
        qualifiedName: MinecaRTS.DepositBox.HandleMessage
      VB:
      - id: MinecaRTS.DepositBox.HandleMessage*
        name: HandleMessage
        nameWithType: DepositBox.HandleMessage
        qualifiedName: MinecaRTS.DepositBox.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.DepositBox.HandleMessage
  MinecaRTS.DepositBox:
    name:
      CSharp:
      - id: MinecaRTS.DepositBox
        name: DepositBox
        nameWithType: DepositBox
        qualifiedName: MinecaRTS.DepositBox
      VB:
      - id: MinecaRTS.DepositBox
        name: DepositBox
        nameWithType: DepositBox
        qualifiedName: MinecaRTS.DepositBox
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.DepositBox
  MinecaRTS.IHandleMessages.ID*:
    name:
      CSharp:
      - id: MinecaRTS.IHandleMessages.ID*
        name: ID
        nameWithType: IHandleMessages.ID
        qualifiedName: MinecaRTS.IHandleMessages.ID
      VB:
      - id: MinecaRTS.IHandleMessages.ID*
        name: ID
        nameWithType: IHandleMessages.ID
        qualifiedName: MinecaRTS.IHandleMessages.ID
    isDefinition: true
    commentId: Overload:MinecaRTS.IHandleMessages.ID
  MinecaRTS.IHandleMessages.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.IHandleMessages.HandleMessage*
        name: HandleMessage
        nameWithType: IHandleMessages.HandleMessage
        qualifiedName: MinecaRTS.IHandleMessages.HandleMessage
      VB:
      - id: MinecaRTS.IHandleMessages.HandleMessage*
        name: HandleMessage
        nameWithType: IHandleMessages.HandleMessage
        qualifiedName: MinecaRTS.IHandleMessages.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.IHandleMessages.HandleMessage
  MinecaRTS.Unit.NEIGHBOUR_RADIUS:
    name:
      CSharp:
      - id: MinecaRTS.Unit.NEIGHBOUR_RADIUS
        name: NEIGHBOUR_RADIUS
        nameWithType: Unit.NEIGHBOUR_RADIUS
        qualifiedName: MinecaRTS.Unit.NEIGHBOUR_RADIUS
      VB:
      - id: MinecaRTS.Unit.NEIGHBOUR_RADIUS
        name: NEIGHBOUR_RADIUS
        nameWithType: Unit.NEIGHBOUR_RADIUS
        qualifiedName: MinecaRTS.Unit.NEIGHBOUR_RADIUS
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: F:MinecaRTS.Unit.NEIGHBOUR_RADIUS
  MinecaRTS.Unit.lastHeading:
    name:
      CSharp:
      - id: MinecaRTS.Unit.lastHeading
        name: lastHeading
        nameWithType: Unit.lastHeading
        qualifiedName: MinecaRTS.Unit.lastHeading
      VB:
      - id: MinecaRTS.Unit.lastHeading
        name: lastHeading
        nameWithType: Unit.lastHeading
        qualifiedName: MinecaRTS.Unit.lastHeading
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: F:MinecaRTS.Unit.lastHeading
  MinecaRTS.Unit.heading:
    name:
      CSharp:
      - id: MinecaRTS.Unit.heading
        name: heading
        nameWithType: Unit.heading
        qualifiedName: MinecaRTS.Unit.heading
      VB:
      - id: MinecaRTS.Unit.heading
        name: heading
        nameWithType: Unit.heading
        qualifiedName: MinecaRTS.Unit.heading
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: F:MinecaRTS.Unit.heading
  MinecaRTS.Unit.Speed:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Speed
        name: Speed
        nameWithType: Unit.Speed
        qualifiedName: MinecaRTS.Unit.Speed
      VB:
      - id: MinecaRTS.Unit.Speed
        name: Speed
        nameWithType: Unit.Speed
        qualifiedName: MinecaRTS.Unit.Speed
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: P:MinecaRTS.Unit.Speed
  MinecaRTS.Unit.Team:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Team
        name: Team
        nameWithType: Unit.Team
        qualifiedName: MinecaRTS.Unit.Team
      VB:
      - id: MinecaRTS.Unit.Team
        name: Team
        nameWithType: Unit.Team
        qualifiedName: MinecaRTS.Unit.Team
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: P:MinecaRTS.Unit.Team
  MinecaRTS.Unit.Vel:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Vel
        name: Vel
        nameWithType: Unit.Vel
        qualifiedName: MinecaRTS.Unit.Vel
      VB:
      - id: MinecaRTS.Unit.Vel
        name: Vel
        nameWithType: Unit.Vel
        qualifiedName: MinecaRTS.Unit.Vel
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: F:MinecaRTS.Unit.Vel
  MinecaRTS.Unit.pathHandler:
    name:
      CSharp:
      - id: MinecaRTS.Unit.pathHandler
        name: pathHandler
        nameWithType: Unit.pathHandler
        qualifiedName: MinecaRTS.Unit.pathHandler
      VB:
      - id: MinecaRTS.Unit.pathHandler
        name: pathHandler
        nameWithType: Unit.pathHandler
        qualifiedName: MinecaRTS.Unit.pathHandler
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: F:MinecaRTS.Unit.pathHandler
  MinecaRTS.Unit.lastMid:
    name:
      CSharp:
      - id: MinecaRTS.Unit.lastMid
        name: lastMid
        nameWithType: Unit.lastMid
        qualifiedName: MinecaRTS.Unit.lastMid
      VB:
      - id: MinecaRTS.Unit.lastMid
        name: lastMid
        nameWithType: Unit.lastMid
        qualifiedName: MinecaRTS.Unit.lastMid
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: F:MinecaRTS.Unit.lastMid
  MinecaRTS.Unit.Data:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Data
        name: Data
        nameWithType: Unit.Data
        qualifiedName: MinecaRTS.Unit.Data
      VB:
      - id: MinecaRTS.Unit.Data
        name: Data
        nameWithType: Unit.Data
        qualifiedName: MinecaRTS.Unit.Data
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: P:MinecaRTS.Unit.Data
  MinecaRTS.Unit.Steering:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Steering
        name: Steering
        nameWithType: Unit.Steering
        qualifiedName: MinecaRTS.Unit.Steering
      VB:
      - id: MinecaRTS.Unit.Steering
        name: Steering
        nameWithType: Unit.Steering
        qualifiedName: MinecaRTS.Unit.Steering
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: P:MinecaRTS.Unit.Steering
  MinecaRTS.Unit.animation:
    name:
      CSharp:
      - id: MinecaRTS.Unit.animation
        name: animation
        nameWithType: Unit.animation
        qualifiedName: MinecaRTS.Unit.animation
      VB:
      - id: MinecaRTS.Unit.animation
        name: animation
        nameWithType: Unit.animation
        qualifiedName: MinecaRTS.Unit.animation
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: F:MinecaRTS.Unit.animation
  MinecaRTS.Unit.FollowPath:
    name:
      CSharp:
      - id: MinecaRTS.Unit.FollowPath
        name: FollowPath
        nameWithType: Unit.FollowPath
        qualifiedName: MinecaRTS.Unit.FollowPath
      VB:
      - id: MinecaRTS.Unit.FollowPath
        name: FollowPath
        nameWithType: Unit.FollowPath
        qualifiedName: MinecaRTS.Unit.FollowPath
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: P:MinecaRTS.Unit.FollowPath
  MinecaRTS.Unit.Stop:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Stop
        name: Stop
        nameWithType: Unit.Stop
        qualifiedName: MinecaRTS.Unit.Stop
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Unit.Stop
        name: Stop
        nameWithType: Unit.Stop
        qualifiedName: MinecaRTS.Unit.Stop
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: M:MinecaRTS.Unit.Stop
  MinecaRTS.Unit.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch):
    name:
      CSharp:
      - id: MinecaRTS.Unit.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: Unit.Render
        qualifiedName: MinecaRTS.Unit.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Unit.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: Unit.Render
        qualifiedName: MinecaRTS.Unit.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: M:MinecaRTS.Unit.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  MinecaRTS.Unit.HandleMessage(MinecaRTS.Message):
    name:
      CSharp:
      - id: MinecaRTS.Unit.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: Unit.HandleMessage
        qualifiedName: MinecaRTS.Unit.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Unit.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: Unit.HandleMessage
        qualifiedName: MinecaRTS.Unit.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: M:MinecaRTS.Unit.HandleMessage(MinecaRTS.Message)
  MinecaRTS.SpriteSheet:
    name:
      CSharp:
      - id: MinecaRTS.SpriteSheet
        name: SpriteSheet
        nameWithType: SpriteSheet
        qualifiedName: MinecaRTS.SpriteSheet
      VB:
      - id: MinecaRTS.SpriteSheet
        name: SpriteSheet
        nameWithType: SpriteSheet
        qualifiedName: MinecaRTS.SpriteSheet
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.SpriteSheet
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{MinecaRTS.Dir,System.Collections.Generic.List{MinecaRTS.Frame}}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Dir
        name: Dir
        nameWithType: Dir
        qualifiedName: MinecaRTS.Dir
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Frame
        name: Frame
        nameWithType: Frame
        qualifiedName: MinecaRTS.Frame
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Dir
        name: Dir
        nameWithType: Dir
        qualifiedName: MinecaRTS.Dir
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Frame
        name: Frame
        nameWithType: Frame
        qualifiedName: MinecaRTS.Frame
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{MinecaRTS.Dir,System.Collections.Generic.List{MinecaRTS.Frame}}
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  MinecaRTS.TownHall:
    name:
      CSharp:
      - id: MinecaRTS.TownHall
        name: TownHall
        nameWithType: TownHall
        qualifiedName: MinecaRTS.TownHall
      VB:
      - id: MinecaRTS.TownHall
        name: TownHall
        nameWithType: TownHall
        qualifiedName: MinecaRTS.TownHall
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.TownHall
  MinecaRTS.Minecart.Wood*:
    name:
      CSharp:
      - id: MinecaRTS.Minecart.Wood*
        name: Wood
        nameWithType: Minecart.Wood
        qualifiedName: MinecaRTS.Minecart.Wood
      VB:
      - id: MinecaRTS.Minecart.Wood*
        name: Wood
        nameWithType: Minecart.Wood
        qualifiedName: MinecaRTS.Minecart.Wood
    isDefinition: true
    commentId: Overload:MinecaRTS.Minecart.Wood
  MinecaRTS.Minecart.Stone*:
    name:
      CSharp:
      - id: MinecaRTS.Minecart.Stone*
        name: Stone
        nameWithType: Minecart.Stone
        qualifiedName: MinecaRTS.Minecart.Stone
      VB:
      - id: MinecaRTS.Minecart.Stone*
        name: Stone
        nameWithType: Minecart.Stone
        qualifiedName: MinecaRTS.Minecart.Stone
    isDefinition: true
    commentId: Overload:MinecaRTS.Minecart.Stone
  MinecaRTS.StateMachine`1:
    name:
      CSharp:
      - id: MinecaRTS.StateMachine`1
        name: StateMachine
        nameWithType: StateMachine
        qualifiedName: MinecaRTS.StateMachine
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: MinecaRTS.StateMachine`1
        name: StateMachine
        nameWithType: StateMachine
        qualifiedName: MinecaRTS.StateMachine
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:MinecaRTS.StateMachine`1
  MinecaRTS.StateMachine{MinecaRTS.Minecart}:
    name:
      CSharp:
      - id: MinecaRTS.StateMachine`1
        name: StateMachine
        nameWithType: StateMachine
        qualifiedName: MinecaRTS.StateMachine
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: MinecaRTS.StateMachine`1
        name: StateMachine
        nameWithType: StateMachine
        qualifiedName: MinecaRTS.StateMachine
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: MinecaRTS.StateMachine`1
    parent: MinecaRTS
    commentId: T:MinecaRTS.StateMachine{MinecaRTS.Minecart}
  MinecaRTS.Minecart.FSM*:
    name:
      CSharp:
      - id: MinecaRTS.Minecart.FSM*
        name: FSM
        nameWithType: Minecart.FSM
        qualifiedName: MinecaRTS.Minecart.FSM
      VB:
      - id: MinecaRTS.Minecart.FSM*
        name: FSM
        nameWithType: Minecart.FSM
        qualifiedName: MinecaRTS.Minecart.FSM
    isDefinition: true
    commentId: Overload:MinecaRTS.Minecart.FSM
  MinecaRTS.Minecart.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Minecart.#ctor*
        name: Minecart
        nameWithType: Minecart.Minecart
        qualifiedName: MinecaRTS.Minecart.Minecart
      VB:
      - id: MinecaRTS.Minecart.#ctor*
        name: Minecart
        nameWithType: Minecart.Minecart
        qualifiedName: MinecaRTS.Minecart.Minecart
    isDefinition: true
    commentId: Overload:MinecaRTS.Minecart.#ctor
  MinecaRTS.Unit.Update:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Update
        name: Update
        nameWithType: Unit.Update
        qualifiedName: MinecaRTS.Unit.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Unit.Update
        name: Update
        nameWithType: Unit.Update
        qualifiedName: MinecaRTS.Unit.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: M:MinecaRTS.Unit.Update
  MinecaRTS.Minecart.Update*:
    name:
      CSharp:
      - id: MinecaRTS.Minecart.Update*
        name: Update
        nameWithType: Minecart.Update
        qualifiedName: MinecaRTS.Minecart.Update
      VB:
      - id: MinecaRTS.Minecart.Update*
        name: Update
        nameWithType: Minecart.Update
        qualifiedName: MinecaRTS.Minecart.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.Minecart.Update
  MinecaRTS.Minecart.EmptySelf*:
    name:
      CSharp:
      - id: MinecaRTS.Minecart.EmptySelf*
        name: EmptySelf
        nameWithType: Minecart.EmptySelf
        qualifiedName: MinecaRTS.Minecart.EmptySelf
      VB:
      - id: MinecaRTS.Minecart.EmptySelf*
        name: EmptySelf
        nameWithType: Minecart.EmptySelf
        qualifiedName: MinecaRTS.Minecart.EmptySelf
    isDefinition: true
    commentId: Overload:MinecaRTS.Minecart.EmptySelf
  MinecaRTS.Unit.MoveTowards(Microsoft.Xna.Framework.Vector2):
    name:
      CSharp:
      - id: MinecaRTS.Unit.MoveTowards(Microsoft.Xna.Framework.Vector2)
        name: MoveTowards
        nameWithType: Unit.MoveTowards
        qualifiedName: MinecaRTS.Unit.MoveTowards
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Microsoft.Xna.Framework.Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Unit.MoveTowards(Microsoft.Xna.Framework.Vector2)
        name: MoveTowards
        nameWithType: Unit.MoveTowards
        qualifiedName: MinecaRTS.Unit.MoveTowards
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Microsoft.Xna.Framework.Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: M:MinecaRTS.Unit.MoveTowards(Microsoft.Xna.Framework.Vector2)
  MinecaRTS.Minecart.MoveTowards*:
    name:
      CSharp:
      - id: MinecaRTS.Minecart.MoveTowards*
        name: MoveTowards
        nameWithType: Minecart.MoveTowards
        qualifiedName: MinecaRTS.Minecart.MoveTowards
      VB:
      - id: MinecaRTS.Minecart.MoveTowards*
        name: MoveTowards
        nameWithType: Minecart.MoveTowards
        qualifiedName: MinecaRTS.Minecart.MoveTowards
    isDefinition: true
    commentId: Overload:MinecaRTS.Minecart.MoveTowards
  MinecaRTS.Minecart.AcceptResources*:
    name:
      CSharp:
      - id: MinecaRTS.Minecart.AcceptResources*
        name: AcceptResources
        nameWithType: Minecart.AcceptResources
        qualifiedName: MinecaRTS.Minecart.AcceptResources
      VB:
      - id: MinecaRTS.Minecart.AcceptResources*
        name: AcceptResources
        nameWithType: Minecart.AcceptResources
        qualifiedName: MinecaRTS.Minecart.AcceptResources
    isDefinition: true
    commentId: Overload:MinecaRTS.Minecart.AcceptResources
  MinecaRTS.Unit.ExitState:
    name:
      CSharp:
      - id: MinecaRTS.Unit.ExitState
        name: ExitState
        nameWithType: Unit.ExitState
        qualifiedName: MinecaRTS.Unit.ExitState
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Unit.ExitState
        name: ExitState
        nameWithType: Unit.ExitState
        qualifiedName: MinecaRTS.Unit.ExitState
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: M:MinecaRTS.Unit.ExitState
  MinecaRTS.Minecart.ExitState*:
    name:
      CSharp:
      - id: MinecaRTS.Minecart.ExitState*
        name: ExitState
        nameWithType: Minecart.ExitState
        qualifiedName: MinecaRTS.Minecart.ExitState
      VB:
      - id: MinecaRTS.Minecart.ExitState*
        name: ExitState
        nameWithType: Minecart.ExitState
        qualifiedName: MinecaRTS.Minecart.ExitState
    isDefinition: true
    commentId: Overload:MinecaRTS.Minecart.ExitState
  MinecaRTS.Unit.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch):
    name:
      CSharp:
      - id: MinecaRTS.Unit.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: RenderDebug
        nameWithType: Unit.RenderDebug
        qualifiedName: MinecaRTS.Unit.RenderDebug
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Unit.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: RenderDebug
        nameWithType: Unit.RenderDebug
        qualifiedName: MinecaRTS.Unit.RenderDebug
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Unit
    commentId: M:MinecaRTS.Unit.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  MinecaRTS.Minecart.RenderDebug*:
    name:
      CSharp:
      - id: MinecaRTS.Minecart.RenderDebug*
        name: RenderDebug
        nameWithType: Minecart.RenderDebug
        qualifiedName: MinecaRTS.Minecart.RenderDebug
      VB:
      - id: MinecaRTS.Minecart.RenderDebug*
        name: RenderDebug
        nameWithType: Minecart.RenderDebug
        qualifiedName: MinecaRTS.Minecart.RenderDebug
    isDefinition: true
    commentId: Overload:MinecaRTS.Minecart.RenderDebug
  MinecaRTS.Minecart:
    name:
      CSharp:
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      VB:
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Minecart
  MinecaRTS.PathHandler:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler
        name: PathHandler
        nameWithType: PathHandler
        qualifiedName: MinecaRTS.PathHandler
      VB:
      - id: MinecaRTS.PathHandler
        name: PathHandler
        nameWithType: PathHandler
        qualifiedName: MinecaRTS.PathHandler
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.PathHandler
  MinecaRTS.PathHandler.owner:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.owner
        name: owner
        nameWithType: PathHandler.owner
        qualifiedName: MinecaRTS.PathHandler.owner
      VB:
      - id: MinecaRTS.PathHandler.owner
        name: owner
        nameWithType: PathHandler.owner
        qualifiedName: MinecaRTS.PathHandler.owner
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: F:MinecaRTS.PathHandler.owner
  MinecaRTS.PathHandler.Owner:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.Owner
        name: Owner
        nameWithType: PathHandler.Owner
        qualifiedName: MinecaRTS.PathHandler.Owner
      VB:
      - id: MinecaRTS.PathHandler.Owner
        name: Owner
        nameWithType: PathHandler.Owner
        qualifiedName: MinecaRTS.PathHandler.Owner
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: P:MinecaRTS.PathHandler.Owner
  MinecaRTS.PathHandler.buildingPathingTowards:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.buildingPathingTowards
        name: buildingPathingTowards
        nameWithType: PathHandler.buildingPathingTowards
        qualifiedName: MinecaRTS.PathHandler.buildingPathingTowards
      VB:
      - id: MinecaRTS.PathHandler.buildingPathingTowards
        name: buildingPathingTowards
        nameWithType: PathHandler.buildingPathingTowards
        qualifiedName: MinecaRTS.PathHandler.buildingPathingTowards
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: F:MinecaRTS.PathHandler.buildingPathingTowards
  MinecaRTS.PathHandler.ID:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.ID
        name: ID
        nameWithType: PathHandler.ID
        qualifiedName: MinecaRTS.PathHandler.ID
      VB:
      - id: MinecaRTS.PathHandler.ID
        name: ID
        nameWithType: PathHandler.ID
        qualifiedName: MinecaRTS.PathHandler.ID
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: P:MinecaRTS.PathHandler.ID
  MinecaRTS.PathHandler.pathfinder:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.pathfinder
        name: pathfinder
        nameWithType: PathHandler.pathfinder
        qualifiedName: MinecaRTS.PathHandler.pathfinder
      VB:
      - id: MinecaRTS.PathHandler.pathfinder
        name: pathfinder
        nameWithType: PathHandler.pathfinder
        qualifiedName: MinecaRTS.PathHandler.pathfinder
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: F:MinecaRTS.PathHandler.pathfinder
  MinecaRTS.PathHandler.grid:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.grid
        name: grid
        nameWithType: PathHandler.grid
        qualifiedName: MinecaRTS.PathHandler.grid
      VB:
      - id: MinecaRTS.PathHandler.grid
        name: grid
        nameWithType: PathHandler.grid
        qualifiedName: MinecaRTS.PathHandler.grid
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: F:MinecaRTS.PathHandler.grid
  MinecaRTS.PathHandler.path:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.path
        name: path
        nameWithType: PathHandler.path
        qualifiedName: MinecaRTS.PathHandler.path
      VB:
      - id: MinecaRTS.PathHandler.path
        name: path
        nameWithType: PathHandler.path
        qualifiedName: MinecaRTS.PathHandler.path
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: F:MinecaRTS.PathHandler.path
  MinecaRTS.PathHandler.pathIndex:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.pathIndex
        name: pathIndex
        nameWithType: PathHandler.pathIndex
        qualifiedName: MinecaRTS.PathHandler.pathIndex
      VB:
      - id: MinecaRTS.PathHandler.pathIndex
        name: pathIndex
        nameWithType: PathHandler.pathIndex
        qualifiedName: MinecaRTS.PathHandler.pathIndex
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: F:MinecaRTS.PathHandler.pathIndex
  MinecaRTS.PathHandler.estimatedTicksToReachNextCell:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.estimatedTicksToReachNextCell
        name: estimatedTicksToReachNextCell
        nameWithType: PathHandler.estimatedTicksToReachNextCell
        qualifiedName: MinecaRTS.PathHandler.estimatedTicksToReachNextCell
      VB:
      - id: MinecaRTS.PathHandler.estimatedTicksToReachNextCell
        name: estimatedTicksToReachNextCell
        nameWithType: PathHandler.estimatedTicksToReachNextCell
        qualifiedName: MinecaRTS.PathHandler.estimatedTicksToReachNextCell
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: F:MinecaRTS.PathHandler.estimatedTicksToReachNextCell
  MinecaRTS.PathHandler.ticksSpentTravellingToCell:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.ticksSpentTravellingToCell
        name: ticksSpentTravellingToCell
        nameWithType: PathHandler.ticksSpentTravellingToCell
        qualifiedName: MinecaRTS.PathHandler.ticksSpentTravellingToCell
      VB:
      - id: MinecaRTS.PathHandler.ticksSpentTravellingToCell
        name: ticksSpentTravellingToCell
        nameWithType: PathHandler.ticksSpentTravellingToCell
        qualifiedName: MinecaRTS.PathHandler.ticksSpentTravellingToCell
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: F:MinecaRTS.PathHandler.ticksSpentTravellingToCell
  MinecaRTS.PathHandler.HasPath:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.HasPath
        name: HasPath
        nameWithType: PathHandler.HasPath
        qualifiedName: MinecaRTS.PathHandler.HasPath
      VB:
      - id: MinecaRTS.PathHandler.HasPath
        name: HasPath
        nameWithType: PathHandler.HasPath
        qualifiedName: MinecaRTS.PathHandler.HasPath
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: P:MinecaRTS.PathHandler.HasPath
  MinecaRTS.PathHandler.TargetCell:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.TargetCell
        name: TargetCell
        nameWithType: PathHandler.TargetCell
        qualifiedName: MinecaRTS.PathHandler.TargetCell
      VB:
      - id: MinecaRTS.PathHandler.TargetCell
        name: TargetCell
        nameWithType: PathHandler.TargetCell
        qualifiedName: MinecaRTS.PathHandler.TargetCell
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: P:MinecaRTS.PathHandler.TargetCell
  MinecaRTS.PathHandler.Update:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.Update
        name: Update
        nameWithType: PathHandler.Update
        qualifiedName: MinecaRTS.PathHandler.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.Update
        name: Update
        nameWithType: PathHandler.Update
        qualifiedName: MinecaRTS.PathHandler.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.Update
  MinecaRTS.PathHandler.GetEstimatedTicksToReachCell(MinecaRTS.Cell):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell(MinecaRTS.Cell)
        name: GetEstimatedTicksToReachCell
        nameWithType: PathHandler.GetEstimatedTicksToReachCell
        qualifiedName: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell(MinecaRTS.Cell)
        name: GetEstimatedTicksToReachCell
        nameWithType: PathHandler.GetEstimatedTicksToReachCell
        qualifiedName: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.GetEstimatedTicksToReachCell(MinecaRTS.Cell)
  MinecaRTS.PathHandler.FinalisePath:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.FinalisePath
        name: FinalisePath
        nameWithType: PathHandler.FinalisePath
        qualifiedName: MinecaRTS.PathHandler.FinalisePath
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.FinalisePath
        name: FinalisePath
        nameWithType: PathHandler.FinalisePath
        qualifiedName: MinecaRTS.PathHandler.FinalisePath
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.FinalisePath
  MinecaRTS.PathHandler.RenderPath(Microsoft.Xna.Framework.Graphics.SpriteBatch):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.RenderPath(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: RenderPath
        nameWithType: PathHandler.RenderPath
        qualifiedName: MinecaRTS.PathHandler.RenderPath
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.RenderPath(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: RenderPath
        nameWithType: PathHandler.RenderPath
        qualifiedName: MinecaRTS.PathHandler.RenderPath
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.RenderPath(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  MinecaRTS.PathHandler.TrackScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.TrackScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
        name: TrackScoreMethod
        nameWithType: PathHandler.TrackScoreMethod
        qualifiedName: MinecaRTS.PathHandler.TrackScoreMethod
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.TrackScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
        name: TrackScoreMethod
        nameWithType: PathHandler.TrackScoreMethod
        qualifiedName: MinecaRTS.PathHandler.TrackScoreMethod
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.TrackScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
  MinecaRTS.PathHandler.ConsiderationConditionWood(MinecaRTS.Cell):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.ConsiderationConditionWood(MinecaRTS.Cell)
        name: ConsiderationConditionWood
        nameWithType: PathHandler.ConsiderationConditionWood
        qualifiedName: MinecaRTS.PathHandler.ConsiderationConditionWood
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.ConsiderationConditionWood(MinecaRTS.Cell)
        name: ConsiderationConditionWood
        nameWithType: PathHandler.ConsiderationConditionWood
        qualifiedName: MinecaRTS.PathHandler.ConsiderationConditionWood
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.ConsiderationConditionWood(MinecaRTS.Cell)
  MinecaRTS.PathHandler.ConsiderationConditionStone(MinecaRTS.Cell):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.ConsiderationConditionStone(MinecaRTS.Cell)
        name: ConsiderationConditionStone
        nameWithType: PathHandler.ConsiderationConditionStone
        qualifiedName: MinecaRTS.PathHandler.ConsiderationConditionStone
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.ConsiderationConditionStone(MinecaRTS.Cell)
        name: ConsiderationConditionStone
        nameWithType: PathHandler.ConsiderationConditionStone
        qualifiedName: MinecaRTS.PathHandler.ConsiderationConditionStone
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.ConsiderationConditionStone(MinecaRTS.Cell)
  MinecaRTS.PathHandler.TerminationConditionWood(MinecaRTS.Cell):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.TerminationConditionWood(MinecaRTS.Cell)
        name: TerminationConditionWood
        nameWithType: PathHandler.TerminationConditionWood
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionWood
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.TerminationConditionWood(MinecaRTS.Cell)
        name: TerminationConditionWood
        nameWithType: PathHandler.TerminationConditionWood
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionWood
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.TerminationConditionWood(MinecaRTS.Cell)
  MinecaRTS.PathHandler.TerminationConditionStone(MinecaRTS.Cell):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.TerminationConditionStone(MinecaRTS.Cell)
        name: TerminationConditionStone
        nameWithType: PathHandler.TerminationConditionStone
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionStone
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.TerminationConditionStone(MinecaRTS.Cell)
        name: TerminationConditionStone
        nameWithType: PathHandler.TerminationConditionStone
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionStone
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.TerminationConditionStone(MinecaRTS.Cell)
  MinecaRTS.PathHandler.TerminationConditionFindTrack(MinecaRTS.Cell):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.TerminationConditionFindTrack(MinecaRTS.Cell)
        name: TerminationConditionFindTrack
        nameWithType: PathHandler.TerminationConditionFindTrack
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionFindTrack
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.TerminationConditionFindTrack(MinecaRTS.Cell)
        name: TerminationConditionFindTrack
        nameWithType: PathHandler.TerminationConditionFindTrack
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionFindTrack
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.TerminationConditionFindTrack(MinecaRTS.Cell)
  MinecaRTS.PathHandler.GreedyConsiderationCondition(MinecaRTS.Cell):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.GreedyConsiderationCondition(MinecaRTS.Cell)
        name: GreedyConsiderationCondition
        nameWithType: PathHandler.GreedyConsiderationCondition
        qualifiedName: MinecaRTS.PathHandler.GreedyConsiderationCondition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.GreedyConsiderationCondition(MinecaRTS.Cell)
        name: GreedyConsiderationCondition
        nameWithType: PathHandler.GreedyConsiderationCondition
        qualifiedName: MinecaRTS.PathHandler.GreedyConsiderationCondition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.GreedyConsiderationCondition(MinecaRTS.Cell)
  MinecaRTS.PathHandler.GreedyTerminationCondition(MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell}):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.GreedyTerminationCondition(MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell})
        name: GreedyTerminationCondition
        nameWithType: PathHandler.GreedyTerminationCondition
        qualifiedName: MinecaRTS.PathHandler.GreedyTerminationCondition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.GreedyTerminationCondition(MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell})
        name: GreedyTerminationCondition
        nameWithType: PathHandler.GreedyTerminationCondition
        qualifiedName: MinecaRTS.PathHandler.GreedyTerminationCondition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.GreedyTerminationCondition(MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell})
  MinecaRTS.PathHandler.GreedyScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.GreedyScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
        name: GreedyScoreMethod
        nameWithType: PathHandler.GreedyScoreMethod
        qualifiedName: MinecaRTS.PathHandler.GreedyScoreMethod
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.GreedyScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
        name: GreedyScoreMethod
        nameWithType: PathHandler.GreedyScoreMethod
        qualifiedName: MinecaRTS.PathHandler.GreedyScoreMethod
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.GreedyScoreMethod(MinecaRTS.Cell,MinecaRTS.Cell)
  MinecaRTS.MinecartPathHandler.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.MinecartPathHandler.#ctor*
        name: MinecartPathHandler
        nameWithType: MinecartPathHandler.MinecartPathHandler
        qualifiedName: MinecaRTS.MinecartPathHandler.MinecartPathHandler
      VB:
      - id: MinecaRTS.MinecartPathHandler.#ctor*
        name: MinecartPathHandler
        nameWithType: MinecartPathHandler.MinecartPathHandler
        qualifiedName: MinecaRTS.MinecartPathHandler.MinecartPathHandler
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecartPathHandler.#ctor
  MinecaRTS.PathHandler.HandleMessage(MinecaRTS.Message):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: PathHandler.HandleMessage
        qualifiedName: MinecaRTS.PathHandler.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: PathHandler.HandleMessage
        qualifiedName: MinecaRTS.PathHandler.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.HandleMessage(MinecaRTS.Message)
  MinecaRTS.MinecartPathHandler.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.MinecartPathHandler.HandleMessage*
        name: HandleMessage
        nameWithType: MinecartPathHandler.HandleMessage
        qualifiedName: MinecaRTS.MinecartPathHandler.HandleMessage
      VB:
      - id: MinecaRTS.MinecartPathHandler.HandleMessage*
        name: HandleMessage
        nameWithType: MinecartPathHandler.HandleMessage
        qualifiedName: MinecaRTS.MinecartPathHandler.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecartPathHandler.HandleMessage
  MinecaRTS.PathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2):
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
        name: GetPathTo
        nameWithType: PathHandler.GetPathTo
        qualifiedName: MinecaRTS.PathHandler.GetPathTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Microsoft.Xna.Framework.Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.PathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
        name: GetPathTo
        nameWithType: PathHandler.GetPathTo
        qualifiedName: MinecaRTS.PathHandler.GetPathTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Microsoft.Xna.Framework.Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.PathHandler
    commentId: M:MinecaRTS.PathHandler.GetPathTo(Microsoft.Xna.Framework.Vector2)
  MinecaRTS.MinecartPathHandler.GetPathTo*:
    name:
      CSharp:
      - id: MinecaRTS.MinecartPathHandler.GetPathTo*
        name: GetPathTo
        nameWithType: MinecartPathHandler.GetPathTo
        qualifiedName: MinecaRTS.MinecartPathHandler.GetPathTo
      VB:
      - id: MinecaRTS.MinecartPathHandler.GetPathTo*
        name: GetPathTo
        nameWithType: MinecartPathHandler.GetPathTo
        qualifiedName: MinecaRTS.MinecartPathHandler.GetPathTo
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecartPathHandler.GetPathTo
  MinecaRTS.MinecartPathHandler.GetPathToPosFollowingTracks*:
    name:
      CSharp:
      - id: MinecaRTS.MinecartPathHandler.GetPathToPosFollowingTracks*
        name: GetPathToPosFollowingTracks
        nameWithType: MinecartPathHandler.GetPathToPosFollowingTracks
        qualifiedName: MinecaRTS.MinecartPathHandler.GetPathToPosFollowingTracks
      VB:
      - id: MinecaRTS.MinecartPathHandler.GetPathToPosFollowingTracks*
        name: GetPathToPosFollowingTracks
        nameWithType: MinecartPathHandler.GetPathToPosFollowingTracks
        qualifiedName: MinecaRTS.MinecartPathHandler.GetPathToPosFollowingTracks
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecartPathHandler.GetPathToPosFollowingTracks
  MinecaRTS.MinecartPathHandler.GetPathToBuildingFollowingTracks*:
    name:
      CSharp:
      - id: MinecaRTS.MinecartPathHandler.GetPathToBuildingFollowingTracks*
        name: GetPathToBuildingFollowingTracks
        nameWithType: MinecartPathHandler.GetPathToBuildingFollowingTracks
        qualifiedName: MinecaRTS.MinecartPathHandler.GetPathToBuildingFollowingTracks
      VB:
      - id: MinecaRTS.MinecartPathHandler.GetPathToBuildingFollowingTracks*
        name: GetPathToBuildingFollowingTracks
        nameWithType: MinecartPathHandler.GetPathToBuildingFollowingTracks
        qualifiedName: MinecaRTS.MinecartPathHandler.GetPathToBuildingFollowingTracks
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecartPathHandler.GetPathToBuildingFollowingTracks
  MinecaRTS.MinecartPathHandler:
    name:
      CSharp:
      - id: MinecaRTS.MinecartPathHandler
        name: MinecartPathHandler
        nameWithType: MinecartPathHandler
        qualifiedName: MinecaRTS.MinecartPathHandler
      VB:
      - id: MinecaRTS.MinecartPathHandler
        name: MinecartPathHandler
        nameWithType: MinecartPathHandler
        qualifiedName: MinecaRTS.MinecartPathHandler
    isDefinition: true
    commentId: T:MinecaRTS.MinecartPathHandler
  MinecaRTS.Panel.Pos*:
    name:
      CSharp:
      - id: MinecaRTS.Panel.Pos*
        name: Pos
        nameWithType: Panel.Pos
        qualifiedName: MinecaRTS.Panel.Pos
      VB:
      - id: MinecaRTS.Panel.Pos*
        name: Pos
        nameWithType: Panel.Pos
        qualifiedName: MinecaRTS.Panel.Pos
    isDefinition: true
    commentId: Overload:MinecaRTS.Panel.Pos
  MinecaRTS.Panel.Scale*:
    name:
      CSharp:
      - id: MinecaRTS.Panel.Scale*
        name: Scale
        nameWithType: Panel.Scale
        qualifiedName: MinecaRTS.Panel.Scale
      VB:
      - id: MinecaRTS.Panel.Scale*
        name: Scale
        nameWithType: Panel.Scale
        qualifiedName: MinecaRTS.Panel.Scale
    isDefinition: true
    commentId: Overload:MinecaRTS.Panel.Scale
  MinecaRTS.Panel.RenderRect*:
    name:
      CSharp:
      - id: MinecaRTS.Panel.RenderRect*
        name: RenderRect
        nameWithType: Panel.RenderRect
        qualifiedName: MinecaRTS.Panel.RenderRect
      VB:
      - id: MinecaRTS.Panel.RenderRect*
        name: RenderRect
        nameWithType: Panel.RenderRect
        qualifiedName: MinecaRTS.Panel.RenderRect
    isDefinition: true
    commentId: Overload:MinecaRTS.Panel.RenderRect
  MinecaRTS.Panel.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Panel.#ctor*
        name: Panel
        nameWithType: Panel.Panel
        qualifiedName: MinecaRTS.Panel.Panel
      VB:
      - id: MinecaRTS.Panel.#ctor*
        name: Panel
        nameWithType: Panel.Panel
        qualifiedName: MinecaRTS.Panel.Panel
    isDefinition: true
    commentId: Overload:MinecaRTS.Panel.#ctor
  MinecaRTS.Panel.AddButton*:
    name:
      CSharp:
      - id: MinecaRTS.Panel.AddButton*
        name: AddButton
        nameWithType: Panel.AddButton
        qualifiedName: MinecaRTS.Panel.AddButton
      VB:
      - id: MinecaRTS.Panel.AddButton*
        name: AddButton
        nameWithType: Panel.AddButton
        qualifiedName: MinecaRTS.Panel.AddButton
    isDefinition: true
    commentId: Overload:MinecaRTS.Panel.AddButton
  MinecaRTS.Panel.ButtonAtPos*:
    name:
      CSharp:
      - id: MinecaRTS.Panel.ButtonAtPos*
        name: ButtonAtPos
        nameWithType: Panel.ButtonAtPos
        qualifiedName: MinecaRTS.Panel.ButtonAtPos
      VB:
      - id: MinecaRTS.Panel.ButtonAtPos*
        name: ButtonAtPos
        nameWithType: Panel.ButtonAtPos
        qualifiedName: MinecaRTS.Panel.ButtonAtPos
    isDefinition: true
    commentId: Overload:MinecaRTS.Panel.ButtonAtPos
  MinecaRTS.Panel.Render*:
    name:
      CSharp:
      - id: MinecaRTS.Panel.Render*
        name: Render
        nameWithType: Panel.Render
        qualifiedName: MinecaRTS.Panel.Render
      VB:
      - id: MinecaRTS.Panel.Render*
        name: Render
        nameWithType: Panel.Render
        qualifiedName: MinecaRTS.Panel.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.Panel.Render
  MinecaRTS.SearchState:
    name:
      CSharp:
      - id: MinecaRTS.SearchState
        name: SearchState
        nameWithType: SearchState
        qualifiedName: MinecaRTS.SearchState
      VB:
      - id: MinecaRTS.SearchState
        name: SearchState
        nameWithType: SearchState
        qualifiedName: MinecaRTS.SearchState
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.SearchState
  MinecaRTS.SearchType:
    name:
      CSharp:
      - id: MinecaRTS.SearchType
        name: SearchType
        nameWithType: SearchType
        qualifiedName: MinecaRTS.SearchType
      VB:
      - id: MinecaRTS.SearchType
        name: SearchType
        nameWithType: SearchType
        qualifiedName: MinecaRTS.SearchType
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.SearchType
  MinecaRTS.State`1:
    name:
      CSharp:
      - id: MinecaRTS.State`1
        name: State
        nameWithType: State
        qualifiedName: MinecaRTS.State
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: MinecaRTS.State`1
        name: State
        nameWithType: State
        qualifiedName: MinecaRTS.State
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:MinecaRTS.State`1
  MinecaRTS.State{MinecaRTS.Minecart}:
    name:
      CSharp:
      - id: MinecaRTS.State`1
        name: State
        nameWithType: State
        qualifiedName: MinecaRTS.State
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: MinecaRTS.State`1
        name: State
        nameWithType: State
        qualifiedName: MinecaRTS.State
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: MinecaRTS.State`1
    parent: MinecaRTS
    commentId: T:MinecaRTS.State{MinecaRTS.Minecart}
  MinecaRTS.ReturnToTownHall:
    name:
      CSharp:
      - id: MinecaRTS.ReturnToTownHall
        name: ReturnToTownHall
        nameWithType: ReturnToTownHall
        qualifiedName: MinecaRTS.ReturnToTownHall
      VB:
      - id: MinecaRTS.ReturnToTownHall
        name: ReturnToTownHall
        nameWithType: ReturnToTownHall
        qualifiedName: MinecaRTS.ReturnToTownHall
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.ReturnToTownHall
  MinecaRTS.ReturnToTownHall.Instance*:
    name:
      CSharp:
      - id: MinecaRTS.ReturnToTownHall.Instance*
        name: Instance
        nameWithType: ReturnToTownHall.Instance
        qualifiedName: MinecaRTS.ReturnToTownHall.Instance
      VB:
      - id: MinecaRTS.ReturnToTownHall.Instance*
        name: Instance
        nameWithType: ReturnToTownHall.Instance
        qualifiedName: MinecaRTS.ReturnToTownHall.Instance
    isDefinition: true
    commentId: Overload:MinecaRTS.ReturnToTownHall.Instance
  MinecaRTS.ReturnToTownHall.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.ReturnToTownHall.#ctor*
        name: ReturnToTownHall
        nameWithType: ReturnToTownHall.ReturnToTownHall
        qualifiedName: MinecaRTS.ReturnToTownHall.ReturnToTownHall
      VB:
      - id: MinecaRTS.ReturnToTownHall.#ctor*
        name: ReturnToTownHall
        nameWithType: ReturnToTownHall.ReturnToTownHall
        qualifiedName: MinecaRTS.ReturnToTownHall.ReturnToTownHall
    isDefinition: true
    commentId: Overload:MinecaRTS.ReturnToTownHall.#ctor
  MinecaRTS.State`1.Enter(`0):
    name:
      CSharp:
      - id: MinecaRTS.State`1.Enter(`0)
        name: Enter
        nameWithType: State<T>.Enter
        qualifiedName: MinecaRTS.State<T>.Enter
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.State`1.Enter(`0)
        name: Enter
        nameWithType: State(Of T).Enter
        qualifiedName: MinecaRTS.State(Of T).Enter
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:MinecaRTS.State`1.Enter(`0)
  MinecaRTS.State{MinecaRTS.Minecart}.Enter(MinecaRTS.Minecart):
    name:
      CSharp:
      - id: MinecaRTS.State`1.Enter(`0)
        name: Enter
        nameWithType: State<Minecart>.Enter
        qualifiedName: MinecaRTS.State<MinecaRTS.Minecart>.Enter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.State`1.Enter(`0)
        name: Enter
        nameWithType: State(Of Minecart).Enter
        qualifiedName: MinecaRTS.State(Of MinecaRTS.Minecart).Enter
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: MinecaRTS.State`1.Enter(`0)
    parent: MinecaRTS.State{MinecaRTS.Minecart}
    commentId: M:MinecaRTS.State{MinecaRTS.Minecart}.Enter(MinecaRTS.Minecart)
  MinecaRTS.ReturnToTownHall.Enter*:
    name:
      CSharp:
      - id: MinecaRTS.ReturnToTownHall.Enter*
        name: Enter
        nameWithType: ReturnToTownHall.Enter
        qualifiedName: MinecaRTS.ReturnToTownHall.Enter
      VB:
      - id: MinecaRTS.ReturnToTownHall.Enter*
        name: Enter
        nameWithType: ReturnToTownHall.Enter
        qualifiedName: MinecaRTS.ReturnToTownHall.Enter
    isDefinition: true
    commentId: Overload:MinecaRTS.ReturnToTownHall.Enter
  MinecaRTS.State`1.Exit(`0):
    name:
      CSharp:
      - id: MinecaRTS.State`1.Exit(`0)
        name: Exit
        nameWithType: State<T>.Exit
        qualifiedName: MinecaRTS.State<T>.Exit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.State`1.Exit(`0)
        name: Exit
        nameWithType: State(Of T).Exit
        qualifiedName: MinecaRTS.State(Of T).Exit
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:MinecaRTS.State`1.Exit(`0)
  MinecaRTS.State{MinecaRTS.Minecart}.Exit(MinecaRTS.Minecart):
    name:
      CSharp:
      - id: MinecaRTS.State`1.Exit(`0)
        name: Exit
        nameWithType: State<Minecart>.Exit
        qualifiedName: MinecaRTS.State<MinecaRTS.Minecart>.Exit
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.State`1.Exit(`0)
        name: Exit
        nameWithType: State(Of Minecart).Exit
        qualifiedName: MinecaRTS.State(Of MinecaRTS.Minecart).Exit
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: MinecaRTS.State`1.Exit(`0)
    parent: MinecaRTS.State{MinecaRTS.Minecart}
    commentId: M:MinecaRTS.State{MinecaRTS.Minecart}.Exit(MinecaRTS.Minecart)
  MinecaRTS.ReturnToTownHall.Exit*:
    name:
      CSharp:
      - id: MinecaRTS.ReturnToTownHall.Exit*
        name: Exit
        nameWithType: ReturnToTownHall.Exit
        qualifiedName: MinecaRTS.ReturnToTownHall.Exit
      VB:
      - id: MinecaRTS.ReturnToTownHall.Exit*
        name: Exit
        nameWithType: ReturnToTownHall.Exit
        qualifiedName: MinecaRTS.ReturnToTownHall.Exit
    isDefinition: true
    commentId: Overload:MinecaRTS.ReturnToTownHall.Exit
  MinecaRTS.State`1.Execute(`0):
    name:
      CSharp:
      - id: MinecaRTS.State`1.Execute(`0)
        name: Execute
        nameWithType: State<T>.Execute
        qualifiedName: MinecaRTS.State<T>.Execute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.State`1.Execute(`0)
        name: Execute
        nameWithType: State(Of T).Execute
        qualifiedName: MinecaRTS.State(Of T).Execute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:MinecaRTS.State`1.Execute(`0)
  MinecaRTS.State{MinecaRTS.Minecart}.Execute(MinecaRTS.Minecart):
    name:
      CSharp:
      - id: MinecaRTS.State`1.Execute(`0)
        name: Execute
        nameWithType: State<Minecart>.Execute
        qualifiedName: MinecaRTS.State<MinecaRTS.Minecart>.Execute
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.State`1.Execute(`0)
        name: Execute
        nameWithType: State(Of Minecart).Execute
        qualifiedName: MinecaRTS.State(Of MinecaRTS.Minecart).Execute
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: MinecaRTS.State`1.Execute(`0)
    parent: MinecaRTS.State{MinecaRTS.Minecart}
    commentId: M:MinecaRTS.State{MinecaRTS.Minecart}.Execute(MinecaRTS.Minecart)
  MinecaRTS.ReturnToTownHall.Execute*:
    name:
      CSharp:
      - id: MinecaRTS.ReturnToTownHall.Execute*
        name: Execute
        nameWithType: ReturnToTownHall.Execute
        qualifiedName: MinecaRTS.ReturnToTownHall.Execute
      VB:
      - id: MinecaRTS.ReturnToTownHall.Execute*
        name: Execute
        nameWithType: ReturnToTownHall.Execute
        qualifiedName: MinecaRTS.ReturnToTownHall.Execute
    isDefinition: true
    commentId: Overload:MinecaRTS.ReturnToTownHall.Execute
  MinecaRTS.State`1.HandleMessage(`0,MinecaRTS.Message):
    name:
      CSharp:
      - id: MinecaRTS.State`1.HandleMessage(`0,MinecaRTS.Message)
        name: HandleMessage
        nameWithType: State<T>.HandleMessage
        qualifiedName: MinecaRTS.State<T>.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.State`1.HandleMessage(`0,MinecaRTS.Message)
        name: HandleMessage
        nameWithType: State(Of T).HandleMessage
        qualifiedName: MinecaRTS.State(Of T).HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:MinecaRTS.State`1.HandleMessage(`0,MinecaRTS.Message)
  MinecaRTS.State{MinecaRTS.Minecart}.HandleMessage(MinecaRTS.Minecart,MinecaRTS.Message):
    name:
      CSharp:
      - id: MinecaRTS.State`1.HandleMessage(`0,MinecaRTS.Message)
        name: HandleMessage
        nameWithType: State<Minecart>.HandleMessage
        qualifiedName: MinecaRTS.State<MinecaRTS.Minecart>.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.State`1.HandleMessage(`0,MinecaRTS.Message)
        name: HandleMessage
        nameWithType: State(Of Minecart).HandleMessage
        qualifiedName: MinecaRTS.State(Of MinecaRTS.Minecart).HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Minecart
        name: Minecart
        nameWithType: Minecart
        qualifiedName: MinecaRTS.Minecart
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: MinecaRTS.State`1.HandleMessage(`0,MinecaRTS.Message)
    parent: MinecaRTS.State{MinecaRTS.Minecart}
    commentId: M:MinecaRTS.State{MinecaRTS.Minecart}.HandleMessage(MinecaRTS.Minecart,MinecaRTS.Message)
  MinecaRTS.ReturnToTownHall.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.ReturnToTownHall.HandleMessage*
        name: HandleMessage
        nameWithType: ReturnToTownHall.HandleMessage
        qualifiedName: MinecaRTS.ReturnToTownHall.HandleMessage
      VB:
      - id: MinecaRTS.ReturnToTownHall.HandleMessage*
        name: HandleMessage
        nameWithType: ReturnToTownHall.HandleMessage
        qualifiedName: MinecaRTS.ReturnToTownHall.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.ReturnToTownHall.HandleMessage
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  MinecaRTS.Frame.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Frame.#ctor*
        name: Frame
        nameWithType: Frame.Frame
        qualifiedName: MinecaRTS.Frame.Frame
      VB:
      - id: MinecaRTS.Frame.#ctor*
        name: Frame
        nameWithType: Frame.Frame
        qualifiedName: MinecaRTS.Frame.Frame
    isDefinition: true
    commentId: Overload:MinecaRTS.Frame.#ctor
  MinecaRTS.Frame:
    name:
      CSharp:
      - id: MinecaRTS.Frame
        name: Frame
        nameWithType: Frame
        qualifiedName: MinecaRTS.Frame
      VB:
      - id: MinecaRTS.Frame
        name: Frame
        nameWithType: Frame
        qualifiedName: MinecaRTS.Frame
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Frame
  System.Collections.Generic.List{MinecaRTS.Frame}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Frame
        name: Frame
        nameWithType: Frame
        qualifiedName: MinecaRTS.Frame
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Frame
        name: Frame
        nameWithType: Frame
        qualifiedName: MinecaRTS.Frame
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{MinecaRTS.Frame}
  MinecaRTS.Animation.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Animation.#ctor*
        name: Animation
        nameWithType: Animation.Animation
        qualifiedName: MinecaRTS.Animation.Animation
      VB:
      - id: MinecaRTS.Animation.#ctor*
        name: Animation
        nameWithType: Animation.Animation
        qualifiedName: MinecaRTS.Animation.Animation
    isDefinition: true
    commentId: Overload:MinecaRTS.Animation.#ctor
  MinecaRTS.Animation.CurrentFrame*:
    name:
      CSharp:
      - id: MinecaRTS.Animation.CurrentFrame*
        name: CurrentFrame
        nameWithType: Animation.CurrentFrame
        qualifiedName: MinecaRTS.Animation.CurrentFrame
      VB:
      - id: MinecaRTS.Animation.CurrentFrame*
        name: CurrentFrame
        nameWithType: Animation.CurrentFrame
        qualifiedName: MinecaRTS.Animation.CurrentFrame
    isDefinition: true
    commentId: Overload:MinecaRTS.Animation.CurrentFrame
  MinecaRTS.Animation.ChangeScript*:
    name:
      CSharp:
      - id: MinecaRTS.Animation.ChangeScript*
        name: ChangeScript
        nameWithType: Animation.ChangeScript
        qualifiedName: MinecaRTS.Animation.ChangeScript
      VB:
      - id: MinecaRTS.Animation.ChangeScript*
        name: ChangeScript
        nameWithType: Animation.ChangeScript
        qualifiedName: MinecaRTS.Animation.ChangeScript
    isDefinition: true
    commentId: Overload:MinecaRTS.Animation.ChangeScript
  MinecaRTS.Animation.Update*:
    name:
      CSharp:
      - id: MinecaRTS.Animation.Update*
        name: Update
        nameWithType: Animation.Update
        qualifiedName: MinecaRTS.Animation.Update
      VB:
      - id: MinecaRTS.Animation.Update*
        name: Update
        nameWithType: Animation.Update
        qualifiedName: MinecaRTS.Animation.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.Animation.Update
  MinecaRTS.Animation.Render*:
    name:
      CSharp:
      - id: MinecaRTS.Animation.Render*
        name: Render
        nameWithType: Animation.Render
        qualifiedName: MinecaRTS.Animation.Render
      VB:
      - id: MinecaRTS.Animation.Render*
        name: Render
        nameWithType: Animation.Render
        qualifiedName: MinecaRTS.Animation.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.Animation.Render
  MinecaRTS.Animation:
    name:
      CSharp:
      - id: MinecaRTS.Animation
        name: Animation
        nameWithType: Animation
        qualifiedName: MinecaRTS.Animation
      VB:
      - id: MinecaRTS.Animation
        name: Animation
        nameWithType: Animation
        qualifiedName: MinecaRTS.Animation
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Animation
  MinecaRTS.BuildingFactory.CreateTownHall*:
    name:
      CSharp:
      - id: MinecaRTS.BuildingFactory.CreateTownHall*
        name: CreateTownHall
        nameWithType: BuildingFactory.CreateTownHall
        qualifiedName: MinecaRTS.BuildingFactory.CreateTownHall
      VB:
      - id: MinecaRTS.BuildingFactory.CreateTownHall*
        name: CreateTownHall
        nameWithType: BuildingFactory.CreateTownHall
        qualifiedName: MinecaRTS.BuildingFactory.CreateTownHall
    isDefinition: true
    commentId: Overload:MinecaRTS.BuildingFactory.CreateTownHall
  MinecaRTS.House:
    name:
      CSharp:
      - id: MinecaRTS.House
        name: House
        nameWithType: House
        qualifiedName: MinecaRTS.House
      VB:
      - id: MinecaRTS.House
        name: House
        nameWithType: House
        qualifiedName: MinecaRTS.House
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.House
  MinecaRTS.BuildingFactory.CreateHouse*:
    name:
      CSharp:
      - id: MinecaRTS.BuildingFactory.CreateHouse*
        name: CreateHouse
        nameWithType: BuildingFactory.CreateHouse
        qualifiedName: MinecaRTS.BuildingFactory.CreateHouse
      VB:
      - id: MinecaRTS.BuildingFactory.CreateHouse*
        name: CreateHouse
        nameWithType: BuildingFactory.CreateHouse
        qualifiedName: MinecaRTS.BuildingFactory.CreateHouse
    isDefinition: true
    commentId: Overload:MinecaRTS.BuildingFactory.CreateHouse
  MinecaRTS.Track:
    name:
      CSharp:
      - id: MinecaRTS.Track
        name: Track
        nameWithType: Track
        qualifiedName: MinecaRTS.Track
      VB:
      - id: MinecaRTS.Track
        name: Track
        nameWithType: Track
        qualifiedName: MinecaRTS.Track
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Track
  MinecaRTS.BuildingFactory.CreateTrack*:
    name:
      CSharp:
      - id: MinecaRTS.BuildingFactory.CreateTrack*
        name: CreateTrack
        nameWithType: BuildingFactory.CreateTrack
        qualifiedName: MinecaRTS.BuildingFactory.CreateTrack
      VB:
      - id: MinecaRTS.BuildingFactory.CreateTrack*
        name: CreateTrack
        nameWithType: BuildingFactory.CreateTrack
        qualifiedName: MinecaRTS.BuildingFactory.CreateTrack
    isDefinition: true
    commentId: Overload:MinecaRTS.BuildingFactory.CreateTrack
  MinecaRTS.BuildingFactory.CreateDepositBox*:
    name:
      CSharp:
      - id: MinecaRTS.BuildingFactory.CreateDepositBox*
        name: CreateDepositBox
        nameWithType: BuildingFactory.CreateDepositBox
        qualifiedName: MinecaRTS.BuildingFactory.CreateDepositBox
      VB:
      - id: MinecaRTS.BuildingFactory.CreateDepositBox*
        name: CreateDepositBox
        nameWithType: BuildingFactory.CreateDepositBox
        qualifiedName: MinecaRTS.BuildingFactory.CreateDepositBox
    isDefinition: true
    commentId: Overload:MinecaRTS.BuildingFactory.CreateDepositBox
  MinecaRTS.BuildingFactory:
    name:
      CSharp:
      - id: MinecaRTS.BuildingFactory
        name: BuildingFactory
        nameWithType: BuildingFactory
        qualifiedName: MinecaRTS.BuildingFactory
      VB:
      - id: MinecaRTS.BuildingFactory
        name: BuildingFactory
        nameWithType: BuildingFactory
        qualifiedName: MinecaRTS.BuildingFactory
    isDefinition: true
    commentId: T:MinecaRTS.BuildingFactory
  MinecaRTS.Cost.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Cost.#ctor*
        name: Cost
        nameWithType: Cost.Cost
        qualifiedName: MinecaRTS.Cost.Cost
      VB:
      - id: MinecaRTS.Cost.#ctor*
        name: Cost
        nameWithType: Cost.Cost
        qualifiedName: MinecaRTS.Cost.Cost
    isDefinition: true
    commentId: Overload:MinecaRTS.Cost.#ctor
  MinecaRTS.Cost:
    name:
      CSharp:
      - id: MinecaRTS.Cost
        name: Cost
        nameWithType: Cost
        qualifiedName: MinecaRTS.Cost
      VB:
      - id: MinecaRTS.Cost
        name: Cost
        nameWithType: Cost
        qualifiedName: MinecaRTS.Cost
    isDefinition: true
    commentId: T:MinecaRTS.Cost
  MinecaRTS.GameResources.CreateMinecartEmptyAnimation*:
    name:
      CSharp:
      - id: MinecaRTS.GameResources.CreateMinecartEmptyAnimation*
        name: CreateMinecartEmptyAnimation
        nameWithType: GameResources.CreateMinecartEmptyAnimation
        qualifiedName: MinecaRTS.GameResources.CreateMinecartEmptyAnimation
      VB:
      - id: MinecaRTS.GameResources.CreateMinecartEmptyAnimation*
        name: CreateMinecartEmptyAnimation
        nameWithType: GameResources.CreateMinecartEmptyAnimation
        qualifiedName: MinecaRTS.GameResources.CreateMinecartEmptyAnimation
    isDefinition: true
    commentId: Overload:MinecaRTS.GameResources.CreateMinecartEmptyAnimation
  MinecaRTS.WkrAnim:
    name:
      CSharp:
      - id: MinecaRTS.WkrAnim
        name: WkrAnim
        nameWithType: WkrAnim
        qualifiedName: MinecaRTS.WkrAnim
      VB:
      - id: MinecaRTS.WkrAnim
        name: WkrAnim
        nameWithType: WkrAnim
        qualifiedName: MinecaRTS.WkrAnim
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.WkrAnim
  MinecaRTS.GameResources.CreateWorkerAnimation*:
    name:
      CSharp:
      - id: MinecaRTS.GameResources.CreateWorkerAnimation*
        name: CreateWorkerAnimation
        nameWithType: GameResources.CreateWorkerAnimation
        qualifiedName: MinecaRTS.GameResources.CreateWorkerAnimation
      VB:
      - id: MinecaRTS.GameResources.CreateWorkerAnimation*
        name: CreateWorkerAnimation
        nameWithType: GameResources.CreateWorkerAnimation
        qualifiedName: MinecaRTS.GameResources.CreateWorkerAnimation
    isDefinition: true
    commentId: Overload:MinecaRTS.GameResources.CreateWorkerAnimation
  MinecaRTS.MinecaRTS:
    name:
      CSharp:
      - id: MinecaRTS.MinecaRTS
        name: MinecaRTS
        nameWithType: MinecaRTS
        qualifiedName: MinecaRTS.MinecaRTS
      VB:
      - id: MinecaRTS.MinecaRTS
        name: MinecaRTS
        nameWithType: MinecaRTS
        qualifiedName: MinecaRTS.MinecaRTS
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.MinecaRTS
  MinecaRTS.GameResources.LoadSpriteSheet*:
    name:
      CSharp:
      - id: MinecaRTS.GameResources.LoadSpriteSheet*
        name: LoadSpriteSheet
        nameWithType: GameResources.LoadSpriteSheet
        qualifiedName: MinecaRTS.GameResources.LoadSpriteSheet
      VB:
      - id: MinecaRTS.GameResources.LoadSpriteSheet*
        name: LoadSpriteSheet
        nameWithType: GameResources.LoadSpriteSheet
        qualifiedName: MinecaRTS.GameResources.LoadSpriteSheet
    isDefinition: true
    commentId: Overload:MinecaRTS.GameResources.LoadSpriteSheet
  MinecaRTS.GameResources:
    name:
      CSharp:
      - id: MinecaRTS.GameResources
        name: GameResources
        nameWithType: GameResources
        qualifiedName: MinecaRTS.GameResources
      VB:
      - id: MinecaRTS.GameResources
        name: GameResources
        nameWithType: GameResources
        qualifiedName: MinecaRTS.GameResources
    isDefinition: true
    commentId: T:MinecaRTS.GameResources
  MinecaRTS.Building.ActiveTexture*:
    name:
      CSharp:
      - id: MinecaRTS.Building.ActiveTexture*
        name: ActiveTexture
        nameWithType: Building.ActiveTexture
        qualifiedName: MinecaRTS.Building.ActiveTexture
      VB:
      - id: MinecaRTS.Building.ActiveTexture*
        name: ActiveTexture
        nameWithType: Building.ActiveTexture
        qualifiedName: MinecaRTS.Building.ActiveTexture
    isDefinition: true
    commentId: Overload:MinecaRTS.Building.ActiveTexture
  MinecaRTS.Building.IsActive*:
    name:
      CSharp:
      - id: MinecaRTS.Building.IsActive*
        name: IsActive
        nameWithType: Building.IsActive
        qualifiedName: MinecaRTS.Building.IsActive
      VB:
      - id: MinecaRTS.Building.IsActive*
        name: IsActive
        nameWithType: Building.IsActive
        qualifiedName: MinecaRTS.Building.IsActive
    isDefinition: true
    commentId: Overload:MinecaRTS.Building.IsActive
  MinecaRTS.Building.Team*:
    name:
      CSharp:
      - id: MinecaRTS.Building.Team*
        name: Team
        nameWithType: Building.Team
        qualifiedName: MinecaRTS.Building.Team
      VB:
      - id: MinecaRTS.Building.Team*
        name: Team
        nameWithType: Building.Team
        qualifiedName: MinecaRTS.Building.Team
    isDefinition: true
    commentId: Overload:MinecaRTS.Building.Team
  MinecaRTS.Building.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Building.#ctor*
        name: Building
        nameWithType: Building.Building
        qualifiedName: MinecaRTS.Building.Building
      VB:
      - id: MinecaRTS.Building.#ctor*
        name: Building
        nameWithType: Building.Building
        qualifiedName: MinecaRTS.Building.Building
    isDefinition: true
    commentId: Overload:MinecaRTS.Building.#ctor
  MinecaRTS.Building.Construct*:
    name:
      CSharp:
      - id: MinecaRTS.Building.Construct*
        name: Construct
        nameWithType: Building.Construct
        qualifiedName: MinecaRTS.Building.Construct
      VB:
      - id: MinecaRTS.Building.Construct*
        name: Construct
        nameWithType: Building.Construct
        qualifiedName: MinecaRTS.Building.Construct
    isDefinition: true
    commentId: Overload:MinecaRTS.Building.Construct
  MinecaRTS.Entity.Update:
    name:
      CSharp:
      - id: MinecaRTS.Entity.Update
        name: Update
        nameWithType: Entity.Update
        qualifiedName: MinecaRTS.Entity.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Entity.Update
        name: Update
        nameWithType: Entity.Update
        qualifiedName: MinecaRTS.Entity.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: M:MinecaRTS.Entity.Update
  MinecaRTS.Building.Update*:
    name:
      CSharp:
      - id: MinecaRTS.Building.Update*
        name: Update
        nameWithType: Building.Update
        qualifiedName: MinecaRTS.Building.Update
      VB:
      - id: MinecaRTS.Building.Update*
        name: Update
        nameWithType: Building.Update
        qualifiedName: MinecaRTS.Building.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.Building.Update
  MinecaRTS.Entity.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch):
    name:
      CSharp:
      - id: MinecaRTS.Entity.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: Entity.Render
        qualifiedName: MinecaRTS.Entity.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Entity.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: Entity.Render
        qualifiedName: MinecaRTS.Entity.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: M:MinecaRTS.Entity.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  MinecaRTS.Building.Render*:
    name:
      CSharp:
      - id: MinecaRTS.Building.Render*
        name: Render
        nameWithType: Building.Render
        qualifiedName: MinecaRTS.Building.Render
      VB:
      - id: MinecaRTS.Building.Render*
        name: Render
        nameWithType: Building.Render
        qualifiedName: MinecaRTS.Building.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.Building.Render
  MinecaRTS.Building.QueueUpProductionAtIndex*:
    name:
      CSharp:
      - id: MinecaRTS.Building.QueueUpProductionAtIndex*
        name: QueueUpProductionAtIndex
        nameWithType: Building.QueueUpProductionAtIndex
        qualifiedName: MinecaRTS.Building.QueueUpProductionAtIndex
      VB:
      - id: MinecaRTS.Building.QueueUpProductionAtIndex*
        name: QueueUpProductionAtIndex
        nameWithType: Building.QueueUpProductionAtIndex
        qualifiedName: MinecaRTS.Building.QueueUpProductionAtIndex
    isDefinition: true
    commentId: Overload:MinecaRTS.Building.QueueUpProductionAtIndex
  MinecaRTS.Entity.HandleMessage(MinecaRTS.Message):
    name:
      CSharp:
      - id: MinecaRTS.Entity.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: Entity.HandleMessage
        qualifiedName: MinecaRTS.Entity.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Entity.HandleMessage(MinecaRTS.Message)
        name: HandleMessage
        nameWithType: Entity.HandleMessage
        qualifiedName: MinecaRTS.Entity.HandleMessage
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: MinecaRTS.Message
        name: Message
        nameWithType: Message
        qualifiedName: MinecaRTS.Message
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: M:MinecaRTS.Entity.HandleMessage(MinecaRTS.Message)
  MinecaRTS.Building.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.Building.HandleMessage*
        name: HandleMessage
        nameWithType: Building.HandleMessage
        qualifiedName: MinecaRTS.Building.HandleMessage
      VB:
      - id: MinecaRTS.Building.HandleMessage*
        name: HandleMessage
        nameWithType: Building.HandleMessage
        qualifiedName: MinecaRTS.Building.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.Building.HandleMessage
  MinecaRTS.Entity.ExitState:
    name:
      CSharp:
      - id: MinecaRTS.Entity.ExitState
        name: ExitState
        nameWithType: Entity.ExitState
        qualifiedName: MinecaRTS.Entity.ExitState
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Entity.ExitState
        name: ExitState
        nameWithType: Entity.ExitState
        qualifiedName: MinecaRTS.Entity.ExitState
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: M:MinecaRTS.Entity.ExitState
  MinecaRTS.Building.ExitState*:
    name:
      CSharp:
      - id: MinecaRTS.Building.ExitState*
        name: ExitState
        nameWithType: Building.ExitState
        qualifiedName: MinecaRTS.Building.ExitState
      VB:
      - id: MinecaRTS.Building.ExitState*
        name: ExitState
        nameWithType: Building.ExitState
        qualifiedName: MinecaRTS.Building.ExitState
    isDefinition: true
    commentId: Overload:MinecaRTS.Building.ExitState
  MinecaRTS.Entity.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch):
    name:
      CSharp:
      - id: MinecaRTS.Entity.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: RenderDebug
        nameWithType: Entity.RenderDebug
        qualifiedName: MinecaRTS.Entity.RenderDebug
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.Entity.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: RenderDebug
        nameWithType: Entity.RenderDebug
        qualifiedName: MinecaRTS.Entity.RenderDebug
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.Entity
    commentId: M:MinecaRTS.Entity.RenderDebug(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  MinecaRTS.Building.RenderDebug*:
    name:
      CSharp:
      - id: MinecaRTS.Building.RenderDebug*
        name: RenderDebug
        nameWithType: Building.RenderDebug
        qualifiedName: MinecaRTS.Building.RenderDebug
      VB:
      - id: MinecaRTS.Building.RenderDebug*
        name: RenderDebug
        nameWithType: Building.RenderDebug
        qualifiedName: MinecaRTS.Building.RenderDebug
    isDefinition: true
    commentId: Overload:MinecaRTS.Building.RenderDebug
  MinecaRTS.Camera.MINIMAP_X*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.MINIMAP_X*
        name: MINIMAP_X
        nameWithType: Camera.MINIMAP_X
        qualifiedName: MinecaRTS.Camera.MINIMAP_X
      VB:
      - id: MinecaRTS.Camera.MINIMAP_X*
        name: MINIMAP_X
        nameWithType: Camera.MINIMAP_X
        qualifiedName: MinecaRTS.Camera.MINIMAP_X
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.MINIMAP_X
  MinecaRTS.Camera.MINIMAP_Y*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.MINIMAP_Y*
        name: MINIMAP_Y
        nameWithType: Camera.MINIMAP_Y
        qualifiedName: MinecaRTS.Camera.MINIMAP_Y
      VB:
      - id: MinecaRTS.Camera.MINIMAP_Y*
        name: MINIMAP_Y
        nameWithType: Camera.MINIMAP_Y
        qualifiedName: MinecaRTS.Camera.MINIMAP_Y
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.MINIMAP_Y
  MinecaRTS.Camera.X*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.X*
        name: X
        nameWithType: Camera.X
        qualifiedName: MinecaRTS.Camera.X
      VB:
      - id: MinecaRTS.Camera.X*
        name: X
        nameWithType: Camera.X
        qualifiedName: MinecaRTS.Camera.X
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.X
  MinecaRTS.Camera.Y*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.Y*
        name: Y
        nameWithType: Camera.Y
        qualifiedName: MinecaRTS.Camera.Y
      VB:
      - id: MinecaRTS.Camera.Y*
        name: Y
        nameWithType: Camera.Y
        qualifiedName: MinecaRTS.Camera.Y
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.Y
  MinecaRTS.Camera.Rect*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.Rect*
        name: Rect
        nameWithType: Camera.Rect
        qualifiedName: MinecaRTS.Camera.Rect
      VB:
      - id: MinecaRTS.Camera.Rect*
        name: Rect
        nameWithType: Camera.Rect
        qualifiedName: MinecaRTS.Camera.Rect
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.Rect
  MinecaRTS.Camera.MinimapRect*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.MinimapRect*
        name: MinimapRect
        nameWithType: Camera.MinimapRect
        qualifiedName: MinecaRTS.Camera.MinimapRect
      VB:
      - id: MinecaRTS.Camera.MinimapRect*
        name: MinimapRect
        nameWithType: Camera.MinimapRect
        qualifiedName: MinecaRTS.Camera.MinimapRect
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.MinimapRect
  MinecaRTS.Camera.MoveBy*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.MoveBy*
        name: MoveBy
        nameWithType: Camera.MoveBy
        qualifiedName: MinecaRTS.Camera.MoveBy
      VB:
      - id: MinecaRTS.Camera.MoveBy*
        name: MoveBy
        nameWithType: Camera.MoveBy
        qualifiedName: MinecaRTS.Camera.MoveBy
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.MoveBy
  MinecaRTS.Camera.MoveTo*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.MoveTo*
        name: MoveTo
        nameWithType: Camera.MoveTo
        qualifiedName: MinecaRTS.Camera.MoveTo
      VB:
      - id: MinecaRTS.Camera.MoveTo*
        name: MoveTo
        nameWithType: Camera.MoveTo
        qualifiedName: MinecaRTS.Camera.MoveTo
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.MoveTo
  MinecaRTS.Camera.VecToWorld*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.VecToWorld*
        name: VecToWorld
        nameWithType: Camera.VecToWorld
        qualifiedName: MinecaRTS.Camera.VecToWorld
      VB:
      - id: MinecaRTS.Camera.VecToWorld*
        name: VecToWorld
        nameWithType: Camera.VecToWorld
        qualifiedName: MinecaRTS.Camera.VecToWorld
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.VecToWorld
  MinecaRTS.Camera.PtToWorld*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.PtToWorld*
        name: PtToWorld
        nameWithType: Camera.PtToWorld
        qualifiedName: MinecaRTS.Camera.PtToWorld
      VB:
      - id: MinecaRTS.Camera.PtToWorld*
        name: PtToWorld
        nameWithType: Camera.PtToWorld
        qualifiedName: MinecaRTS.Camera.PtToWorld
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.PtToWorld
  MinecaRTS.Camera.XToWorld*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.XToWorld*
        name: XToWorld
        nameWithType: Camera.XToWorld
        qualifiedName: MinecaRTS.Camera.XToWorld
      VB:
      - id: MinecaRTS.Camera.XToWorld*
        name: XToWorld
        nameWithType: Camera.XToWorld
        qualifiedName: MinecaRTS.Camera.XToWorld
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.XToWorld
  MinecaRTS.Camera.YToWorld*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.YToWorld*
        name: YToWorld
        nameWithType: Camera.YToWorld
        qualifiedName: MinecaRTS.Camera.YToWorld
      VB:
      - id: MinecaRTS.Camera.YToWorld*
        name: YToWorld
        nameWithType: Camera.YToWorld
        qualifiedName: MinecaRTS.Camera.YToWorld
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.YToWorld
  MinecaRTS.Camera.VecToScreen*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.VecToScreen*
        name: VecToScreen
        nameWithType: Camera.VecToScreen
        qualifiedName: MinecaRTS.Camera.VecToScreen
      VB:
      - id: MinecaRTS.Camera.VecToScreen*
        name: VecToScreen
        nameWithType: Camera.VecToScreen
        qualifiedName: MinecaRTS.Camera.VecToScreen
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.VecToScreen
  MinecaRTS.Camera.PtToScreen*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.PtToScreen*
        name: PtToScreen
        nameWithType: Camera.PtToScreen
        qualifiedName: MinecaRTS.Camera.PtToScreen
      VB:
      - id: MinecaRTS.Camera.PtToScreen*
        name: PtToScreen
        nameWithType: Camera.PtToScreen
        qualifiedName: MinecaRTS.Camera.PtToScreen
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.PtToScreen
  MinecaRTS.Camera.XToScreen*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.XToScreen*
        name: XToScreen
        nameWithType: Camera.XToScreen
        qualifiedName: MinecaRTS.Camera.XToScreen
      VB:
      - id: MinecaRTS.Camera.XToScreen*
        name: XToScreen
        nameWithType: Camera.XToScreen
        qualifiedName: MinecaRTS.Camera.XToScreen
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.XToScreen
  MinecaRTS.Camera.YToScreen*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.YToScreen*
        name: YToScreen
        nameWithType: Camera.YToScreen
        qualifiedName: MinecaRTS.Camera.YToScreen
      VB:
      - id: MinecaRTS.Camera.YToScreen*
        name: YToScreen
        nameWithType: Camera.YToScreen
        qualifiedName: MinecaRTS.Camera.YToScreen
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.YToScreen
  MinecaRTS.Camera.RectToWorld*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.RectToWorld*
        name: RectToWorld
        nameWithType: Camera.RectToWorld
        qualifiedName: MinecaRTS.Camera.RectToWorld
      VB:
      - id: MinecaRTS.Camera.RectToWorld*
        name: RectToWorld
        nameWithType: Camera.RectToWorld
        qualifiedName: MinecaRTS.Camera.RectToWorld
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.RectToWorld
  MinecaRTS.Camera.RectToScreen*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.RectToScreen*
        name: RectToScreen
        nameWithType: Camera.RectToScreen
        qualifiedName: MinecaRTS.Camera.RectToScreen
      VB:
      - id: MinecaRTS.Camera.RectToScreen*
        name: RectToScreen
        nameWithType: Camera.RectToScreen
        qualifiedName: MinecaRTS.Camera.RectToScreen
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.RectToScreen
  MinecaRTS.Camera.WorldRectToMinimapRect*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.WorldRectToMinimapRect*
        name: WorldRectToMinimapRect
        nameWithType: Camera.WorldRectToMinimapRect
        qualifiedName: MinecaRTS.Camera.WorldRectToMinimapRect
      VB:
      - id: MinecaRTS.Camera.WorldRectToMinimapRect*
        name: WorldRectToMinimapRect
        nameWithType: Camera.WorldRectToMinimapRect
        qualifiedName: MinecaRTS.Camera.WorldRectToMinimapRect
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.WorldRectToMinimapRect
  MinecaRTS.Camera.LookAt*:
    name:
      CSharp:
      - id: MinecaRTS.Camera.LookAt*
        name: LookAt
        nameWithType: Camera.LookAt
        qualifiedName: MinecaRTS.Camera.LookAt
      VB:
      - id: MinecaRTS.Camera.LookAt*
        name: LookAt
        nameWithType: Camera.LookAt
        qualifiedName: MinecaRTS.Camera.LookAt
    isDefinition: true
    commentId: Overload:MinecaRTS.Camera.LookAt
  MinecaRTS.Camera:
    name:
      CSharp:
      - id: MinecaRTS.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: MinecaRTS.Camera
      VB:
      - id: MinecaRTS.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: MinecaRTS.Camera
    isDefinition: true
    commentId: T:MinecaRTS.Camera
  MinecaRTS.Cell.Size*:
    name:
      CSharp:
      - id: MinecaRTS.Cell.Size*
        name: Size
        nameWithType: Cell.Size
        qualifiedName: MinecaRTS.Cell.Size
      VB:
      - id: MinecaRTS.Cell.Size*
        name: Size
        nameWithType: Cell.Size
        qualifiedName: MinecaRTS.Cell.Size
    isDefinition: true
    commentId: Overload:MinecaRTS.Cell.Size
  MinecaRTS.Cell.Pos*:
    name:
      CSharp:
      - id: MinecaRTS.Cell.Pos*
        name: Pos
        nameWithType: Cell.Pos
        qualifiedName: MinecaRTS.Cell.Pos
      VB:
      - id: MinecaRTS.Cell.Pos*
        name: Pos
        nameWithType: Cell.Pos
        qualifiedName: MinecaRTS.Cell.Pos
    isDefinition: true
    commentId: Overload:MinecaRTS.Cell.Pos
  Microsoft.Xna.Framework.Color:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Color
        name: Color
        nameWithType: Color
        qualifiedName: Microsoft.Xna.Framework.Color
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Color
        name: Color
        nameWithType: Color
        qualifiedName: Microsoft.Xna.Framework.Color
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework
    commentId: T:Microsoft.Xna.Framework.Color
  MinecaRTS.Cell.Color*:
    name:
      CSharp:
      - id: MinecaRTS.Cell.Color*
        name: Color
        nameWithType: Cell.Color
        qualifiedName: MinecaRTS.Cell.Color
      VB:
      - id: MinecaRTS.Cell.Color*
        name: Color
        nameWithType: Cell.Color
        qualifiedName: MinecaRTS.Cell.Color
    isDefinition: true
    commentId: Overload:MinecaRTS.Cell.Color
  System.Collections.Generic.List{MinecaRTS.Cell}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{MinecaRTS.Cell}
  MinecaRTS.Cell.Passable*:
    name:
      CSharp:
      - id: MinecaRTS.Cell.Passable*
        name: Passable
        nameWithType: Cell.Passable
        qualifiedName: MinecaRTS.Cell.Passable
      VB:
      - id: MinecaRTS.Cell.Passable*
        name: Passable
        nameWithType: Cell.Passable
        qualifiedName: MinecaRTS.Cell.Passable
    isDefinition: true
    commentId: Overload:MinecaRTS.Cell.Passable
  MinecaRTS.Cell:
    name:
      CSharp:
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      VB:
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Cell
  MinecaRTS.Cell.CollisionRect*:
    name:
      CSharp:
      - id: MinecaRTS.Cell.CollisionRect*
        name: CollisionRect
        nameWithType: Cell.CollisionRect
        qualifiedName: MinecaRTS.Cell.CollisionRect
      VB:
      - id: MinecaRTS.Cell.CollisionRect*
        name: CollisionRect
        nameWithType: Cell.CollisionRect
        qualifiedName: MinecaRTS.Cell.CollisionRect
    isDefinition: true
    commentId: Overload:MinecaRTS.Cell.CollisionRect
  MinecaRTS.Cell.Mid*:
    name:
      CSharp:
      - id: MinecaRTS.Cell.Mid*
        name: Mid
        nameWithType: Cell.Mid
        qualifiedName: MinecaRTS.Cell.Mid
      VB:
      - id: MinecaRTS.Cell.Mid*
        name: Mid
        nameWithType: Cell.Mid
        qualifiedName: MinecaRTS.Cell.Mid
    isDefinition: true
    commentId: Overload:MinecaRTS.Cell.Mid
  MinecaRTS.Cell.RenderRect*:
    name:
      CSharp:
      - id: MinecaRTS.Cell.RenderRect*
        name: RenderRect
        nameWithType: Cell.RenderRect
        qualifiedName: MinecaRTS.Cell.RenderRect
      VB:
      - id: MinecaRTS.Cell.RenderRect*
        name: RenderRect
        nameWithType: Cell.RenderRect
        qualifiedName: MinecaRTS.Cell.RenderRect
    isDefinition: true
    commentId: Overload:MinecaRTS.Cell.RenderRect
  MinecaRTS.Cell.RenderMid*:
    name:
      CSharp:
      - id: MinecaRTS.Cell.RenderMid*
        name: RenderMid
        nameWithType: Cell.RenderMid
        qualifiedName: MinecaRTS.Cell.RenderMid
      VB:
      - id: MinecaRTS.Cell.RenderMid*
        name: RenderMid
        nameWithType: Cell.RenderMid
        qualifiedName: MinecaRTS.Cell.RenderMid
    isDefinition: true
    commentId: Overload:MinecaRTS.Cell.RenderMid
  MinecaRTS.Cell.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Cell.#ctor*
        name: Cell
        nameWithType: Cell.Cell
        qualifiedName: MinecaRTS.Cell.Cell
      VB:
      - id: MinecaRTS.Cell.#ctor*
        name: Cell
        nameWithType: Cell.Cell
        qualifiedName: MinecaRTS.Cell.Cell
    isDefinition: true
    commentId: Overload:MinecaRTS.Cell.#ctor
  MinecaRTS.Cell.Render*:
    name:
      CSharp:
      - id: MinecaRTS.Cell.Render*
        name: Render
        nameWithType: Cell.Render
        qualifiedName: MinecaRTS.Cell.Render
      VB:
      - id: MinecaRTS.Cell.Render*
        name: Render
        nameWithType: Cell.Render
        qualifiedName: MinecaRTS.Cell.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.Cell.Render
  MinecaRTS.DebugOp:
    name:
      CSharp:
      - id: MinecaRTS.DebugOp
        name: DebugOp
        nameWithType: DebugOp
        qualifiedName: MinecaRTS.DebugOp
      VB:
      - id: MinecaRTS.DebugOp
        name: DebugOp
        nameWithType: DebugOp
        qualifiedName: MinecaRTS.DebugOp
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.DebugOp
  Microsoft.Xna.Framework.Graphics.SpriteFont:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Graphics.SpriteFont
        name: SpriteFont
        nameWithType: SpriteFont
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteFont
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Graphics.SpriteFont
        name: SpriteFont
        nameWithType: SpriteFont
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteFont
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Graphics
    commentId: T:Microsoft.Xna.Framework.Graphics.SpriteFont
  MinecaRTS.Debug.Init*:
    name:
      CSharp:
      - id: MinecaRTS.Debug.Init*
        name: Init
        nameWithType: Debug.Init
        qualifiedName: MinecaRTS.Debug.Init
      VB:
      - id: MinecaRTS.Debug.Init*
        name: Init
        nameWithType: Debug.Init
        qualifiedName: MinecaRTS.Debug.Init
    isDefinition: true
    commentId: Overload:MinecaRTS.Debug.Init
  MinecaRTS.Debug.HandleInput*:
    name:
      CSharp:
      - id: MinecaRTS.Debug.HandleInput*
        name: HandleInput
        nameWithType: Debug.HandleInput
        qualifiedName: MinecaRTS.Debug.HandleInput
      VB:
      - id: MinecaRTS.Debug.HandleInput*
        name: HandleInput
        nameWithType: Debug.HandleInput
        qualifiedName: MinecaRTS.Debug.HandleInput
    isDefinition: true
    commentId: Overload:MinecaRTS.Debug.HandleInput
  MinecaRTS.Debug.IsOn*:
    name:
      CSharp:
      - id: MinecaRTS.Debug.IsOn*
        name: IsOn
        nameWithType: Debug.IsOn
        qualifiedName: MinecaRTS.Debug.IsOn
      VB:
      - id: MinecaRTS.Debug.IsOn*
        name: IsOn
        nameWithType: Debug.IsOn
        qualifiedName: MinecaRTS.Debug.IsOn
    isDefinition: true
    commentId: Overload:MinecaRTS.Debug.IsOn
  MinecaRTS.Debug.RenderDebugOptionStates*:
    name:
      CSharp:
      - id: MinecaRTS.Debug.RenderDebugOptionStates*
        name: RenderDebugOptionStates
        nameWithType: Debug.RenderDebugOptionStates
        qualifiedName: MinecaRTS.Debug.RenderDebugOptionStates
      VB:
      - id: MinecaRTS.Debug.RenderDebugOptionStates*
        name: RenderDebugOptionStates
        nameWithType: Debug.RenderDebugOptionStates
        qualifiedName: MinecaRTS.Debug.RenderDebugOptionStates
    isDefinition: true
    commentId: Overload:MinecaRTS.Debug.RenderDebugOptionStates
  MinecaRTS.Debug.ClearHookedText*:
    name:
      CSharp:
      - id: MinecaRTS.Debug.ClearHookedText*
        name: ClearHookedText
        nameWithType: Debug.ClearHookedText
        qualifiedName: MinecaRTS.Debug.ClearHookedText
      VB:
      - id: MinecaRTS.Debug.ClearHookedText*
        name: ClearHookedText
        nameWithType: Debug.ClearHookedText
        qualifiedName: MinecaRTS.Debug.ClearHookedText
    isDefinition: true
    commentId: Overload:MinecaRTS.Debug.ClearHookedText
  MinecaRTS.Debug.HookText*:
    name:
      CSharp:
      - id: MinecaRTS.Debug.HookText*
        name: HookText
        nameWithType: Debug.HookText
        qualifiedName: MinecaRTS.Debug.HookText
      VB:
      - id: MinecaRTS.Debug.HookText*
        name: HookText
        nameWithType: Debug.HookText
        qualifiedName: MinecaRTS.Debug.HookText
    isDefinition: true
    commentId: Overload:MinecaRTS.Debug.HookText
  MinecaRTS.Debug.RenderHookedText*:
    name:
      CSharp:
      - id: MinecaRTS.Debug.RenderHookedText*
        name: RenderHookedText
        nameWithType: Debug.RenderHookedText
        qualifiedName: MinecaRTS.Debug.RenderHookedText
      VB:
      - id: MinecaRTS.Debug.RenderHookedText*
        name: RenderHookedText
        nameWithType: Debug.RenderHookedText
        qualifiedName: MinecaRTS.Debug.RenderHookedText
    isDefinition: true
    commentId: Overload:MinecaRTS.Debug.RenderHookedText
  MinecaRTS.Debug:
    name:
      CSharp:
      - id: MinecaRTS.Debug
        name: Debug
        nameWithType: Debug
        qualifiedName: MinecaRTS.Debug
      VB:
      - id: MinecaRTS.Debug
        name: Debug
        nameWithType: Debug
        qualifiedName: MinecaRTS.Debug
    isDefinition: true
    commentId: T:MinecaRTS.Debug
  MinecaRTS.Track.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Track.#ctor*
        name: Track
        nameWithType: Track.Track
        qualifiedName: MinecaRTS.Track.Track
      VB:
      - id: MinecaRTS.Track.#ctor*
        name: Track
        nameWithType: Track.Track
        qualifiedName: MinecaRTS.Track.Track
    isDefinition: true
    commentId: Overload:MinecaRTS.Track.#ctor
  MinecaRTS.Pathfinder:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder
        name: Pathfinder
        nameWithType: Pathfinder
        qualifiedName: MinecaRTS.Pathfinder
      VB:
      - id: MinecaRTS.Pathfinder
        name: Pathfinder
        nameWithType: Pathfinder
        qualifiedName: MinecaRTS.Pathfinder
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Pathfinder
  MinecaRTS.TimeSlicedPathManager.AddSearch*:
    name:
      CSharp:
      - id: MinecaRTS.TimeSlicedPathManager.AddSearch*
        name: AddSearch
        nameWithType: TimeSlicedPathManager.AddSearch
        qualifiedName: MinecaRTS.TimeSlicedPathManager.AddSearch
      VB:
      - id: MinecaRTS.TimeSlicedPathManager.AddSearch*
        name: AddSearch
        nameWithType: TimeSlicedPathManager.AddSearch
        qualifiedName: MinecaRTS.TimeSlicedPathManager.AddSearch
    isDefinition: true
    commentId: Overload:MinecaRTS.TimeSlicedPathManager.AddSearch
  MinecaRTS.TimeSlicedPathManager.Update*:
    name:
      CSharp:
      - id: MinecaRTS.TimeSlicedPathManager.Update*
        name: Update
        nameWithType: TimeSlicedPathManager.Update
        qualifiedName: MinecaRTS.TimeSlicedPathManager.Update
      VB:
      - id: MinecaRTS.TimeSlicedPathManager.Update*
        name: Update
        nameWithType: TimeSlicedPathManager.Update
        qualifiedName: MinecaRTS.TimeSlicedPathManager.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.TimeSlicedPathManager.Update
  MinecaRTS.TimeSlicedPathManager:
    name:
      CSharp:
      - id: MinecaRTS.TimeSlicedPathManager
        name: TimeSlicedPathManager
        nameWithType: TimeSlicedPathManager
        qualifiedName: MinecaRTS.TimeSlicedPathManager
      VB:
      - id: MinecaRTS.TimeSlicedPathManager
        name: TimeSlicedPathManager
        nameWithType: TimeSlicedPathManager
        qualifiedName: MinecaRTS.TimeSlicedPathManager
    isDefinition: true
    commentId: T:MinecaRTS.TimeSlicedPathManager
  MinecaRTS.Dir:
    name:
      CSharp:
      - id: MinecaRTS.Dir
        name: Dir
        nameWithType: Dir
        qualifiedName: MinecaRTS.Dir
      VB:
      - id: MinecaRTS.Dir
        name: Dir
        nameWithType: Dir
        qualifiedName: MinecaRTS.Dir
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Dir
  MinecaRTS.Entity.ID*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.ID*
        name: ID
        nameWithType: Entity.ID
        qualifiedName: MinecaRTS.Entity.ID
      VB:
      - id: MinecaRTS.Entity.ID*
        name: ID
        nameWithType: Entity.ID
        qualifiedName: MinecaRTS.Entity.ID
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.ID
  MinecaRTS.Entity.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.#ctor*
        name: Entity
        nameWithType: Entity.Entity
        qualifiedName: MinecaRTS.Entity.Entity
      VB:
      - id: MinecaRTS.Entity.#ctor*
        name: Entity
        nameWithType: Entity.Entity
        qualifiedName: MinecaRTS.Entity.Entity
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.#ctor
  MinecaRTS.Entity.Finalize*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.Finalize*
        name: Finalize
        nameWithType: Entity.Finalize
        qualifiedName: MinecaRTS.Entity.Finalize
      VB:
      - id: MinecaRTS.Entity.Finalize*
        name: Finalize
        nameWithType: Entity.Finalize
        qualifiedName: MinecaRTS.Entity.Finalize
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.Finalize
  MinecaRTS.Entity.RenderPos*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.RenderPos*
        name: RenderPos
        nameWithType: Entity.RenderPos
        qualifiedName: MinecaRTS.Entity.RenderPos
      VB:
      - id: MinecaRTS.Entity.RenderPos*
        name: RenderPos
        nameWithType: Entity.RenderPos
        qualifiedName: MinecaRTS.Entity.RenderPos
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.RenderPos
  MinecaRTS.Entity.CollisionRect*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.CollisionRect*
        name: CollisionRect
        nameWithType: Entity.CollisionRect
        qualifiedName: MinecaRTS.Entity.CollisionRect
      VB:
      - id: MinecaRTS.Entity.CollisionRect*
        name: CollisionRect
        nameWithType: Entity.CollisionRect
        qualifiedName: MinecaRTS.Entity.CollisionRect
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.CollisionRect
  MinecaRTS.Entity.RenderRect*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.RenderRect*
        name: RenderRect
        nameWithType: Entity.RenderRect
        qualifiedName: MinecaRTS.Entity.RenderRect
      VB:
      - id: MinecaRTS.Entity.RenderRect*
        name: RenderRect
        nameWithType: Entity.RenderRect
        qualifiedName: MinecaRTS.Entity.RenderRect
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.RenderRect
  MinecaRTS.IRenderable.RenderRect:
    name:
      CSharp:
      - id: MinecaRTS.IRenderable.RenderRect
        name: RenderRect
        nameWithType: IRenderable.RenderRect
        qualifiedName: MinecaRTS.IRenderable.RenderRect
      VB:
      - id: MinecaRTS.IRenderable.RenderRect
        name: RenderRect
        nameWithType: IRenderable.RenderRect
        qualifiedName: MinecaRTS.IRenderable.RenderRect
    isDefinition: true
    parent: MinecaRTS.IRenderable
    commentId: P:MinecaRTS.IRenderable.RenderRect
  MinecaRTS.Entity.Mid*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.Mid*
        name: Mid
        nameWithType: Entity.Mid
        qualifiedName: MinecaRTS.Entity.Mid
      VB:
      - id: MinecaRTS.Entity.Mid*
        name: Mid
        nameWithType: Entity.Mid
        qualifiedName: MinecaRTS.Entity.Mid
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.Mid
  MinecaRTS.IRenderable.Mid:
    name:
      CSharp:
      - id: MinecaRTS.IRenderable.Mid
        name: Mid
        nameWithType: IRenderable.Mid
        qualifiedName: MinecaRTS.IRenderable.Mid
      VB:
      - id: MinecaRTS.IRenderable.Mid
        name: Mid
        nameWithType: IRenderable.Mid
        qualifiedName: MinecaRTS.IRenderable.Mid
    isDefinition: true
    parent: MinecaRTS.IRenderable
    commentId: P:MinecaRTS.IRenderable.Mid
  MinecaRTS.Entity.RenderMid*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.RenderMid*
        name: RenderMid
        nameWithType: Entity.RenderMid
        qualifiedName: MinecaRTS.Entity.RenderMid
      VB:
      - id: MinecaRTS.Entity.RenderMid*
        name: RenderMid
        nameWithType: Entity.RenderMid
        qualifiedName: MinecaRTS.Entity.RenderMid
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.RenderMid
  MinecaRTS.Entity.Update*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.Update*
        name: Update
        nameWithType: Entity.Update
        qualifiedName: MinecaRTS.Entity.Update
      VB:
      - id: MinecaRTS.Entity.Update*
        name: Update
        nameWithType: Entity.Update
        qualifiedName: MinecaRTS.Entity.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.Update
  MinecaRTS.Entity.Render*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.Render*
        name: Render
        nameWithType: Entity.Render
        qualifiedName: MinecaRTS.Entity.Render
      VB:
      - id: MinecaRTS.Entity.Render*
        name: Render
        nameWithType: Entity.Render
        qualifiedName: MinecaRTS.Entity.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.Render
  MinecaRTS.IRenderable.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch):
    name:
      CSharp:
      - id: MinecaRTS.IRenderable.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: IRenderable.Render
        qualifiedName: MinecaRTS.IRenderable.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.IRenderable.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: IRenderable.Render
        qualifiedName: MinecaRTS.IRenderable.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.IRenderable
    commentId: M:MinecaRTS.IRenderable.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  MinecaRTS.Entity.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.HandleMessage*
        name: HandleMessage
        nameWithType: Entity.HandleMessage
        qualifiedName: MinecaRTS.Entity.HandleMessage
      VB:
      - id: MinecaRTS.Entity.HandleMessage*
        name: HandleMessage
        nameWithType: Entity.HandleMessage
        qualifiedName: MinecaRTS.Entity.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.HandleMessage
  MinecaRTS.Entity.ExitState*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.ExitState*
        name: ExitState
        nameWithType: Entity.ExitState
        qualifiedName: MinecaRTS.Entity.ExitState
      VB:
      - id: MinecaRTS.Entity.ExitState*
        name: ExitState
        nameWithType: Entity.ExitState
        qualifiedName: MinecaRTS.Entity.ExitState
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.ExitState
  MinecaRTS.Entity.RenderDebug*:
    name:
      CSharp:
      - id: MinecaRTS.Entity.RenderDebug*
        name: RenderDebug
        nameWithType: Entity.RenderDebug
        qualifiedName: MinecaRTS.Entity.RenderDebug
      VB:
      - id: MinecaRTS.Entity.RenderDebug*
        name: RenderDebug
        nameWithType: Entity.RenderDebug
        qualifiedName: MinecaRTS.Entity.RenderDebug
    isDefinition: true
    commentId: Overload:MinecaRTS.Entity.RenderDebug
  MinecaRTS.MsgHandlerRegistry.NextID*:
    name:
      CSharp:
      - id: MinecaRTS.MsgHandlerRegistry.NextID*
        name: NextID
        nameWithType: MsgHandlerRegistry.NextID
        qualifiedName: MinecaRTS.MsgHandlerRegistry.NextID
      VB:
      - id: MinecaRTS.MsgHandlerRegistry.NextID*
        name: NextID
        nameWithType: MsgHandlerRegistry.NextID
        qualifiedName: MinecaRTS.MsgHandlerRegistry.NextID
    isDefinition: true
    commentId: Overload:MinecaRTS.MsgHandlerRegistry.NextID
  MinecaRTS.MsgHandlerRegistry.Register*:
    name:
      CSharp:
      - id: MinecaRTS.MsgHandlerRegistry.Register*
        name: Register
        nameWithType: MsgHandlerRegistry.Register
        qualifiedName: MinecaRTS.MsgHandlerRegistry.Register
      VB:
      - id: MinecaRTS.MsgHandlerRegistry.Register*
        name: Register
        nameWithType: MsgHandlerRegistry.Register
        qualifiedName: MinecaRTS.MsgHandlerRegistry.Register
    isDefinition: true
    commentId: Overload:MinecaRTS.MsgHandlerRegistry.Register
  MinecaRTS.MsgHandlerRegistry.RemoveEntity*:
    name:
      CSharp:
      - id: MinecaRTS.MsgHandlerRegistry.RemoveEntity*
        name: RemoveEntity
        nameWithType: MsgHandlerRegistry.RemoveEntity
        qualifiedName: MinecaRTS.MsgHandlerRegistry.RemoveEntity
      VB:
      - id: MinecaRTS.MsgHandlerRegistry.RemoveEntity*
        name: RemoveEntity
        nameWithType: MsgHandlerRegistry.RemoveEntity
        qualifiedName: MinecaRTS.MsgHandlerRegistry.RemoveEntity
    isDefinition: true
    commentId: Overload:MinecaRTS.MsgHandlerRegistry.RemoveEntity
  MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID*:
    name:
      CSharp:
      - id: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID*
        name: GetMsgHandlerFromID
        nameWithType: MsgHandlerRegistry.GetMsgHandlerFromID
        qualifiedName: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID
      VB:
      - id: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID*
        name: GetMsgHandlerFromID
        nameWithType: MsgHandlerRegistry.GetMsgHandlerFromID
        qualifiedName: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID
    isDefinition: true
    commentId: Overload:MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID
  MinecaRTS.MsgHandlerRegistry:
    name:
      CSharp:
      - id: MinecaRTS.MsgHandlerRegistry
        name: MsgHandlerRegistry
        nameWithType: MsgHandlerRegistry
        qualifiedName: MinecaRTS.MsgHandlerRegistry
      VB:
      - id: MinecaRTS.MsgHandlerRegistry
        name: MsgHandlerRegistry
        nameWithType: MsgHandlerRegistry
        qualifiedName: MinecaRTS.MsgHandlerRegistry
    isDefinition: true
    commentId: T:MinecaRTS.MsgHandlerRegistry
  MinecaRTS.ExtensionMethods.GetInflated*:
    name:
      CSharp:
      - id: MinecaRTS.ExtensionMethods.GetInflated*
        name: GetInflated
        nameWithType: ExtensionMethods.GetInflated
        qualifiedName: MinecaRTS.ExtensionMethods.GetInflated
      VB:
      - id: MinecaRTS.ExtensionMethods.GetInflated*
        name: GetInflated
        nameWithType: ExtensionMethods.GetInflated
        qualifiedName: MinecaRTS.ExtensionMethods.GetInflated
    isDefinition: true
    commentId: Overload:MinecaRTS.ExtensionMethods.GetInflated
  MinecaRTS.ExtensionMethods.TopLeft*:
    name:
      CSharp:
      - id: MinecaRTS.ExtensionMethods.TopLeft*
        name: TopLeft
        nameWithType: ExtensionMethods.TopLeft
        qualifiedName: MinecaRTS.ExtensionMethods.TopLeft
      VB:
      - id: MinecaRTS.ExtensionMethods.TopLeft*
        name: TopLeft
        nameWithType: ExtensionMethods.TopLeft
        qualifiedName: MinecaRTS.ExtensionMethods.TopLeft
    isDefinition: true
    commentId: Overload:MinecaRTS.ExtensionMethods.TopLeft
  MinecaRTS.ExtensionMethods.BottomRight*:
    name:
      CSharp:
      - id: MinecaRTS.ExtensionMethods.BottomRight*
        name: BottomRight
        nameWithType: ExtensionMethods.BottomRight
        qualifiedName: MinecaRTS.ExtensionMethods.BottomRight
      VB:
      - id: MinecaRTS.ExtensionMethods.BottomRight*
        name: BottomRight
        nameWithType: ExtensionMethods.BottomRight
        qualifiedName: MinecaRTS.ExtensionMethods.BottomRight
    isDefinition: true
    commentId: Overload:MinecaRTS.ExtensionMethods.BottomRight
  MinecaRTS.ExtensionMethods.Col*:
    name:
      CSharp:
      - id: MinecaRTS.ExtensionMethods.Col*
        name: Col
        nameWithType: ExtensionMethods.Col
        qualifiedName: MinecaRTS.ExtensionMethods.Col
      VB:
      - id: MinecaRTS.ExtensionMethods.Col*
        name: Col
        nameWithType: ExtensionMethods.Col
        qualifiedName: MinecaRTS.ExtensionMethods.Col
    isDefinition: true
    commentId: Overload:MinecaRTS.ExtensionMethods.Col
  MinecaRTS.ExtensionMethods.Row*:
    name:
      CSharp:
      - id: MinecaRTS.ExtensionMethods.Row*
        name: Row
        nameWithType: ExtensionMethods.Row
        qualifiedName: MinecaRTS.ExtensionMethods.Row
      VB:
      - id: MinecaRTS.ExtensionMethods.Row*
        name: Row
        nameWithType: ExtensionMethods.Row
        qualifiedName: MinecaRTS.ExtensionMethods.Row
    isDefinition: true
    commentId: Overload:MinecaRTS.ExtensionMethods.Row
  MinecaRTS.ExtensionMethods:
    name:
      CSharp:
      - id: MinecaRTS.ExtensionMethods
        name: ExtensionMethods
        nameWithType: ExtensionMethods
        qualifiedName: MinecaRTS.ExtensionMethods
      VB:
      - id: MinecaRTS.ExtensionMethods
        name: ExtensionMethods
        nameWithType: ExtensionMethods
        qualifiedName: MinecaRTS.ExtensionMethods
    isDefinition: true
    commentId: T:MinecaRTS.ExtensionMethods
  MinecaRTS.House.SupplyBoostAmount*:
    name:
      CSharp:
      - id: MinecaRTS.House.SupplyBoostAmount*
        name: SupplyBoostAmount
        nameWithType: House.SupplyBoostAmount
        qualifiedName: MinecaRTS.House.SupplyBoostAmount
      VB:
      - id: MinecaRTS.House.SupplyBoostAmount*
        name: SupplyBoostAmount
        nameWithType: House.SupplyBoostAmount
        qualifiedName: MinecaRTS.House.SupplyBoostAmount
    isDefinition: true
    commentId: Overload:MinecaRTS.House.SupplyBoostAmount
  MinecaRTS.House.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.House.#ctor*
        name: House
        nameWithType: House.House
        qualifiedName: MinecaRTS.House.House
      VB:
      - id: MinecaRTS.House.#ctor*
        name: House
        nameWithType: House.House
        qualifiedName: MinecaRTS.House.House
    isDefinition: true
    commentId: Overload:MinecaRTS.House.#ctor
  MinecaRTS.ICanAcceptResources.CollisionRect*:
    name:
      CSharp:
      - id: MinecaRTS.ICanAcceptResources.CollisionRect*
        name: CollisionRect
        nameWithType: ICanAcceptResources.CollisionRect
        qualifiedName: MinecaRTS.ICanAcceptResources.CollisionRect
      VB:
      - id: MinecaRTS.ICanAcceptResources.CollisionRect*
        name: CollisionRect
        nameWithType: ICanAcceptResources.CollisionRect
        qualifiedName: MinecaRTS.ICanAcceptResources.CollisionRect
    isDefinition: true
    commentId: Overload:MinecaRTS.ICanAcceptResources.CollisionRect
  MinecaRTS.ICanAcceptResources.Mid*:
    name:
      CSharp:
      - id: MinecaRTS.ICanAcceptResources.Mid*
        name: Mid
        nameWithType: ICanAcceptResources.Mid
        qualifiedName: MinecaRTS.ICanAcceptResources.Mid
      VB:
      - id: MinecaRTS.ICanAcceptResources.Mid*
        name: Mid
        nameWithType: ICanAcceptResources.Mid
        qualifiedName: MinecaRTS.ICanAcceptResources.Mid
    isDefinition: true
    commentId: Overload:MinecaRTS.ICanAcceptResources.Mid
  MinecaRTS.ICanAcceptResources.AcceptResources*:
    name:
      CSharp:
      - id: MinecaRTS.ICanAcceptResources.AcceptResources*
        name: AcceptResources
        nameWithType: ICanAcceptResources.AcceptResources
        qualifiedName: MinecaRTS.ICanAcceptResources.AcceptResources
      VB:
      - id: MinecaRTS.ICanAcceptResources.AcceptResources*
        name: AcceptResources
        nameWithType: ICanAcceptResources.AcceptResources
        qualifiedName: MinecaRTS.ICanAcceptResources.AcceptResources
    isDefinition: true
    commentId: Overload:MinecaRTS.ICanAcceptResources.AcceptResources
  MinecaRTS.IRenderable.RenderRect*:
    name:
      CSharp:
      - id: MinecaRTS.IRenderable.RenderRect*
        name: RenderRect
        nameWithType: IRenderable.RenderRect
        qualifiedName: MinecaRTS.IRenderable.RenderRect
      VB:
      - id: MinecaRTS.IRenderable.RenderRect*
        name: RenderRect
        nameWithType: IRenderable.RenderRect
        qualifiedName: MinecaRTS.IRenderable.RenderRect
    isDefinition: true
    commentId: Overload:MinecaRTS.IRenderable.RenderRect
  MinecaRTS.IRenderable.Mid*:
    name:
      CSharp:
      - id: MinecaRTS.IRenderable.Mid*
        name: Mid
        nameWithType: IRenderable.Mid
        qualifiedName: MinecaRTS.IRenderable.Mid
      VB:
      - id: MinecaRTS.IRenderable.Mid*
        name: Mid
        nameWithType: IRenderable.Mid
        qualifiedName: MinecaRTS.IRenderable.Mid
    isDefinition: true
    commentId: Overload:MinecaRTS.IRenderable.Mid
  MinecaRTS.IRenderable.Render*:
    name:
      CSharp:
      - id: MinecaRTS.IRenderable.Render*
        name: Render
        nameWithType: IRenderable.Render
        qualifiedName: MinecaRTS.IRenderable.Render
      VB:
      - id: MinecaRTS.IRenderable.Render*
        name: Render
        nameWithType: IRenderable.Render
        qualifiedName: MinecaRTS.IRenderable.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.IRenderable.Render
  Microsoft.Xna.Framework.Game:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game
        name: Game
        nameWithType: Game
        qualifiedName: Microsoft.Xna.Framework.Game
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game
        name: Game
        nameWithType: Game
        qualifiedName: Microsoft.Xna.Framework.Game
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework
    commentId: T:Microsoft.Xna.Framework.Game
  Microsoft.Xna.Framework.Game.Dispose:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Dispose
        name: Dispose
        nameWithType: Game.Dispose
        qualifiedName: Microsoft.Xna.Framework.Game.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.Dispose
        name: Dispose
        nameWithType: Game.Dispose
        qualifiedName: Microsoft.Xna.Framework.Game.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.Dispose
  Microsoft.Xna.Framework.Game.Dispose(System.Boolean):
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
        name: Dispose
        nameWithType: Game.Dispose
        qualifiedName: Microsoft.Xna.Framework.Game.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
        name: Dispose
        nameWithType: Game.Dispose
        qualifiedName: Microsoft.Xna.Framework.Game.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.Dispose(System.Boolean)
  Microsoft.Xna.Framework.Game.Exit:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Exit
        name: Exit
        nameWithType: Game.Exit
        qualifiedName: Microsoft.Xna.Framework.Game.Exit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.Exit
        name: Exit
        nameWithType: Game.Exit
        qualifiedName: Microsoft.Xna.Framework.Game.Exit
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.Exit
  Microsoft.Xna.Framework.Game.ResetElapsedTime:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.ResetElapsedTime
        name: ResetElapsedTime
        nameWithType: Game.ResetElapsedTime
        qualifiedName: Microsoft.Xna.Framework.Game.ResetElapsedTime
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.ResetElapsedTime
        name: ResetElapsedTime
        nameWithType: Game.ResetElapsedTime
        qualifiedName: Microsoft.Xna.Framework.Game.ResetElapsedTime
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.ResetElapsedTime
  Microsoft.Xna.Framework.Game.SuppressDraw:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.SuppressDraw
        name: SuppressDraw
        nameWithType: Game.SuppressDraw
        qualifiedName: Microsoft.Xna.Framework.Game.SuppressDraw
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.SuppressDraw
        name: SuppressDraw
        nameWithType: Game.SuppressDraw
        qualifiedName: Microsoft.Xna.Framework.Game.SuppressDraw
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.SuppressDraw
  Microsoft.Xna.Framework.Game.RunOneFrame:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.RunOneFrame
        name: RunOneFrame
        nameWithType: Game.RunOneFrame
        qualifiedName: Microsoft.Xna.Framework.Game.RunOneFrame
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.RunOneFrame
        name: RunOneFrame
        nameWithType: Game.RunOneFrame
        qualifiedName: Microsoft.Xna.Framework.Game.RunOneFrame
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.RunOneFrame
  Microsoft.Xna.Framework.Game.Run:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Run
        name: Run
        nameWithType: Game.Run
        qualifiedName: Microsoft.Xna.Framework.Game.Run
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.Run
        name: Run
        nameWithType: Game.Run
        qualifiedName: Microsoft.Xna.Framework.Game.Run
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.Run
  Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior):
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
        name: Run
        nameWithType: Game.Run
        qualifiedName: Microsoft.Xna.Framework.Game.Run
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.GameRunBehavior
        name: GameRunBehavior
        nameWithType: GameRunBehavior
        qualifiedName: Microsoft.Xna.Framework.GameRunBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
        name: Run
        nameWithType: Game.Run
        qualifiedName: Microsoft.Xna.Framework.Game.Run
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.GameRunBehavior
        name: GameRunBehavior
        nameWithType: GameRunBehavior
        qualifiedName: Microsoft.Xna.Framework.GameRunBehavior
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.Run(Microsoft.Xna.Framework.GameRunBehavior)
  Microsoft.Xna.Framework.Game.Tick:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Tick
        name: Tick
        nameWithType: Game.Tick
        qualifiedName: Microsoft.Xna.Framework.Game.Tick
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.Tick
        name: Tick
        nameWithType: Game.Tick
        qualifiedName: Microsoft.Xna.Framework.Game.Tick
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.Tick
  Microsoft.Xna.Framework.Game.BeginDraw:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.BeginDraw
        name: BeginDraw
        nameWithType: Game.BeginDraw
        qualifiedName: Microsoft.Xna.Framework.Game.BeginDraw
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.BeginDraw
        name: BeginDraw
        nameWithType: Game.BeginDraw
        qualifiedName: Microsoft.Xna.Framework.Game.BeginDraw
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.BeginDraw
  Microsoft.Xna.Framework.Game.EndDraw:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.EndDraw
        name: EndDraw
        nameWithType: Game.EndDraw
        qualifiedName: Microsoft.Xna.Framework.Game.EndDraw
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.EndDraw
        name: EndDraw
        nameWithType: Game.EndDraw
        qualifiedName: Microsoft.Xna.Framework.Game.EndDraw
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.EndDraw
  Microsoft.Xna.Framework.Game.BeginRun:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.BeginRun
        name: BeginRun
        nameWithType: Game.BeginRun
        qualifiedName: Microsoft.Xna.Framework.Game.BeginRun
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.BeginRun
        name: BeginRun
        nameWithType: Game.BeginRun
        qualifiedName: Microsoft.Xna.Framework.Game.BeginRun
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.BeginRun
  Microsoft.Xna.Framework.Game.EndRun:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.EndRun
        name: EndRun
        nameWithType: Game.EndRun
        qualifiedName: Microsoft.Xna.Framework.Game.EndRun
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.EndRun
        name: EndRun
        nameWithType: Game.EndRun
        qualifiedName: Microsoft.Xna.Framework.Game.EndRun
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.EndRun
  Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs):
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
        name: OnExiting
        nameWithType: Game.OnExiting
        qualifiedName: Microsoft.Xna.Framework.Game.OnExiting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        qualifiedName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
        name: OnExiting
        nameWithType: Game.OnExiting
        qualifiedName: Microsoft.Xna.Framework.Game.OnExiting
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        qualifiedName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.OnExiting(System.Object,System.EventArgs)
  Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs):
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
        name: OnActivated
        nameWithType: Game.OnActivated
        qualifiedName: Microsoft.Xna.Framework.Game.OnActivated
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        qualifiedName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
        name: OnActivated
        nameWithType: Game.OnActivated
        qualifiedName: Microsoft.Xna.Framework.Game.OnActivated
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        qualifiedName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.OnActivated(System.Object,System.EventArgs)
  Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs):
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
        name: OnDeactivated
        nameWithType: Game.OnDeactivated
        qualifiedName: Microsoft.Xna.Framework.Game.OnDeactivated
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        qualifiedName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
        name: OnDeactivated
        nameWithType: Game.OnDeactivated
        qualifiedName: Microsoft.Xna.Framework.Game.OnDeactivated
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.EventArgs
        name: EventArgs
        nameWithType: EventArgs
        qualifiedName: System.EventArgs
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.OnDeactivated(System.Object,System.EventArgs)
  Microsoft.Xna.Framework.Game.LaunchParameters:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.LaunchParameters
        name: LaunchParameters
        nameWithType: Game.LaunchParameters
        qualifiedName: Microsoft.Xna.Framework.Game.LaunchParameters
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.LaunchParameters
        name: LaunchParameters
        nameWithType: Game.LaunchParameters
        qualifiedName: Microsoft.Xna.Framework.Game.LaunchParameters
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.LaunchParameters
  Microsoft.Xna.Framework.Game.Components:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Components
        name: Components
        nameWithType: Game.Components
        qualifiedName: Microsoft.Xna.Framework.Game.Components
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.Components
        name: Components
        nameWithType: Game.Components
        qualifiedName: Microsoft.Xna.Framework.Game.Components
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.Components
  Microsoft.Xna.Framework.Game.InactiveSleepTime:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.InactiveSleepTime
        name: InactiveSleepTime
        nameWithType: Game.InactiveSleepTime
        qualifiedName: Microsoft.Xna.Framework.Game.InactiveSleepTime
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.InactiveSleepTime
        name: InactiveSleepTime
        nameWithType: Game.InactiveSleepTime
        qualifiedName: Microsoft.Xna.Framework.Game.InactiveSleepTime
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.InactiveSleepTime
  Microsoft.Xna.Framework.Game.MaxElapsedTime:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.MaxElapsedTime
        name: MaxElapsedTime
        nameWithType: Game.MaxElapsedTime
        qualifiedName: Microsoft.Xna.Framework.Game.MaxElapsedTime
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.MaxElapsedTime
        name: MaxElapsedTime
        nameWithType: Game.MaxElapsedTime
        qualifiedName: Microsoft.Xna.Framework.Game.MaxElapsedTime
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.MaxElapsedTime
  Microsoft.Xna.Framework.Game.IsActive:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.IsActive
        name: IsActive
        nameWithType: Game.IsActive
        qualifiedName: Microsoft.Xna.Framework.Game.IsActive
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.IsActive
        name: IsActive
        nameWithType: Game.IsActive
        qualifiedName: Microsoft.Xna.Framework.Game.IsActive
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.IsActive
  Microsoft.Xna.Framework.Game.IsMouseVisible:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.IsMouseVisible
        name: IsMouseVisible
        nameWithType: Game.IsMouseVisible
        qualifiedName: Microsoft.Xna.Framework.Game.IsMouseVisible
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.IsMouseVisible
        name: IsMouseVisible
        nameWithType: Game.IsMouseVisible
        qualifiedName: Microsoft.Xna.Framework.Game.IsMouseVisible
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.IsMouseVisible
  Microsoft.Xna.Framework.Game.TargetElapsedTime:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.TargetElapsedTime
        name: TargetElapsedTime
        nameWithType: Game.TargetElapsedTime
        qualifiedName: Microsoft.Xna.Framework.Game.TargetElapsedTime
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.TargetElapsedTime
        name: TargetElapsedTime
        nameWithType: Game.TargetElapsedTime
        qualifiedName: Microsoft.Xna.Framework.Game.TargetElapsedTime
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.TargetElapsedTime
  Microsoft.Xna.Framework.Game.IsFixedTimeStep:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.IsFixedTimeStep
        name: IsFixedTimeStep
        nameWithType: Game.IsFixedTimeStep
        qualifiedName: Microsoft.Xna.Framework.Game.IsFixedTimeStep
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.IsFixedTimeStep
        name: IsFixedTimeStep
        nameWithType: Game.IsFixedTimeStep
        qualifiedName: Microsoft.Xna.Framework.Game.IsFixedTimeStep
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.IsFixedTimeStep
  Microsoft.Xna.Framework.Game.Services:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Services
        name: Services
        nameWithType: Game.Services
        qualifiedName: Microsoft.Xna.Framework.Game.Services
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.Services
        name: Services
        nameWithType: Game.Services
        qualifiedName: Microsoft.Xna.Framework.Game.Services
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.Services
  Microsoft.Xna.Framework.Game.Content:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Content
        name: Content
        nameWithType: Game.Content
        qualifiedName: Microsoft.Xna.Framework.Game.Content
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.Content
        name: Content
        nameWithType: Game.Content
        qualifiedName: Microsoft.Xna.Framework.Game.Content
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.Content
  Microsoft.Xna.Framework.Game.GraphicsDevice:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.GraphicsDevice
        name: GraphicsDevice
        nameWithType: Game.GraphicsDevice
        qualifiedName: Microsoft.Xna.Framework.Game.GraphicsDevice
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.GraphicsDevice
        name: GraphicsDevice
        nameWithType: Game.GraphicsDevice
        qualifiedName: Microsoft.Xna.Framework.Game.GraphicsDevice
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.GraphicsDevice
  Microsoft.Xna.Framework.Game.Window:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Window
        name: Window
        nameWithType: Game.Window
        qualifiedName: Microsoft.Xna.Framework.Game.Window
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.Window
        name: Window
        nameWithType: Game.Window
        qualifiedName: Microsoft.Xna.Framework.Game.Window
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: P:Microsoft.Xna.Framework.Game.Window
  Microsoft.Xna.Framework.Game.Activated:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Activated
        name: Activated
        nameWithType: Game.Activated
        qualifiedName: Microsoft.Xna.Framework.Game.Activated
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.Activated
        name: Activated
        nameWithType: Game.Activated
        qualifiedName: Microsoft.Xna.Framework.Game.Activated
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: E:Microsoft.Xna.Framework.Game.Activated
  Microsoft.Xna.Framework.Game.Deactivated:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Deactivated
        name: Deactivated
        nameWithType: Game.Deactivated
        qualifiedName: Microsoft.Xna.Framework.Game.Deactivated
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.Deactivated
        name: Deactivated
        nameWithType: Game.Deactivated
        qualifiedName: Microsoft.Xna.Framework.Game.Deactivated
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: E:Microsoft.Xna.Framework.Game.Deactivated
  Microsoft.Xna.Framework.Game.Disposed:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Disposed
        name: Disposed
        nameWithType: Game.Disposed
        qualifiedName: Microsoft.Xna.Framework.Game.Disposed
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.Disposed
        name: Disposed
        nameWithType: Game.Disposed
        qualifiedName: Microsoft.Xna.Framework.Game.Disposed
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: E:Microsoft.Xna.Framework.Game.Disposed
  Microsoft.Xna.Framework.Game.Exiting:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Exiting
        name: Exiting
        nameWithType: Game.Exiting
        qualifiedName: Microsoft.Xna.Framework.Game.Exiting
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Game.Exiting
        name: Exiting
        nameWithType: Game.Exiting
        qualifiedName: Microsoft.Xna.Framework.Game.Exiting
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: E:Microsoft.Xna.Framework.Game.Exiting
  System.IDisposable:
    name:
      CSharp:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
      VB:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.IDisposable
  Microsoft.Xna.Framework.GraphicsDeviceManager:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.GraphicsDeviceManager
        name: GraphicsDeviceManager
        nameWithType: GraphicsDeviceManager
        qualifiedName: Microsoft.Xna.Framework.GraphicsDeviceManager
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.GraphicsDeviceManager
        name: GraphicsDeviceManager
        nameWithType: GraphicsDeviceManager
        qualifiedName: Microsoft.Xna.Framework.GraphicsDeviceManager
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework
    commentId: T:Microsoft.Xna.Framework.GraphicsDeviceManager
  MinecaRTS.MinecaRTS.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.MinecaRTS.#ctor*
        name: MinecaRTS
        nameWithType: MinecaRTS.MinecaRTS
        qualifiedName: MinecaRTS.MinecaRTS.MinecaRTS
      VB:
      - id: MinecaRTS.MinecaRTS.#ctor*
        name: MinecaRTS
        nameWithType: MinecaRTS.MinecaRTS
        qualifiedName: MinecaRTS.MinecaRTS.MinecaRTS
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecaRTS.#ctor
  Microsoft.Xna.Framework.Game.Initialize:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Initialize
        name: Initialize
        nameWithType: Game.Initialize
        qualifiedName: Microsoft.Xna.Framework.Game.Initialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.Initialize
        name: Initialize
        nameWithType: Game.Initialize
        qualifiedName: Microsoft.Xna.Framework.Game.Initialize
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.Initialize
  MinecaRTS.MinecaRTS.Initialize*:
    name:
      CSharp:
      - id: MinecaRTS.MinecaRTS.Initialize*
        name: Initialize
        nameWithType: MinecaRTS.Initialize
        qualifiedName: MinecaRTS.MinecaRTS.Initialize
      VB:
      - id: MinecaRTS.MinecaRTS.Initialize*
        name: Initialize
        nameWithType: MinecaRTS.Initialize
        qualifiedName: MinecaRTS.MinecaRTS.Initialize
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecaRTS.Initialize
  Microsoft.Xna.Framework.Game.LoadContent:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.LoadContent
        name: LoadContent
        nameWithType: Game.LoadContent
        qualifiedName: Microsoft.Xna.Framework.Game.LoadContent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.LoadContent
        name: LoadContent
        nameWithType: Game.LoadContent
        qualifiedName: Microsoft.Xna.Framework.Game.LoadContent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.LoadContent
  MinecaRTS.MinecaRTS.LoadContent*:
    name:
      CSharp:
      - id: MinecaRTS.MinecaRTS.LoadContent*
        name: LoadContent
        nameWithType: MinecaRTS.LoadContent
        qualifiedName: MinecaRTS.MinecaRTS.LoadContent
      VB:
      - id: MinecaRTS.MinecaRTS.LoadContent*
        name: LoadContent
        nameWithType: MinecaRTS.LoadContent
        qualifiedName: MinecaRTS.MinecaRTS.LoadContent
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecaRTS.LoadContent
  Microsoft.Xna.Framework.Game.UnloadContent:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.UnloadContent
        name: UnloadContent
        nameWithType: Game.UnloadContent
        qualifiedName: Microsoft.Xna.Framework.Game.UnloadContent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.UnloadContent
        name: UnloadContent
        nameWithType: Game.UnloadContent
        qualifiedName: Microsoft.Xna.Framework.Game.UnloadContent
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.UnloadContent
  MinecaRTS.MinecaRTS.UnloadContent*:
    name:
      CSharp:
      - id: MinecaRTS.MinecaRTS.UnloadContent*
        name: UnloadContent
        nameWithType: MinecaRTS.UnloadContent
        qualifiedName: MinecaRTS.MinecaRTS.UnloadContent
      VB:
      - id: MinecaRTS.MinecaRTS.UnloadContent*
        name: UnloadContent
        nameWithType: MinecaRTS.UnloadContent
        qualifiedName: MinecaRTS.MinecaRTS.UnloadContent
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecaRTS.UnloadContent
  Microsoft.Xna.Framework.GameTime:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.GameTime
        name: GameTime
        nameWithType: GameTime
        qualifiedName: Microsoft.Xna.Framework.GameTime
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.GameTime
        name: GameTime
        nameWithType: GameTime
        qualifiedName: Microsoft.Xna.Framework.GameTime
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework
    commentId: T:Microsoft.Xna.Framework.GameTime
  Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime):
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
        name: Update
        nameWithType: Game.Update
        qualifiedName: Microsoft.Xna.Framework.Game.Update
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.GameTime
        name: GameTime
        nameWithType: GameTime
        qualifiedName: Microsoft.Xna.Framework.GameTime
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
        name: Update
        nameWithType: Game.Update
        qualifiedName: Microsoft.Xna.Framework.Game.Update
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.GameTime
        name: GameTime
        nameWithType: GameTime
        qualifiedName: Microsoft.Xna.Framework.GameTime
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.Update(Microsoft.Xna.Framework.GameTime)
  MinecaRTS.MinecaRTS.Update*:
    name:
      CSharp:
      - id: MinecaRTS.MinecaRTS.Update*
        name: Update
        nameWithType: MinecaRTS.Update
        qualifiedName: MinecaRTS.MinecaRTS.Update
      VB:
      - id: MinecaRTS.MinecaRTS.Update*
        name: Update
        nameWithType: MinecaRTS.Update
        qualifiedName: MinecaRTS.MinecaRTS.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecaRTS.Update
  Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime):
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
        name: Draw
        nameWithType: Game.Draw
        qualifiedName: Microsoft.Xna.Framework.Game.Draw
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.GameTime
        name: GameTime
        nameWithType: GameTime
        qualifiedName: Microsoft.Xna.Framework.GameTime
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
        name: Draw
        nameWithType: Game.Draw
        qualifiedName: Microsoft.Xna.Framework.Game.Draw
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.GameTime
        name: GameTime
        nameWithType: GameTime
        qualifiedName: Microsoft.Xna.Framework.GameTime
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Microsoft.Xna.Framework.Game
    commentId: M:Microsoft.Xna.Framework.Game.Draw(Microsoft.Xna.Framework.GameTime)
  MinecaRTS.MinecaRTS.Draw*:
    name:
      CSharp:
      - id: MinecaRTS.MinecaRTS.Draw*
        name: Draw
        nameWithType: MinecaRTS.Draw
        qualifiedName: MinecaRTS.MinecaRTS.Draw
      VB:
      - id: MinecaRTS.MinecaRTS.Draw*
        name: Draw
        nameWithType: MinecaRTS.Draw
        qualifiedName: MinecaRTS.MinecaRTS.Draw
    isDefinition: true
    commentId: Overload:MinecaRTS.MinecaRTS.Draw
  MinecaRTS.Grid.CellSize*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.CellSize*
        name: CellSize
        nameWithType: Grid.CellSize
        qualifiedName: MinecaRTS.Grid.CellSize
      VB:
      - id: MinecaRTS.Grid.CellSize*
        name: CellSize
        nameWithType: Grid.CellSize
        qualifiedName: MinecaRTS.Grid.CellSize
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.CellSize
  MinecaRTS.Grid.Pos*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.Pos*
        name: Pos
        nameWithType: Grid.Pos
        qualifiedName: MinecaRTS.Grid.Pos
      VB:
      - id: MinecaRTS.Grid.Pos*
        name: Pos
        nameWithType: Grid.Pos
        qualifiedName: MinecaRTS.Grid.Pos
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.Pos
  MinecaRTS.Grid.Item*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.Item*
        name: Item
        nameWithType: Grid.Item
        qualifiedName: MinecaRTS.Grid.Item
      VB:
      - id: MinecaRTS.Grid.Item*
        name: Item
        nameWithType: Grid.Item
        qualifiedName: MinecaRTS.Grid.Item
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.Item
  MinecaRTS.Grid.Cols*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.Cols*
        name: Cols
        nameWithType: Grid.Cols
        qualifiedName: MinecaRTS.Grid.Cols
      VB:
      - id: MinecaRTS.Grid.Cols*
        name: Cols
        nameWithType: Grid.Cols
        qualifiedName: MinecaRTS.Grid.Cols
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.Cols
  MinecaRTS.Grid.Rows*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.Rows*
        name: Rows
        nameWithType: Grid.Rows
        qualifiedName: MinecaRTS.Grid.Rows
      VB:
      - id: MinecaRTS.Grid.Rows*
        name: Rows
        nameWithType: Grid.Rows
        qualifiedName: MinecaRTS.Grid.Rows
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.Rows
  MinecaRTS.Grid.Width*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.Width*
        name: Width
        nameWithType: Grid.Width
        qualifiedName: MinecaRTS.Grid.Width
      VB:
      - id: MinecaRTS.Grid.Width*
        name: Width
        nameWithType: Grid.Width
        qualifiedName: MinecaRTS.Grid.Width
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.Width
  MinecaRTS.Grid.Height*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.Height*
        name: Height
        nameWithType: Grid.Height
        qualifiedName: MinecaRTS.Grid.Height
      VB:
      - id: MinecaRTS.Grid.Height*
        name: Height
        nameWithType: Grid.Height
        qualifiedName: MinecaRTS.Grid.Height
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.Height
  MinecaRTS.Grid.CollisionRect*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.CollisionRect*
        name: CollisionRect
        nameWithType: Grid.CollisionRect
        qualifiedName: MinecaRTS.Grid.CollisionRect
      VB:
      - id: MinecaRTS.Grid.CollisionRect*
        name: CollisionRect
        nameWithType: Grid.CollisionRect
        qualifiedName: MinecaRTS.Grid.CollisionRect
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.CollisionRect
  MinecaRTS.Grid.RenderRect*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.RenderRect*
        name: RenderRect
        nameWithType: Grid.RenderRect
        qualifiedName: MinecaRTS.Grid.RenderRect
      VB:
      - id: MinecaRTS.Grid.RenderRect*
        name: RenderRect
        nameWithType: Grid.RenderRect
        qualifiedName: MinecaRTS.Grid.RenderRect
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.RenderRect
  MinecaRTS.Grid.ShowGrid*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.ShowGrid*
        name: ShowGrid
        nameWithType: Grid.ShowGrid
        qualifiedName: MinecaRTS.Grid.ShowGrid
      VB:
      - id: MinecaRTS.Grid.ShowGrid*
        name: ShowGrid
        nameWithType: Grid.ShowGrid
        qualifiedName: MinecaRTS.Grid.ShowGrid
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.ShowGrid
  MinecaRTS.Grid.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.#ctor*
        name: Grid
        nameWithType: Grid.Grid
        qualifiedName: MinecaRTS.Grid.Grid
      VB:
      - id: MinecaRTS.Grid.#ctor*
        name: Grid
        nameWithType: Grid.Grid
        qualifiedName: MinecaRTS.Grid.Grid
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.#ctor
  System.Collections.Generic.ICollection`1:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.ICollection`1
  System.Collections.Generic.ICollection{MinecaRTS.Cell}:
    name:
      CSharp:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.ICollection`1
        name: ICollection
        nameWithType: ICollection
        qualifiedName: System.Collections.Generic.ICollection
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.ICollection`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.ICollection{MinecaRTS.Cell}
  MinecaRTS.Grid.AddCell*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.AddCell*
        name: AddCell
        nameWithType: Grid.AddCell
        qualifiedName: MinecaRTS.Grid.AddCell
      VB:
      - id: MinecaRTS.Grid.AddCell*
        name: AddCell
        nameWithType: Grid.AddCell
        qualifiedName: MinecaRTS.Grid.AddCell
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.AddCell
  MinecaRTS.Grid.CellAt*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.CellAt*
        name: CellAt
        nameWithType: Grid.CellAt
        qualifiedName: MinecaRTS.Grid.CellAt
      VB:
      - id: MinecaRTS.Grid.CellAt*
        name: CellAt
        nameWithType: Grid.CellAt
        qualifiedName: MinecaRTS.Grid.CellAt
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.CellAt
  MinecaRTS.Grid.CellAtMousePos*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.CellAtMousePos*
        name: CellAtMousePos
        nameWithType: Grid.CellAtMousePos
        qualifiedName: MinecaRTS.Grid.CellAtMousePos
      VB:
      - id: MinecaRTS.Grid.CellAtMousePos*
        name: CellAtMousePos
        nameWithType: Grid.CellAtMousePos
        qualifiedName: MinecaRTS.Grid.CellAtMousePos
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.CellAtMousePos
  MinecaRTS.Grid.IndexAt*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.IndexAt*
        name: IndexAt
        nameWithType: Grid.IndexAt
        qualifiedName: MinecaRTS.Grid.IndexAt
      VB:
      - id: MinecaRTS.Grid.IndexAt*
        name: IndexAt
        nameWithType: Grid.IndexAt
        qualifiedName: MinecaRTS.Grid.IndexAt
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.IndexAt
  MinecaRTS.Grid.Get33GridIndexesAroundIndex*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.Get33GridIndexesAroundIndex*
        name: Get33GridIndexesAroundIndex
        nameWithType: Grid.Get33GridIndexesAroundIndex
        qualifiedName: MinecaRTS.Grid.Get33GridIndexesAroundIndex
      VB:
      - id: MinecaRTS.Grid.Get33GridIndexesAroundIndex*
        name: Get33GridIndexesAroundIndex
        nameWithType: Grid.Get33GridIndexesAroundIndex
        qualifiedName: MinecaRTS.Grid.Get33GridIndexesAroundIndex
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.Get33GridIndexesAroundIndex
  MinecaRTS.Grid.Get33GridIndexesAroundPos*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.Get33GridIndexesAroundPos*
        name: Get33GridIndexesAroundPos
        nameWithType: Grid.Get33GridIndexesAroundPos
        qualifiedName: MinecaRTS.Grid.Get33GridIndexesAroundPos
      VB:
      - id: MinecaRTS.Grid.Get33GridIndexesAroundPos*
        name: Get33GridIndexesAroundPos
        nameWithType: Grid.Get33GridIndexesAroundPos
        qualifiedName: MinecaRTS.Grid.Get33GridIndexesAroundPos
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.Get33GridIndexesAroundPos
  MinecaRTS.Grid.RectIsClear*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.RectIsClear*
        name: RectIsClear
        nameWithType: Grid.RectIsClear
        qualifiedName: MinecaRTS.Grid.RectIsClear
      VB:
      - id: MinecaRTS.Grid.RectIsClear*
        name: RectIsClear
        nameWithType: Grid.RectIsClear
        qualifiedName: MinecaRTS.Grid.RectIsClear
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.RectIsClear
  MinecaRTS.Grid.CellsInRect*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.CellsInRect*
        name: CellsInRect
        nameWithType: Grid.CellsInRect
        qualifiedName: MinecaRTS.Grid.CellsInRect
      VB:
      - id: MinecaRTS.Grid.CellsInRect*
        name: CellsInRect
        nameWithType: Grid.CellsInRect
        qualifiedName: MinecaRTS.Grid.CellsInRect
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.CellsInRect
  System.Collections.Generic.HashSet{MinecaRTS.Cell}:
    name:
      CSharp:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: System.Collections.Generic.HashSet
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: System.Collections.Generic.HashSet
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.HashSet`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.HashSet{MinecaRTS.Cell}
  MinecaRTS.Grid.CellsInRectFromLines*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.CellsInRectFromLines*
        name: CellsInRectFromLines
        nameWithType: Grid.CellsInRectFromLines
        qualifiedName: MinecaRTS.Grid.CellsInRectFromLines
      VB:
      - id: MinecaRTS.Grid.CellsInRectFromLines*
        name: CellsInRectFromLines
        nameWithType: Grid.CellsInRectFromLines
        qualifiedName: MinecaRTS.Grid.CellsInRectFromLines
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.CellsInRectFromLines
  MinecaRTS.Grid.CellsOnLine*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.CellsOnLine*
        name: CellsOnLine
        nameWithType: Grid.CellsOnLine
        qualifiedName: MinecaRTS.Grid.CellsOnLine
      VB:
      - id: MinecaRTS.Grid.CellsOnLine*
        name: CellsOnLine
        nameWithType: Grid.CellsOnLine
        qualifiedName: MinecaRTS.Grid.CellsOnLine
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.CellsOnLine
  MinecaRTS.Grid.AddColumns*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.AddColumns*
        name: AddColumns
        nameWithType: Grid.AddColumns
        qualifiedName: MinecaRTS.Grid.AddColumns
      VB:
      - id: MinecaRTS.Grid.AddColumns*
        name: AddColumns
        nameWithType: Grid.AddColumns
        qualifiedName: MinecaRTS.Grid.AddColumns
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.AddColumns
  MinecaRTS.Grid.AddRows*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.AddRows*
        name: AddRows
        nameWithType: Grid.AddRows
        qualifiedName: MinecaRTS.Grid.AddRows
      VB:
      - id: MinecaRTS.Grid.AddRows*
        name: AddRows
        nameWithType: Grid.AddRows
        qualifiedName: MinecaRTS.Grid.AddRows
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.AddRows
  MinecaRTS.Grid.MakeBorder*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.MakeBorder*
        name: MakeBorder
        nameWithType: Grid.MakeBorder
        qualifiedName: MinecaRTS.Grid.MakeBorder
      VB:
      - id: MinecaRTS.Grid.MakeBorder*
        name: MakeBorder
        nameWithType: Grid.MakeBorder
        qualifiedName: MinecaRTS.Grid.MakeBorder
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.MakeBorder
  MinecaRTS.Grid.Render*:
    name:
      CSharp:
      - id: MinecaRTS.Grid.Render*
        name: Render
        nameWithType: Grid.Render
        qualifiedName: MinecaRTS.Grid.Render
      VB:
      - id: MinecaRTS.Grid.Render*
        name: Render
        nameWithType: Grid.Render
        qualifiedName: MinecaRTS.Grid.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.Grid.Render
  MinecaRTS.HumanPlayer.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.HumanPlayer.#ctor*
        name: HumanPlayer
        nameWithType: HumanPlayer.HumanPlayer
        qualifiedName: MinecaRTS.HumanPlayer.HumanPlayer
      VB:
      - id: MinecaRTS.HumanPlayer.#ctor*
        name: HumanPlayer
        nameWithType: HumanPlayer.HumanPlayer
        qualifiedName: MinecaRTS.HumanPlayer.HumanPlayer
    isDefinition: true
    commentId: Overload:MinecaRTS.HumanPlayer.#ctor
  MinecaRTS.HumanPlayer.HandleInput*:
    name:
      CSharp:
      - id: MinecaRTS.HumanPlayer.HandleInput*
        name: HandleInput
        nameWithType: HumanPlayer.HandleInput
        qualifiedName: MinecaRTS.HumanPlayer.HandleInput
      VB:
      - id: MinecaRTS.HumanPlayer.HandleInput*
        name: HandleInput
        nameWithType: HumanPlayer.HandleInput
        qualifiedName: MinecaRTS.HumanPlayer.HandleInput
    isDefinition: true
    commentId: Overload:MinecaRTS.HumanPlayer.HandleInput
  MinecaRTS.HumanPlayer.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.HumanPlayer.HandleMessage*
        name: HandleMessage
        nameWithType: HumanPlayer.HandleMessage
        qualifiedName: MinecaRTS.HumanPlayer.HandleMessage
      VB:
      - id: MinecaRTS.HumanPlayer.HandleMessage*
        name: HandleMessage
        nameWithType: HumanPlayer.HandleMessage
        qualifiedName: MinecaRTS.HumanPlayer.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.HumanPlayer.HandleMessage
  MinecaRTS.HumanPlayer.Render*:
    name:
      CSharp:
      - id: MinecaRTS.HumanPlayer.Render*
        name: Render
        nameWithType: HumanPlayer.Render
        qualifiedName: MinecaRTS.HumanPlayer.Render
      VB:
      - id: MinecaRTS.HumanPlayer.Render*
        name: Render
        nameWithType: HumanPlayer.Render
        qualifiedName: MinecaRTS.HumanPlayer.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.HumanPlayer.Render
  MinecaRTS.HumanPlayer:
    name:
      CSharp:
      - id: MinecaRTS.HumanPlayer
        name: HumanPlayer
        nameWithType: HumanPlayer
        qualifiedName: MinecaRTS.HumanPlayer
      VB:
      - id: MinecaRTS.HumanPlayer
        name: HumanPlayer
        nameWithType: HumanPlayer
        qualifiedName: MinecaRTS.HumanPlayer
    isDefinition: true
    commentId: T:MinecaRTS.HumanPlayer
  MinecaRTS.Input.MouseX*:
    name:
      CSharp:
      - id: MinecaRTS.Input.MouseX*
        name: MouseX
        nameWithType: Input.MouseX
        qualifiedName: MinecaRTS.Input.MouseX
      VB:
      - id: MinecaRTS.Input.MouseX*
        name: MouseX
        nameWithType: Input.MouseX
        qualifiedName: MinecaRTS.Input.MouseX
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.MouseX
  MinecaRTS.Input.MouseY*:
    name:
      CSharp:
      - id: MinecaRTS.Input.MouseY*
        name: MouseY
        nameWithType: Input.MouseY
        qualifiedName: MinecaRTS.Input.MouseY
      VB:
      - id: MinecaRTS.Input.MouseY*
        name: MouseY
        nameWithType: Input.MouseY
        qualifiedName: MinecaRTS.Input.MouseY
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.MouseY
  MinecaRTS.Input.MousePos*:
    name:
      CSharp:
      - id: MinecaRTS.Input.MousePos*
        name: MousePos
        nameWithType: Input.MousePos
        qualifiedName: MinecaRTS.Input.MousePos
      VB:
      - id: MinecaRTS.Input.MousePos*
        name: MousePos
        nameWithType: Input.MousePos
        qualifiedName: MinecaRTS.Input.MousePos
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.MousePos
  MinecaRTS.Input.UpdateStates*:
    name:
      CSharp:
      - id: MinecaRTS.Input.UpdateStates*
        name: UpdateStates
        nameWithType: Input.UpdateStates
        qualifiedName: MinecaRTS.Input.UpdateStates
      VB:
      - id: MinecaRTS.Input.UpdateStates*
        name: UpdateStates
        nameWithType: Input.UpdateStates
        qualifiedName: MinecaRTS.Input.UpdateStates
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.UpdateStates
  Microsoft.Xna.Framework.Input:
    name:
      CSharp:
      - name: Microsoft.Xna.Framework.Input
        nameWithType: Microsoft.Xna.Framework.Input
        qualifiedName: Microsoft.Xna.Framework.Input
      VB:
      - name: Microsoft.Xna.Framework.Input
        nameWithType: Microsoft.Xna.Framework.Input
        qualifiedName: Microsoft.Xna.Framework.Input
    isDefinition: true
    commentId: N:Microsoft.Xna.Framework.Input
  Microsoft.Xna.Framework.Input.Keys:
    name:
      CSharp:
      - id: Microsoft.Xna.Framework.Input.Keys
        name: Keys
        nameWithType: Keys
        qualifiedName: Microsoft.Xna.Framework.Input.Keys
        isExternal: true
      VB:
      - id: Microsoft.Xna.Framework.Input.Keys
        name: Keys
        nameWithType: Keys
        qualifiedName: Microsoft.Xna.Framework.Input.Keys
        isExternal: true
    isDefinition: true
    parent: Microsoft.Xna.Framework.Input
    commentId: T:Microsoft.Xna.Framework.Input.Keys
  MinecaRTS.Input.KeyDown*:
    name:
      CSharp:
      - id: MinecaRTS.Input.KeyDown*
        name: KeyDown
        nameWithType: Input.KeyDown
        qualifiedName: MinecaRTS.Input.KeyDown
      VB:
      - id: MinecaRTS.Input.KeyDown*
        name: KeyDown
        nameWithType: Input.KeyDown
        qualifiedName: MinecaRTS.Input.KeyDown
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.KeyDown
  MinecaRTS.Input.KeyTyped*:
    name:
      CSharp:
      - id: MinecaRTS.Input.KeyTyped*
        name: KeyTyped
        nameWithType: Input.KeyTyped
        qualifiedName: MinecaRTS.Input.KeyTyped
      VB:
      - id: MinecaRTS.Input.KeyTyped*
        name: KeyTyped
        nameWithType: Input.KeyTyped
        qualifiedName: MinecaRTS.Input.KeyTyped
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.KeyTyped
  MinecaRTS.Input.KeyReleased*:
    name:
      CSharp:
      - id: MinecaRTS.Input.KeyReleased*
        name: KeyReleased
        nameWithType: Input.KeyReleased
        qualifiedName: MinecaRTS.Input.KeyReleased
      VB:
      - id: MinecaRTS.Input.KeyReleased*
        name: KeyReleased
        nameWithType: Input.KeyReleased
        qualifiedName: MinecaRTS.Input.KeyReleased
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.KeyReleased
  MinecaRTS.Input.LeftMouseDown*:
    name:
      CSharp:
      - id: MinecaRTS.Input.LeftMouseDown*
        name: LeftMouseDown
        nameWithType: Input.LeftMouseDown
        qualifiedName: MinecaRTS.Input.LeftMouseDown
      VB:
      - id: MinecaRTS.Input.LeftMouseDown*
        name: LeftMouseDown
        nameWithType: Input.LeftMouseDown
        qualifiedName: MinecaRTS.Input.LeftMouseDown
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.LeftMouseDown
  MinecaRTS.Input.LeftMousePressed*:
    name:
      CSharp:
      - id: MinecaRTS.Input.LeftMousePressed*
        name: LeftMousePressed
        nameWithType: Input.LeftMousePressed
        qualifiedName: MinecaRTS.Input.LeftMousePressed
      VB:
      - id: MinecaRTS.Input.LeftMousePressed*
        name: LeftMousePressed
        nameWithType: Input.LeftMousePressed
        qualifiedName: MinecaRTS.Input.LeftMousePressed
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.LeftMousePressed
  MinecaRTS.Input.LeftMouseClicked*:
    name:
      CSharp:
      - id: MinecaRTS.Input.LeftMouseClicked*
        name: LeftMouseClicked
        nameWithType: Input.LeftMouseClicked
        qualifiedName: MinecaRTS.Input.LeftMouseClicked
      VB:
      - id: MinecaRTS.Input.LeftMouseClicked*
        name: LeftMouseClicked
        nameWithType: Input.LeftMouseClicked
        qualifiedName: MinecaRTS.Input.LeftMouseClicked
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.LeftMouseClicked
  MinecaRTS.Input.RightMouseDown*:
    name:
      CSharp:
      - id: MinecaRTS.Input.RightMouseDown*
        name: RightMouseDown
        nameWithType: Input.RightMouseDown
        qualifiedName: MinecaRTS.Input.RightMouseDown
      VB:
      - id: MinecaRTS.Input.RightMouseDown*
        name: RightMouseDown
        nameWithType: Input.RightMouseDown
        qualifiedName: MinecaRTS.Input.RightMouseDown
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.RightMouseDown
  MinecaRTS.Input.RightMousePressed*:
    name:
      CSharp:
      - id: MinecaRTS.Input.RightMousePressed*
        name: RightMousePressed
        nameWithType: Input.RightMousePressed
        qualifiedName: MinecaRTS.Input.RightMousePressed
      VB:
      - id: MinecaRTS.Input.RightMousePressed*
        name: RightMousePressed
        nameWithType: Input.RightMousePressed
        qualifiedName: MinecaRTS.Input.RightMousePressed
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.RightMousePressed
  MinecaRTS.Input.RightMouseClicked*:
    name:
      CSharp:
      - id: MinecaRTS.Input.RightMouseClicked*
        name: RightMouseClicked
        nameWithType: Input.RightMouseClicked
        qualifiedName: MinecaRTS.Input.RightMouseClicked
      VB:
      - id: MinecaRTS.Input.RightMouseClicked*
        name: RightMouseClicked
        nameWithType: Input.RightMouseClicked
        qualifiedName: MinecaRTS.Input.RightMouseClicked
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.RightMouseClicked
  MinecaRTS.Input.SetMaxMouseX*:
    name:
      CSharp:
      - id: MinecaRTS.Input.SetMaxMouseX*
        name: SetMaxMouseX
        nameWithType: Input.SetMaxMouseX
        qualifiedName: MinecaRTS.Input.SetMaxMouseX
      VB:
      - id: MinecaRTS.Input.SetMaxMouseX*
        name: SetMaxMouseX
        nameWithType: Input.SetMaxMouseX
        qualifiedName: MinecaRTS.Input.SetMaxMouseX
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.SetMaxMouseX
  MinecaRTS.Input.SetMaxMouseY*:
    name:
      CSharp:
      - id: MinecaRTS.Input.SetMaxMouseY*
        name: SetMaxMouseY
        nameWithType: Input.SetMaxMouseY
        qualifiedName: MinecaRTS.Input.SetMaxMouseY
      VB:
      - id: MinecaRTS.Input.SetMaxMouseY*
        name: SetMaxMouseY
        nameWithType: Input.SetMaxMouseY
        qualifiedName: MinecaRTS.Input.SetMaxMouseY
    isDefinition: true
    commentId: Overload:MinecaRTS.Input.SetMaxMouseY
  MinecaRTS.Input:
    name:
      CSharp:
      - id: MinecaRTS.Input
        name: Input
        nameWithType: Input
        qualifiedName: MinecaRTS.Input
      VB:
      - id: MinecaRTS.Input
        name: Input
        nameWithType: Input
        qualifiedName: MinecaRTS.Input
    isDefinition: true
    commentId: T:MinecaRTS.Input
  MinecaRTS.MessageType:
    name:
      CSharp:
      - id: MinecaRTS.MessageType
        name: MessageType
        nameWithType: MessageType
        qualifiedName: MinecaRTS.MessageType
      VB:
      - id: MinecaRTS.MessageType
        name: MessageType
        nameWithType: MessageType
        qualifiedName: MinecaRTS.MessageType
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.MessageType
  MinecaRTS.Message.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Message.#ctor*
        name: Message
        nameWithType: Message.Message
        qualifiedName: MinecaRTS.Message.Message
      VB:
      - id: MinecaRTS.Message.#ctor*
        name: Message
        nameWithType: Message.Message
        qualifiedName: MinecaRTS.Message.Message
    isDefinition: true
    commentId: Overload:MinecaRTS.Message.#ctor
  MinecaRTS.MsgBoard.SENDER_IRRELEVANT*:
    name:
      CSharp:
      - id: MinecaRTS.MsgBoard.SENDER_IRRELEVANT*
        name: SENDER_IRRELEVANT
        nameWithType: MsgBoard.SENDER_IRRELEVANT
        qualifiedName: MinecaRTS.MsgBoard.SENDER_IRRELEVANT
      VB:
      - id: MinecaRTS.MsgBoard.SENDER_IRRELEVANT*
        name: SENDER_IRRELEVANT
        nameWithType: MsgBoard.SENDER_IRRELEVANT
        qualifiedName: MinecaRTS.MsgBoard.SENDER_IRRELEVANT
    isDefinition: true
    commentId: Overload:MinecaRTS.MsgBoard.SENDER_IRRELEVANT
  MinecaRTS.MsgBoard.AddMessage*:
    name:
      CSharp:
      - id: MinecaRTS.MsgBoard.AddMessage*
        name: AddMessage
        nameWithType: MsgBoard.AddMessage
        qualifiedName: MinecaRTS.MsgBoard.AddMessage
      VB:
      - id: MinecaRTS.MsgBoard.AddMessage*
        name: AddMessage
        nameWithType: MsgBoard.AddMessage
        qualifiedName: MinecaRTS.MsgBoard.AddMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.MsgBoard.AddMessage
  MinecaRTS.MsgBoard.SendMessages*:
    name:
      CSharp:
      - id: MinecaRTS.MsgBoard.SendMessages*
        name: SendMessages
        nameWithType: MsgBoard.SendMessages
        qualifiedName: MinecaRTS.MsgBoard.SendMessages
      VB:
      - id: MinecaRTS.MsgBoard.SendMessages*
        name: SendMessages
        nameWithType: MsgBoard.SendMessages
        qualifiedName: MinecaRTS.MsgBoard.SendMessages
    isDefinition: true
    commentId: Overload:MinecaRTS.MsgBoard.SendMessages
  MinecaRTS.MsgBoard:
    name:
      CSharp:
      - id: MinecaRTS.MsgBoard
        name: MsgBoard
        nameWithType: MsgBoard
        qualifiedName: MinecaRTS.MsgBoard
      VB:
      - id: MinecaRTS.MsgBoard
        name: MsgBoard
        nameWithType: MsgBoard
        qualifiedName: MinecaRTS.MsgBoard
    isDefinition: true
    commentId: T:MinecaRTS.MsgBoard
  MinecaRTS.Pathfinder.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.#ctor*
        name: Pathfinder
        nameWithType: Pathfinder.Pathfinder
        qualifiedName: MinecaRTS.Pathfinder.Pathfinder
      VB:
      - id: MinecaRTS.Pathfinder.#ctor*
        name: Pathfinder
        nameWithType: Pathfinder.Pathfinder
        qualifiedName: MinecaRTS.Pathfinder.Pathfinder
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.#ctor
  MinecaRTS.Pathfinder.SingleIterationDijkstra*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.SingleIterationDijkstra*
        name: SingleIterationDijkstra
        nameWithType: Pathfinder.SingleIterationDijkstra
        qualifiedName: MinecaRTS.Pathfinder.SingleIterationDijkstra
      VB:
      - id: MinecaRTS.Pathfinder.SingleIterationDijkstra*
        name: SingleIterationDijkstra
        nameWithType: Pathfinder.SingleIterationDijkstra
        qualifiedName: MinecaRTS.Pathfinder.SingleIterationDijkstra
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.SingleIterationDijkstra
  MinecaRTS.Pathfinder.SingleIteration*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.SingleIteration*
        name: SingleIteration
        nameWithType: Pathfinder.SingleIteration
        qualifiedName: MinecaRTS.Pathfinder.SingleIteration
      VB:
      - id: MinecaRTS.Pathfinder.SingleIteration*
        name: SingleIteration
        nameWithType: Pathfinder.SingleIteration
        qualifiedName: MinecaRTS.Pathfinder.SingleIteration
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.SingleIteration
  System.Func`2:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Func`2
  System.Func{MinecaRTS.Cell,System.Boolean}:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`2
    parent: System
    commentId: T:System.Func{MinecaRTS.Cell,System.Boolean}
  MinecaRTS.Pathfinder.SearchDijkstra*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.SearchDijkstra*
        name: SearchDijkstra
        nameWithType: Pathfinder.SearchDijkstra
        qualifiedName: MinecaRTS.Pathfinder.SearchDijkstra
      VB:
      - id: MinecaRTS.Pathfinder.SearchDijkstra*
        name: SearchDijkstra
        nameWithType: Pathfinder.SearchDijkstra
        qualifiedName: MinecaRTS.Pathfinder.SearchDijkstra
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.SearchDijkstra
  MinecaRTS.Pathfinder.SingleIterationGreedy*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.SingleIterationGreedy*
        name: SingleIterationGreedy
        nameWithType: Pathfinder.SingleIterationGreedy
        qualifiedName: MinecaRTS.Pathfinder.SingleIterationGreedy
      VB:
      - id: MinecaRTS.Pathfinder.SingleIterationGreedy*
        name: SingleIterationGreedy
        nameWithType: Pathfinder.SingleIterationGreedy
        qualifiedName: MinecaRTS.Pathfinder.SingleIterationGreedy
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.SingleIterationGreedy
  System.Func`3:
    name:
      CSharp:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T2
        nameWithType: T2
        qualifiedName: T2
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Func`3
  System.Func{MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},System.Boolean}:
    name:
      CSharp:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`3
    parent: System
    commentId: T:System.Func{MinecaRTS.Cell,System.Collections.Generic.List{MinecaRTS.Cell},System.Boolean}
  System.Func{MinecaRTS.Cell,MinecaRTS.Cell,System.Single}:
    name:
      CSharp:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`3
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`3
    parent: System
    commentId: T:System.Func{MinecaRTS.Cell,MinecaRTS.Cell,System.Single}
  MinecaRTS.Pathfinder.SearchGreedy*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.SearchGreedy*
        name: SearchGreedy
        nameWithType: Pathfinder.SearchGreedy
        qualifiedName: MinecaRTS.Pathfinder.SearchGreedy
      VB:
      - id: MinecaRTS.Pathfinder.SearchGreedy*
        name: SearchGreedy
        nameWithType: Pathfinder.SearchGreedy
        qualifiedName: MinecaRTS.Pathfinder.SearchGreedy
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.SearchGreedy
  MinecaRTS.Pathfinder.SingleIterationSmoothPath*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.SingleIterationSmoothPath*
        name: SingleIterationSmoothPath
        nameWithType: Pathfinder.SingleIterationSmoothPath
        qualifiedName: MinecaRTS.Pathfinder.SingleIterationSmoothPath
      VB:
      - id: MinecaRTS.Pathfinder.SingleIterationSmoothPath*
        name: SingleIterationSmoothPath
        nameWithType: Pathfinder.SingleIterationSmoothPath
        qualifiedName: MinecaRTS.Pathfinder.SingleIterationSmoothPath
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.SingleIterationSmoothPath
  MinecaRTS.Pathfinder.SmoothPath*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.SmoothPath*
        name: SmoothPath
        nameWithType: Pathfinder.SmoothPath
        qualifiedName: MinecaRTS.Pathfinder.SmoothPath
      VB:
      - id: MinecaRTS.Pathfinder.SmoothPath*
        name: SmoothPath
        nameWithType: Pathfinder.SmoothPath
        qualifiedName: MinecaRTS.Pathfinder.SmoothPath
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.SmoothPath
  MinecaRTS.Pathfinder.PathIsClear*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.PathIsClear*
        name: PathIsClear
        nameWithType: Pathfinder.PathIsClear
        qualifiedName: MinecaRTS.Pathfinder.PathIsClear
      VB:
      - id: MinecaRTS.Pathfinder.PathIsClear*
        name: PathIsClear
        nameWithType: Pathfinder.PathIsClear
        qualifiedName: MinecaRTS.Pathfinder.PathIsClear
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.PathIsClear
  MinecaRTS.Pathfinder.SingleIterationRetracePath*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.SingleIterationRetracePath*
        name: SingleIterationRetracePath
        nameWithType: Pathfinder.SingleIterationRetracePath
        qualifiedName: MinecaRTS.Pathfinder.SingleIterationRetracePath
      VB:
      - id: MinecaRTS.Pathfinder.SingleIterationRetracePath*
        name: SingleIterationRetracePath
        nameWithType: Pathfinder.SingleIterationRetracePath
        qualifiedName: MinecaRTS.Pathfinder.SingleIterationRetracePath
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.SingleIterationRetracePath
  MinecaRTS.Pathfinder.SetupRetracePath*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.SetupRetracePath*
        name: SetupRetracePath
        nameWithType: Pathfinder.SetupRetracePath
        qualifiedName: MinecaRTS.Pathfinder.SetupRetracePath
      VB:
      - id: MinecaRTS.Pathfinder.SetupRetracePath*
        name: SetupRetracePath
        nameWithType: Pathfinder.SetupRetracePath
        qualifiedName: MinecaRTS.Pathfinder.SetupRetracePath
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.SetupRetracePath
  MinecaRTS.Pathfinder.RetracePath*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.RetracePath*
        name: RetracePath
        nameWithType: Pathfinder.RetracePath
        qualifiedName: MinecaRTS.Pathfinder.RetracePath
      VB:
      - id: MinecaRTS.Pathfinder.RetracePath*
        name: RetracePath
        nameWithType: Pathfinder.RetracePath
        qualifiedName: MinecaRTS.Pathfinder.RetracePath
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.RetracePath
  MinecaRTS.Pathfinder.SetupDijkstra*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.SetupDijkstra*
        name: SetupDijkstra
        nameWithType: Pathfinder.SetupDijkstra
        qualifiedName: MinecaRTS.Pathfinder.SetupDijkstra
      VB:
      - id: MinecaRTS.Pathfinder.SetupDijkstra*
        name: SetupDijkstra
        nameWithType: Pathfinder.SetupDijkstra
        qualifiedName: MinecaRTS.Pathfinder.SetupDijkstra
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.SetupDijkstra
  MinecaRTS.Pathfinder.SetupGreedy*:
    name:
      CSharp:
      - id: MinecaRTS.Pathfinder.SetupGreedy*
        name: SetupGreedy
        nameWithType: Pathfinder.SetupGreedy
        qualifiedName: MinecaRTS.Pathfinder.SetupGreedy
      VB:
      - id: MinecaRTS.Pathfinder.SetupGreedy*
        name: SetupGreedy
        nameWithType: Pathfinder.SetupGreedy
        qualifiedName: MinecaRTS.Pathfinder.SetupGreedy
    isDefinition: true
    commentId: Overload:MinecaRTS.Pathfinder.SetupGreedy
  MinecaRTS.PathHandler.Owner*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.Owner*
        name: Owner
        nameWithType: PathHandler.Owner
        qualifiedName: MinecaRTS.PathHandler.Owner
      VB:
      - id: MinecaRTS.PathHandler.Owner*
        name: Owner
        nameWithType: PathHandler.Owner
        qualifiedName: MinecaRTS.PathHandler.Owner
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.Owner
  MinecaRTS.PathHandler.ID*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.ID*
        name: ID
        nameWithType: PathHandler.ID
        qualifiedName: MinecaRTS.PathHandler.ID
      VB:
      - id: MinecaRTS.PathHandler.ID*
        name: ID
        nameWithType: PathHandler.ID
        qualifiedName: MinecaRTS.PathHandler.ID
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.ID
  MinecaRTS.PathHandler.HasPath*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.HasPath*
        name: HasPath
        nameWithType: PathHandler.HasPath
        qualifiedName: MinecaRTS.PathHandler.HasPath
      VB:
      - id: MinecaRTS.PathHandler.HasPath*
        name: HasPath
        nameWithType: PathHandler.HasPath
        qualifiedName: MinecaRTS.PathHandler.HasPath
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.HasPath
  MinecaRTS.PathHandler.TargetCell*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.TargetCell*
        name: TargetCell
        nameWithType: PathHandler.TargetCell
        qualifiedName: MinecaRTS.PathHandler.TargetCell
      VB:
      - id: MinecaRTS.PathHandler.TargetCell*
        name: TargetCell
        nameWithType: PathHandler.TargetCell
        qualifiedName: MinecaRTS.PathHandler.TargetCell
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.TargetCell
  MinecaRTS.PathHandler.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.#ctor*
        name: PathHandler
        nameWithType: PathHandler.PathHandler
        qualifiedName: MinecaRTS.PathHandler.PathHandler
      VB:
      - id: MinecaRTS.PathHandler.#ctor*
        name: PathHandler
        nameWithType: PathHandler.PathHandler
        qualifiedName: MinecaRTS.PathHandler.PathHandler
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.#ctor
  MinecaRTS.PathHandler.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.HandleMessage*
        name: HandleMessage
        nameWithType: PathHandler.HandleMessage
        qualifiedName: MinecaRTS.PathHandler.HandleMessage
      VB:
      - id: MinecaRTS.PathHandler.HandleMessage*
        name: HandleMessage
        nameWithType: PathHandler.HandleMessage
        qualifiedName: MinecaRTS.PathHandler.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.HandleMessage
  MinecaRTS.PathHandler.Update*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.Update*
        name: Update
        nameWithType: PathHandler.Update
        qualifiedName: MinecaRTS.PathHandler.Update
      VB:
      - id: MinecaRTS.PathHandler.Update*
        name: Update
        nameWithType: PathHandler.Update
        qualifiedName: MinecaRTS.PathHandler.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.Update
  MinecaRTS.PathHandler.GetEstimatedTicksToReachCell*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell*
        name: GetEstimatedTicksToReachCell
        nameWithType: PathHandler.GetEstimatedTicksToReachCell
        qualifiedName: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell
      VB:
      - id: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell*
        name: GetEstimatedTicksToReachCell
        nameWithType: PathHandler.GetEstimatedTicksToReachCell
        qualifiedName: MinecaRTS.PathHandler.GetEstimatedTicksToReachCell
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.GetEstimatedTicksToReachCell
  MinecaRTS.PathHandler.FinalisePath*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.FinalisePath*
        name: FinalisePath
        nameWithType: PathHandler.FinalisePath
        qualifiedName: MinecaRTS.PathHandler.FinalisePath
      VB:
      - id: MinecaRTS.PathHandler.FinalisePath*
        name: FinalisePath
        nameWithType: PathHandler.FinalisePath
        qualifiedName: MinecaRTS.PathHandler.FinalisePath
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.FinalisePath
  MinecaRTS.PathHandler.GetPathTo*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.GetPathTo*
        name: GetPathTo
        nameWithType: PathHandler.GetPathTo
        qualifiedName: MinecaRTS.PathHandler.GetPathTo
      VB:
      - id: MinecaRTS.PathHandler.GetPathTo*
        name: GetPathTo
        nameWithType: PathHandler.GetPathTo
        qualifiedName: MinecaRTS.PathHandler.GetPathTo
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.GetPathTo
  MinecaRTS.PathHandler.RenderPath*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.RenderPath*
        name: RenderPath
        nameWithType: PathHandler.RenderPath
        qualifiedName: MinecaRTS.PathHandler.RenderPath
      VB:
      - id: MinecaRTS.PathHandler.RenderPath*
        name: RenderPath
        nameWithType: PathHandler.RenderPath
        qualifiedName: MinecaRTS.PathHandler.RenderPath
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.RenderPath
  MinecaRTS.PathHandler.TrackScoreMethod*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.TrackScoreMethod*
        name: TrackScoreMethod
        nameWithType: PathHandler.TrackScoreMethod
        qualifiedName: MinecaRTS.PathHandler.TrackScoreMethod
      VB:
      - id: MinecaRTS.PathHandler.TrackScoreMethod*
        name: TrackScoreMethod
        nameWithType: PathHandler.TrackScoreMethod
        qualifiedName: MinecaRTS.PathHandler.TrackScoreMethod
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.TrackScoreMethod
  MinecaRTS.PathHandler.ConsiderationConditionWood*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.ConsiderationConditionWood*
        name: ConsiderationConditionWood
        nameWithType: PathHandler.ConsiderationConditionWood
        qualifiedName: MinecaRTS.PathHandler.ConsiderationConditionWood
      VB:
      - id: MinecaRTS.PathHandler.ConsiderationConditionWood*
        name: ConsiderationConditionWood
        nameWithType: PathHandler.ConsiderationConditionWood
        qualifiedName: MinecaRTS.PathHandler.ConsiderationConditionWood
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.ConsiderationConditionWood
  MinecaRTS.PathHandler.ConsiderationConditionStone*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.ConsiderationConditionStone*
        name: ConsiderationConditionStone
        nameWithType: PathHandler.ConsiderationConditionStone
        qualifiedName: MinecaRTS.PathHandler.ConsiderationConditionStone
      VB:
      - id: MinecaRTS.PathHandler.ConsiderationConditionStone*
        name: ConsiderationConditionStone
        nameWithType: PathHandler.ConsiderationConditionStone
        qualifiedName: MinecaRTS.PathHandler.ConsiderationConditionStone
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.ConsiderationConditionStone
  MinecaRTS.PathHandler.TerminationConditionWood*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.TerminationConditionWood*
        name: TerminationConditionWood
        nameWithType: PathHandler.TerminationConditionWood
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionWood
      VB:
      - id: MinecaRTS.PathHandler.TerminationConditionWood*
        name: TerminationConditionWood
        nameWithType: PathHandler.TerminationConditionWood
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionWood
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.TerminationConditionWood
  MinecaRTS.PathHandler.TerminationConditionStone*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.TerminationConditionStone*
        name: TerminationConditionStone
        nameWithType: PathHandler.TerminationConditionStone
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionStone
      VB:
      - id: MinecaRTS.PathHandler.TerminationConditionStone*
        name: TerminationConditionStone
        nameWithType: PathHandler.TerminationConditionStone
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionStone
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.TerminationConditionStone
  MinecaRTS.PathHandler.TerminationConditionFindTrack*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.TerminationConditionFindTrack*
        name: TerminationConditionFindTrack
        nameWithType: PathHandler.TerminationConditionFindTrack
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionFindTrack
      VB:
      - id: MinecaRTS.PathHandler.TerminationConditionFindTrack*
        name: TerminationConditionFindTrack
        nameWithType: PathHandler.TerminationConditionFindTrack
        qualifiedName: MinecaRTS.PathHandler.TerminationConditionFindTrack
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.TerminationConditionFindTrack
  MinecaRTS.PathHandler.GreedyConsiderationCondition*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.GreedyConsiderationCondition*
        name: GreedyConsiderationCondition
        nameWithType: PathHandler.GreedyConsiderationCondition
        qualifiedName: MinecaRTS.PathHandler.GreedyConsiderationCondition
      VB:
      - id: MinecaRTS.PathHandler.GreedyConsiderationCondition*
        name: GreedyConsiderationCondition
        nameWithType: PathHandler.GreedyConsiderationCondition
        qualifiedName: MinecaRTS.PathHandler.GreedyConsiderationCondition
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.GreedyConsiderationCondition
  MinecaRTS.PathHandler.GreedyTerminationCondition*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.GreedyTerminationCondition*
        name: GreedyTerminationCondition
        nameWithType: PathHandler.GreedyTerminationCondition
        qualifiedName: MinecaRTS.PathHandler.GreedyTerminationCondition
      VB:
      - id: MinecaRTS.PathHandler.GreedyTerminationCondition*
        name: GreedyTerminationCondition
        nameWithType: PathHandler.GreedyTerminationCondition
        qualifiedName: MinecaRTS.PathHandler.GreedyTerminationCondition
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.GreedyTerminationCondition
  MinecaRTS.PathHandler.GreedyScoreMethod*:
    name:
      CSharp:
      - id: MinecaRTS.PathHandler.GreedyScoreMethod*
        name: GreedyScoreMethod
        nameWithType: PathHandler.GreedyScoreMethod
        qualifiedName: MinecaRTS.PathHandler.GreedyScoreMethod
      VB:
      - id: MinecaRTS.PathHandler.GreedyScoreMethod*
        name: GreedyScoreMethod
        nameWithType: PathHandler.GreedyScoreMethod
        qualifiedName: MinecaRTS.PathHandler.GreedyScoreMethod
    isDefinition: true
    commentId: Overload:MinecaRTS.PathHandler.GreedyScoreMethod
  MinecaRTS.PlayerData.Team*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.Team*
        name: Team
        nameWithType: PlayerData.Team
        qualifiedName: MinecaRTS.PlayerData.Team
      VB:
      - id: MinecaRTS.PlayerData.Team*
        name: Team
        nameWithType: PlayerData.Team
        qualifiedName: MinecaRTS.PlayerData.Team
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.Team
  MinecaRTS.PlayerData.Wood*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.Wood*
        name: Wood
        nameWithType: PlayerData.Wood
        qualifiedName: MinecaRTS.PlayerData.Wood
      VB:
      - id: MinecaRTS.PlayerData.Wood*
        name: Wood
        nameWithType: PlayerData.Wood
        qualifiedName: MinecaRTS.PlayerData.Wood
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.Wood
  MinecaRTS.PlayerData.Stone*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.Stone*
        name: Stone
        nameWithType: PlayerData.Stone
        qualifiedName: MinecaRTS.PlayerData.Stone
      VB:
      - id: MinecaRTS.PlayerData.Stone*
        name: Stone
        nameWithType: PlayerData.Stone
        qualifiedName: MinecaRTS.PlayerData.Stone
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.Stone
  MinecaRTS.PlayerData.MaxSupply*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.MaxSupply*
        name: MaxSupply
        nameWithType: PlayerData.MaxSupply
        qualifiedName: MinecaRTS.PlayerData.MaxSupply
      VB:
      - id: MinecaRTS.PlayerData.MaxSupply*
        name: MaxSupply
        nameWithType: PlayerData.MaxSupply
        qualifiedName: MinecaRTS.PlayerData.MaxSupply
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.MaxSupply
  MinecaRTS.PlayerData.SpareSupply*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.SpareSupply*
        name: SpareSupply
        nameWithType: PlayerData.SpareSupply
        qualifiedName: MinecaRTS.PlayerData.SpareSupply
      VB:
      - id: MinecaRTS.PlayerData.SpareSupply*
        name: SpareSupply
        nameWithType: PlayerData.SpareSupply
        qualifiedName: MinecaRTS.PlayerData.SpareSupply
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.SpareSupply
  MinecaRTS.Worker:
    name:
      CSharp:
      - id: MinecaRTS.Worker
        name: Worker
        nameWithType: Worker
        qualifiedName: MinecaRTS.Worker
      VB:
      - id: MinecaRTS.Worker
        name: Worker
        nameWithType: Worker
        qualifiedName: MinecaRTS.Worker
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Worker
  MinecaRTS.PlayerData.SelectedWorker*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.SelectedWorker*
        name: SelectedWorker
        nameWithType: PlayerData.SelectedWorker
        qualifiedName: MinecaRTS.PlayerData.SelectedWorker
      VB:
      - id: MinecaRTS.PlayerData.SelectedWorker*
        name: SelectedWorker
        nameWithType: PlayerData.SelectedWorker
        qualifiedName: MinecaRTS.PlayerData.SelectedWorker
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.SelectedWorker
  MinecaRTS.PlayerData.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.#ctor*
        name: PlayerData
        nameWithType: PlayerData.PlayerData
        qualifiedName: MinecaRTS.PlayerData.PlayerData
      VB:
      - id: MinecaRTS.PlayerData.#ctor*
        name: PlayerData
        nameWithType: PlayerData.PlayerData
        qualifiedName: MinecaRTS.PlayerData.PlayerData
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.#ctor
  MinecaRTS.PlayerData.Grid*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.Grid*
        name: Grid
        nameWithType: PlayerData.Grid
        qualifiedName: MinecaRTS.PlayerData.Grid
      VB:
      - id: MinecaRTS.PlayerData.Grid*
        name: Grid
        nameWithType: PlayerData.Grid
        qualifiedName: MinecaRTS.PlayerData.Grid
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.Grid
  MinecaRTS.PlayerData.RemoveUnitFromCollisionCells*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.RemoveUnitFromCollisionCells*
        name: RemoveUnitFromCollisionCells
        nameWithType: PlayerData.RemoveUnitFromCollisionCells
        qualifiedName: MinecaRTS.PlayerData.RemoveUnitFromCollisionCells
      VB:
      - id: MinecaRTS.PlayerData.RemoveUnitFromCollisionCells*
        name: RemoveUnitFromCollisionCells
        nameWithType: PlayerData.RemoveUnitFromCollisionCells
        qualifiedName: MinecaRTS.PlayerData.RemoveUnitFromCollisionCells
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.RemoveUnitFromCollisionCells
  MinecaRTS.PlayerData.AddUnitToCollisionCells*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.AddUnitToCollisionCells*
        name: AddUnitToCollisionCells
        nameWithType: PlayerData.AddUnitToCollisionCells
        qualifiedName: MinecaRTS.PlayerData.AddUnitToCollisionCells
      VB:
      - id: MinecaRTS.PlayerData.AddUnitToCollisionCells*
        name: AddUnitToCollisionCells
        nameWithType: PlayerData.AddUnitToCollisionCells
        qualifiedName: MinecaRTS.PlayerData.AddUnitToCollisionCells
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.AddUnitToCollisionCells
  MinecaRTS.PlayerData.UpdateFogOfWarForUnit*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.UpdateFogOfWarForUnit*
        name: UpdateFogOfWarForUnit
        nameWithType: PlayerData.UpdateFogOfWarForUnit
        qualifiedName: MinecaRTS.PlayerData.UpdateFogOfWarForUnit
      VB:
      - id: MinecaRTS.PlayerData.UpdateFogOfWarForUnit*
        name: UpdateFogOfWarForUnit
        nameWithType: PlayerData.UpdateFogOfWarForUnit
        qualifiedName: MinecaRTS.PlayerData.UpdateFogOfWarForUnit
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.UpdateFogOfWarForUnit
  MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundPos*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundPos*
        name: GetUnitsInCollisionCellsAroundPos
        nameWithType: PlayerData.GetUnitsInCollisionCellsAroundPos
        qualifiedName: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundPos
      VB:
      - id: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundPos*
        name: GetUnitsInCollisionCellsAroundPos
        nameWithType: PlayerData.GetUnitsInCollisionCellsAroundPos
        qualifiedName: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundPos
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundPos
  MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundUnit*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundUnit*
        name: GetUnitsInCollisionCellsAroundUnit
        nameWithType: PlayerData.GetUnitsInCollisionCellsAroundUnit
        qualifiedName: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundUnit
      VB:
      - id: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundUnit*
        name: GetUnitsInCollisionCellsAroundUnit
        nameWithType: PlayerData.GetUnitsInCollisionCellsAroundUnit
        qualifiedName: MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundUnit
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.GetUnitsInCollisionCellsAroundUnit
  MinecaRTS.PlayerData.GetUnitsInSameCollisionCellsAsUnit*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.GetUnitsInSameCollisionCellsAsUnit*
        name: GetUnitsInSameCollisionCellsAsUnit
        nameWithType: PlayerData.GetUnitsInSameCollisionCellsAsUnit
        qualifiedName: MinecaRTS.PlayerData.GetUnitsInSameCollisionCellsAsUnit
      VB:
      - id: MinecaRTS.PlayerData.GetUnitsInSameCollisionCellsAsUnit*
        name: GetUnitsInSameCollisionCellsAsUnit
        nameWithType: PlayerData.GetUnitsInSameCollisionCellsAsUnit
        qualifiedName: MinecaRTS.PlayerData.GetUnitsInSameCollisionCellsAsUnit
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.GetUnitsInSameCollisionCellsAsUnit
  MinecaRTS.Resource:
    name:
      CSharp:
      - id: MinecaRTS.Resource
        name: Resource
        nameWithType: Resource
        qualifiedName: MinecaRTS.Resource
      VB:
      - id: MinecaRTS.Resource
        name: Resource
        nameWithType: Resource
        qualifiedName: MinecaRTS.Resource
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.Resource
  MinecaRTS.PlayerData.GetResourceFromCell*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.GetResourceFromCell*
        name: GetResourceFromCell
        nameWithType: PlayerData.GetResourceFromCell
        qualifiedName: MinecaRTS.PlayerData.GetResourceFromCell
      VB:
      - id: MinecaRTS.PlayerData.GetResourceFromCell*
        name: GetResourceFromCell
        nameWithType: PlayerData.GetResourceFromCell
        qualifiedName: MinecaRTS.PlayerData.GetResourceFromCell
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.GetResourceFromCell
  MinecaRTS.PlayerData.GetTrackFromCell*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.GetTrackFromCell*
        name: GetTrackFromCell
        nameWithType: PlayerData.GetTrackFromCell
        qualifiedName: MinecaRTS.PlayerData.GetTrackFromCell
      VB:
      - id: MinecaRTS.PlayerData.GetTrackFromCell*
        name: GetTrackFromCell
        nameWithType: PlayerData.GetTrackFromCell
        qualifiedName: MinecaRTS.PlayerData.GetTrackFromCell
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.GetTrackFromCell
  MinecaRTS.PlayerData.CellHasResource*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.CellHasResource*
        name: CellHasResource
        nameWithType: PlayerData.CellHasResource
        qualifiedName: MinecaRTS.PlayerData.CellHasResource
      VB:
      - id: MinecaRTS.PlayerData.CellHasResource*
        name: CellHasResource
        nameWithType: PlayerData.CellHasResource
        qualifiedName: MinecaRTS.PlayerData.CellHasResource
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.CellHasResource
  MinecaRTS.PlayerData.CellHasTrack*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.CellHasTrack*
        name: CellHasTrack
        nameWithType: PlayerData.CellHasTrack
        qualifiedName: MinecaRTS.PlayerData.CellHasTrack
      VB:
      - id: MinecaRTS.PlayerData.CellHasTrack*
        name: CellHasTrack
        nameWithType: PlayerData.CellHasTrack
        qualifiedName: MinecaRTS.PlayerData.CellHasTrack
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.CellHasTrack
  System.Type:
    name:
      CSharp:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      VB:
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Type
  MinecaRTS.PlayerData.AddUnit*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.AddUnit*
        name: AddUnit
        nameWithType: PlayerData.AddUnit
        qualifiedName: MinecaRTS.PlayerData.AddUnit
      VB:
      - id: MinecaRTS.PlayerData.AddUnit*
        name: AddUnit
        nameWithType: PlayerData.AddUnit
        qualifiedName: MinecaRTS.PlayerData.AddUnit
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.AddUnit
  MinecaRTS.ResourceType:
    name:
      CSharp:
      - id: MinecaRTS.ResourceType
        name: ResourceType
        nameWithType: ResourceType
        qualifiedName: MinecaRTS.ResourceType
      VB:
      - id: MinecaRTS.ResourceType
        name: ResourceType
        nameWithType: ResourceType
        qualifiedName: MinecaRTS.ResourceType
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.ResourceType
  MinecaRTS.PlayerData.GiveResources*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.GiveResources*
        name: GiveResources
        nameWithType: PlayerData.GiveResources
        qualifiedName: MinecaRTS.PlayerData.GiveResources
      VB:
      - id: MinecaRTS.PlayerData.GiveResources*
        name: GiveResources
        nameWithType: PlayerData.GiveResources
        qualifiedName: MinecaRTS.PlayerData.GiveResources
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.GiveResources
  MinecaRTS.PlayerData.SelectUnitsInRect*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.SelectUnitsInRect*
        name: SelectUnitsInRect
        nameWithType: PlayerData.SelectUnitsInRect
        qualifiedName: MinecaRTS.PlayerData.SelectUnitsInRect
      VB:
      - id: MinecaRTS.PlayerData.SelectUnitsInRect*
        name: SelectUnitsInRect
        nameWithType: PlayerData.SelectUnitsInRect
        qualifiedName: MinecaRTS.PlayerData.SelectUnitsInRect
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.SelectUnitsInRect
  MinecaRTS.PlayerData.MoveSelectedUnitsTo*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.MoveSelectedUnitsTo*
        name: MoveSelectedUnitsTo
        nameWithType: PlayerData.MoveSelectedUnitsTo
        qualifiedName: MinecaRTS.PlayerData.MoveSelectedUnitsTo
      VB:
      - id: MinecaRTS.PlayerData.MoveSelectedUnitsTo*
        name: MoveSelectedUnitsTo
        nameWithType: PlayerData.MoveSelectedUnitsTo
        qualifiedName: MinecaRTS.PlayerData.MoveSelectedUnitsTo
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.MoveSelectedUnitsTo
  MinecaRTS.PlayerData.OrderSelectedWorkersToGatherClosestResource*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.OrderSelectedWorkersToGatherClosestResource*
        name: OrderSelectedWorkersToGatherClosestResource
        nameWithType: PlayerData.OrderSelectedWorkersToGatherClosestResource
        qualifiedName: MinecaRTS.PlayerData.OrderSelectedWorkersToGatherClosestResource
      VB:
      - id: MinecaRTS.PlayerData.OrderSelectedWorkersToGatherClosestResource*
        name: OrderSelectedWorkersToGatherClosestResource
        nameWithType: PlayerData.OrderSelectedWorkersToGatherClosestResource
        qualifiedName: MinecaRTS.PlayerData.OrderSelectedWorkersToGatherClosestResource
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.OrderSelectedWorkersToGatherClosestResource
  MinecaRTS.PlayerData.OrderSelectedWorkerToConstructBuilding*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.OrderSelectedWorkerToConstructBuilding*
        name: OrderSelectedWorkerToConstructBuilding
        nameWithType: PlayerData.OrderSelectedWorkerToConstructBuilding
        qualifiedName: MinecaRTS.PlayerData.OrderSelectedWorkerToConstructBuilding
      VB:
      - id: MinecaRTS.PlayerData.OrderSelectedWorkerToConstructBuilding*
        name: OrderSelectedWorkerToConstructBuilding
        nameWithType: PlayerData.OrderSelectedWorkerToConstructBuilding
        qualifiedName: MinecaRTS.PlayerData.OrderSelectedWorkerToConstructBuilding
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.OrderSelectedWorkerToConstructBuilding
  MinecaRTS.PlayerData.OrderSelectedUnitsToStop*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.OrderSelectedUnitsToStop*
        name: OrderSelectedUnitsToStop
        nameWithType: PlayerData.OrderSelectedUnitsToStop
        qualifiedName: MinecaRTS.PlayerData.OrderSelectedUnitsToStop
      VB:
      - id: MinecaRTS.PlayerData.OrderSelectedUnitsToStop*
        name: OrderSelectedUnitsToStop
        nameWithType: PlayerData.OrderSelectedUnitsToStop
        qualifiedName: MinecaRTS.PlayerData.OrderSelectedUnitsToStop
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.OrderSelectedUnitsToStop
  MinecaRTS.PlayerData.GetClosestWorkerToPos*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.GetClosestWorkerToPos*
        name: GetClosestWorkerToPos
        nameWithType: PlayerData.GetClosestWorkerToPos
        qualifiedName: MinecaRTS.PlayerData.GetClosestWorkerToPos
      VB:
      - id: MinecaRTS.PlayerData.GetClosestWorkerToPos*
        name: GetClosestWorkerToPos
        nameWithType: PlayerData.GetClosestWorkerToPos
        qualifiedName: MinecaRTS.PlayerData.GetClosestWorkerToPos
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.GetClosestWorkerToPos
  System.Collections.Generic.List{MinecaRTS.Unit}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: MinecaRTS.Unit
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Unit
        name: Unit
        nameWithType: Unit
        qualifiedName: MinecaRTS.Unit
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{MinecaRTS.Unit}
  MinecaRTS.PlayerData.GetCollidingUnits*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.GetCollidingUnits*
        name: GetCollidingUnits
        nameWithType: PlayerData.GetCollidingUnits
        qualifiedName: MinecaRTS.PlayerData.GetCollidingUnits
      VB:
      - id: MinecaRTS.PlayerData.GetCollidingUnits*
        name: GetCollidingUnits
        nameWithType: PlayerData.GetCollidingUnits
        qualifiedName: MinecaRTS.PlayerData.GetCollidingUnits
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.GetCollidingUnits
  MinecaRTS.PlayerData.GetUnitsInRadius*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.GetUnitsInRadius*
        name: GetUnitsInRadius
        nameWithType: PlayerData.GetUnitsInRadius
        qualifiedName: MinecaRTS.PlayerData.GetUnitsInRadius
      VB:
      - id: MinecaRTS.PlayerData.GetUnitsInRadius*
        name: GetUnitsInRadius
        nameWithType: PlayerData.GetUnitsInRadius
        qualifiedName: MinecaRTS.PlayerData.GetUnitsInRadius
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.GetUnitsInRadius
  MinecaRTS.PlayerData.BuildingAtPos*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.BuildingAtPos*
        name: BuildingAtPos
        nameWithType: PlayerData.BuildingAtPos
        qualifiedName: MinecaRTS.PlayerData.BuildingAtPos
      VB:
      - id: MinecaRTS.PlayerData.BuildingAtPos*
        name: BuildingAtPos
        nameWithType: PlayerData.BuildingAtPos
        qualifiedName: MinecaRTS.PlayerData.BuildingAtPos
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.BuildingAtPos
  MinecaRTS.PlayerData.SelectFirstBuildingInRect*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.SelectFirstBuildingInRect*
        name: SelectFirstBuildingInRect
        nameWithType: PlayerData.SelectFirstBuildingInRect
        qualifiedName: MinecaRTS.PlayerData.SelectFirstBuildingInRect
      VB:
      - id: MinecaRTS.PlayerData.SelectFirstBuildingInRect*
        name: SelectFirstBuildingInRect
        nameWithType: PlayerData.SelectFirstBuildingInRect
        qualifiedName: MinecaRTS.PlayerData.SelectFirstBuildingInRect
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.SelectFirstBuildingInRect
  MinecaRTS.PlayerData.BuyBuilding*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.BuyBuilding*
        name: BuyBuilding
        nameWithType: PlayerData.BuyBuilding
        qualifiedName: MinecaRTS.PlayerData.BuyBuilding
      VB:
      - id: MinecaRTS.PlayerData.BuyBuilding*
        name: BuyBuilding
        nameWithType: PlayerData.BuyBuilding
        qualifiedName: MinecaRTS.PlayerData.BuyBuilding
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.BuyBuilding
  MinecaRTS.PlayerData.SpendResourcesForUnitType*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.SpendResourcesForUnitType*
        name: SpendResourcesForUnitType
        nameWithType: PlayerData.SpendResourcesForUnitType
        qualifiedName: MinecaRTS.PlayerData.SpendResourcesForUnitType
      VB:
      - id: MinecaRTS.PlayerData.SpendResourcesForUnitType*
        name: SpendResourcesForUnitType
        nameWithType: PlayerData.SpendResourcesForUnitType
        qualifiedName: MinecaRTS.PlayerData.SpendResourcesForUnitType
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.SpendResourcesForUnitType
  MinecaRTS.PlayerData.CanAffordEntityType*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.CanAffordEntityType*
        name: CanAffordEntityType
        nameWithType: PlayerData.CanAffordEntityType
        qualifiedName: MinecaRTS.PlayerData.CanAffordEntityType
      VB:
      - id: MinecaRTS.PlayerData.CanAffordEntityType*
        name: CanAffordEntityType
        nameWithType: PlayerData.CanAffordEntityType
        qualifiedName: MinecaRTS.PlayerData.CanAffordEntityType
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.CanAffordEntityType
  MinecaRTS.PlayerData.QueueUpProductionOnSelectedBuildingAtIndex*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.QueueUpProductionOnSelectedBuildingAtIndex*
        name: QueueUpProductionOnSelectedBuildingAtIndex
        nameWithType: PlayerData.QueueUpProductionOnSelectedBuildingAtIndex
        qualifiedName: MinecaRTS.PlayerData.QueueUpProductionOnSelectedBuildingAtIndex
      VB:
      - id: MinecaRTS.PlayerData.QueueUpProductionOnSelectedBuildingAtIndex*
        name: QueueUpProductionOnSelectedBuildingAtIndex
        nameWithType: PlayerData.QueueUpProductionOnSelectedBuildingAtIndex
        qualifiedName: MinecaRTS.PlayerData.QueueUpProductionOnSelectedBuildingAtIndex
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.QueueUpProductionOnSelectedBuildingAtIndex
  MinecaRTS.PlayerData.SpendResources*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.SpendResources*
        name: SpendResources
        nameWithType: PlayerData.SpendResources
        qualifiedName: MinecaRTS.PlayerData.SpendResources
      VB:
      - id: MinecaRTS.PlayerData.SpendResources*
        name: SpendResources
        nameWithType: PlayerData.SpendResources
        qualifiedName: MinecaRTS.PlayerData.SpendResources
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.SpendResources
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  MinecaRTS.PlayerData.GetClosestActiveBuilding*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.GetClosestActiveBuilding*
        name: GetClosestActiveBuilding
        nameWithType: PlayerData.GetClosestActiveBuilding
        qualifiedName: MinecaRTS.PlayerData.GetClosestActiveBuilding
      VB:
      - id: MinecaRTS.PlayerData.GetClosestActiveBuilding*
        name: GetClosestActiveBuilding
        nameWithType: PlayerData.GetClosestActiveBuilding
        qualifiedName: MinecaRTS.PlayerData.GetClosestActiveBuilding
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.GetClosestActiveBuilding
  MinecaRTS.PlayerData.SetSelectedBuildingRallyPointTo*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.SetSelectedBuildingRallyPointTo*
        name: SetSelectedBuildingRallyPointTo
        nameWithType: PlayerData.SetSelectedBuildingRallyPointTo
        qualifiedName: MinecaRTS.PlayerData.SetSelectedBuildingRallyPointTo
      VB:
      - id: MinecaRTS.PlayerData.SetSelectedBuildingRallyPointTo*
        name: SetSelectedBuildingRallyPointTo
        nameWithType: PlayerData.SetSelectedBuildingRallyPointTo
        qualifiedName: MinecaRTS.PlayerData.SetSelectedBuildingRallyPointTo
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.SetSelectedBuildingRallyPointTo
  MinecaRTS.PlayerData.GetClosestResourceReturnPoint*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.GetClosestResourceReturnPoint*
        name: GetClosestResourceReturnPoint
        nameWithType: PlayerData.GetClosestResourceReturnPoint
        qualifiedName: MinecaRTS.PlayerData.GetClosestResourceReturnPoint
      VB:
      - id: MinecaRTS.PlayerData.GetClosestResourceReturnPoint*
        name: GetClosestResourceReturnPoint
        nameWithType: PlayerData.GetClosestResourceReturnPoint
        qualifiedName: MinecaRTS.PlayerData.GetClosestResourceReturnPoint
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.GetClosestResourceReturnPoint
  MinecaRTS.PlayerData.Render*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.Render*
        name: Render
        nameWithType: PlayerData.Render
        qualifiedName: MinecaRTS.PlayerData.Render
      VB:
      - id: MinecaRTS.PlayerData.Render*
        name: Render
        nameWithType: PlayerData.Render
        qualifiedName: MinecaRTS.PlayerData.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.Render
  MinecaRTS.PlayerData.RenderUI*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.RenderUI*
        name: RenderUI
        nameWithType: PlayerData.RenderUI
        qualifiedName: MinecaRTS.PlayerData.RenderUI
      VB:
      - id: MinecaRTS.PlayerData.RenderUI*
        name: RenderUI
        nameWithType: PlayerData.RenderUI
        qualifiedName: MinecaRTS.PlayerData.RenderUI
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.RenderUI
  MinecaRTS.PlayerData.PanelAtPos*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.PanelAtPos*
        name: PanelAtPos
        nameWithType: PlayerData.PanelAtPos
        qualifiedName: MinecaRTS.PlayerData.PanelAtPos
      VB:
      - id: MinecaRTS.PlayerData.PanelAtPos*
        name: PanelAtPos
        nameWithType: PlayerData.PanelAtPos
        qualifiedName: MinecaRTS.PlayerData.PanelAtPos
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.PanelAtPos
  MinecaRTS.PlayerData.ButtonAtPos*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.ButtonAtPos*
        name: ButtonAtPos
        nameWithType: PlayerData.ButtonAtPos
        qualifiedName: MinecaRTS.PlayerData.ButtonAtPos
      VB:
      - id: MinecaRTS.PlayerData.ButtonAtPos*
        name: ButtonAtPos
        nameWithType: PlayerData.ButtonAtPos
        qualifiedName: MinecaRTS.PlayerData.ButtonAtPos
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.ButtonAtPos
  MinecaRTS.PlayerData.ClickedOnUI*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.ClickedOnUI*
        name: ClickedOnUI
        nameWithType: PlayerData.ClickedOnUI
        qualifiedName: MinecaRTS.PlayerData.ClickedOnUI
      VB:
      - id: MinecaRTS.PlayerData.ClickedOnUI*
        name: ClickedOnUI
        nameWithType: PlayerData.ClickedOnUI
        qualifiedName: MinecaRTS.PlayerData.ClickedOnUI
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.ClickedOnUI
  MinecaRTS.PlayerData.RenderMinimap*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.RenderMinimap*
        name: RenderMinimap
        nameWithType: PlayerData.RenderMinimap
        qualifiedName: MinecaRTS.PlayerData.RenderMinimap
      VB:
      - id: MinecaRTS.PlayerData.RenderMinimap*
        name: RenderMinimap
        nameWithType: PlayerData.RenderMinimap
        qualifiedName: MinecaRTS.PlayerData.RenderMinimap
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.RenderMinimap
  MinecaRTS.PlayerData.TestPathfindingCalculationTime*:
    name:
      CSharp:
      - id: MinecaRTS.PlayerData.TestPathfindingCalculationTime*
        name: TestPathfindingCalculationTime
        nameWithType: PlayerData.TestPathfindingCalculationTime
        qualifiedName: MinecaRTS.PlayerData.TestPathfindingCalculationTime
      VB:
      - id: MinecaRTS.PlayerData.TestPathfindingCalculationTime*
        name: TestPathfindingCalculationTime
        nameWithType: PlayerData.TestPathfindingCalculationTime
        qualifiedName: MinecaRTS.PlayerData.TestPathfindingCalculationTime
    isDefinition: true
    commentId: Overload:MinecaRTS.PlayerData.TestPathfindingCalculationTime
  System.Collections.Generic.Dictionary{System.Type,System.UInt32}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.Type,System.UInt32}
  System.Collections.Generic.List{System.Type}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Type}
  MinecaRTS.ProductionBuilding.ProductionTypes*:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.ProductionTypes*
        name: ProductionTypes
        nameWithType: ProductionBuilding.ProductionTypes
        qualifiedName: MinecaRTS.ProductionBuilding.ProductionTypes
      VB:
      - id: MinecaRTS.ProductionBuilding.ProductionTypes*
        name: ProductionTypes
        nameWithType: ProductionBuilding.ProductionTypes
        qualifiedName: MinecaRTS.ProductionBuilding.ProductionTypes
    isDefinition: true
    commentId: Overload:MinecaRTS.ProductionBuilding.ProductionTypes
  MinecaRTS.ProductionBuilding.Data*:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.Data*
        name: Data
        nameWithType: ProductionBuilding.Data
        qualifiedName: MinecaRTS.ProductionBuilding.Data
      VB:
      - id: MinecaRTS.ProductionBuilding.Data*
        name: Data
        nameWithType: ProductionBuilding.Data
        qualifiedName: MinecaRTS.ProductionBuilding.Data
    isDefinition: true
    commentId: Overload:MinecaRTS.ProductionBuilding.Data
  MinecaRTS.ProductionBuilding.BeingProduced*:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.BeingProduced*
        name: BeingProduced
        nameWithType: ProductionBuilding.BeingProduced
        qualifiedName: MinecaRTS.ProductionBuilding.BeingProduced
      VB:
      - id: MinecaRTS.ProductionBuilding.BeingProduced*
        name: BeingProduced
        nameWithType: ProductionBuilding.BeingProduced
        qualifiedName: MinecaRTS.ProductionBuilding.BeingProduced
    isDefinition: true
    commentId: Overload:MinecaRTS.ProductionBuilding.BeingProduced
  MinecaRTS.ProductionBuilding.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.#ctor*
        name: ProductionBuilding
        nameWithType: ProductionBuilding.ProductionBuilding
        qualifiedName: MinecaRTS.ProductionBuilding.ProductionBuilding
      VB:
      - id: MinecaRTS.ProductionBuilding.#ctor*
        name: ProductionBuilding
        nameWithType: ProductionBuilding.ProductionBuilding
        qualifiedName: MinecaRTS.ProductionBuilding.ProductionBuilding
    isDefinition: true
    commentId: Overload:MinecaRTS.ProductionBuilding.#ctor
  MinecaRTS.ProductionBuilding.ResetRallyPoint*:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.ResetRallyPoint*
        name: ResetRallyPoint
        nameWithType: ProductionBuilding.ResetRallyPoint
        qualifiedName: MinecaRTS.ProductionBuilding.ResetRallyPoint
      VB:
      - id: MinecaRTS.ProductionBuilding.ResetRallyPoint*
        name: ResetRallyPoint
        nameWithType: ProductionBuilding.ResetRallyPoint
        qualifiedName: MinecaRTS.ProductionBuilding.ResetRallyPoint
    isDefinition: true
    commentId: Overload:MinecaRTS.ProductionBuilding.ResetRallyPoint
  MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex*:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex*
        name: QueueUpProductionAtIndex
        nameWithType: ProductionBuilding.QueueUpProductionAtIndex
        qualifiedName: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex
      VB:
      - id: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex*
        name: QueueUpProductionAtIndex
        nameWithType: ProductionBuilding.QueueUpProductionAtIndex
        qualifiedName: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex
    isDefinition: true
    commentId: Overload:MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex
  MinecaRTS.ProductionBuilding.Update*:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.Update*
        name: Update
        nameWithType: ProductionBuilding.Update
        qualifiedName: MinecaRTS.ProductionBuilding.Update
      VB:
      - id: MinecaRTS.ProductionBuilding.Update*
        name: Update
        nameWithType: ProductionBuilding.Update
        qualifiedName: MinecaRTS.ProductionBuilding.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.ProductionBuilding.Update
  MinecaRTS.ProductionBuilding.Render*:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.Render*
        name: Render
        nameWithType: ProductionBuilding.Render
        qualifiedName: MinecaRTS.ProductionBuilding.Render
      VB:
      - id: MinecaRTS.ProductionBuilding.Render*
        name: Render
        nameWithType: ProductionBuilding.Render
        qualifiedName: MinecaRTS.ProductionBuilding.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.ProductionBuilding.Render
  MinecaRTS.Program:
    name:
      CSharp:
      - id: MinecaRTS.Program
        name: Program
        nameWithType: Program
        qualifiedName: MinecaRTS.Program
      VB:
      - id: MinecaRTS.Program
        name: Program
        nameWithType: Program
        qualifiedName: MinecaRTS.Program
    isDefinition: true
    commentId: T:MinecaRTS.Program
  MinecaRTS.Resource.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.#ctor*
        name: Resource
        nameWithType: Resource.Resource
        qualifiedName: MinecaRTS.Resource.Resource
      VB:
      - id: MinecaRTS.Resource.#ctor*
        name: Resource
        nameWithType: Resource.Resource
        qualifiedName: MinecaRTS.Resource.Resource
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.#ctor
  System.Collections.Generic.HashSet{MinecaRTS.Worker}:
    name:
      CSharp:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: System.Collections.Generic.HashSet
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Worker
        name: Worker
        nameWithType: Worker
        qualifiedName: MinecaRTS.Worker
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.HashSet`1
        name: HashSet
        nameWithType: HashSet
        qualifiedName: System.Collections.Generic.HashSet
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Worker
        name: Worker
        nameWithType: Worker
        qualifiedName: MinecaRTS.Worker
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.HashSet`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.HashSet{MinecaRTS.Worker}
  MinecaRTS.Resource.Harvesters*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.Harvesters*
        name: Harvesters
        nameWithType: Resource.Harvesters
        qualifiedName: MinecaRTS.Resource.Harvesters
      VB:
      - id: MinecaRTS.Resource.Harvesters*
        name: Harvesters
        nameWithType: Resource.Harvesters
        qualifiedName: MinecaRTS.Resource.Harvesters
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.Harvesters
  MinecaRTS.Resource.IsSaturated*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.IsSaturated*
        name: IsSaturated
        nameWithType: Resource.IsSaturated
        qualifiedName: MinecaRTS.Resource.IsSaturated
      VB:
      - id: MinecaRTS.Resource.IsSaturated*
        name: IsSaturated
        nameWithType: Resource.IsSaturated
        qualifiedName: MinecaRTS.Resource.IsSaturated
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.IsSaturated
  MinecaRTS.Resource.IsDepleted*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.IsDepleted*
        name: IsDepleted
        nameWithType: Resource.IsDepleted
        qualifiedName: MinecaRTS.Resource.IsDepleted
      VB:
      - id: MinecaRTS.Resource.IsDepleted*
        name: IsDepleted
        nameWithType: Resource.IsDepleted
        qualifiedName: MinecaRTS.Resource.IsDepleted
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.IsDepleted
  MinecaRTS.Resource.GiveResources*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.GiveResources*
        name: GiveResources
        nameWithType: Resource.GiveResources
        qualifiedName: MinecaRTS.Resource.GiveResources
      VB:
      - id: MinecaRTS.Resource.GiveResources*
        name: GiveResources
        nameWithType: Resource.GiveResources
        qualifiedName: MinecaRTS.Resource.GiveResources
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.GiveResources
  MinecaRTS.Resource.RemoveHarvester*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.RemoveHarvester*
        name: RemoveHarvester
        nameWithType: Resource.RemoveHarvester
        qualifiedName: MinecaRTS.Resource.RemoveHarvester
      VB:
      - id: MinecaRTS.Resource.RemoveHarvester*
        name: RemoveHarvester
        nameWithType: Resource.RemoveHarvester
        qualifiedName: MinecaRTS.Resource.RemoveHarvester
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.RemoveHarvester
  MinecaRTS.Resource.AddHarvester*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.AddHarvester*
        name: AddHarvester
        nameWithType: Resource.AddHarvester
        qualifiedName: MinecaRTS.Resource.AddHarvester
      VB:
      - id: MinecaRTS.Resource.AddHarvester*
        name: AddHarvester
        nameWithType: Resource.AddHarvester
        qualifiedName: MinecaRTS.Resource.AddHarvester
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.AddHarvester
  MinecaRTS.Resource.HasHarvester*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.HasHarvester*
        name: HasHarvester
        nameWithType: Resource.HasHarvester
        qualifiedName: MinecaRTS.Resource.HasHarvester
      VB:
      - id: MinecaRTS.Resource.HasHarvester*
        name: HasHarvester
        nameWithType: Resource.HasHarvester
        qualifiedName: MinecaRTS.Resource.HasHarvester
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.HasHarvester
  MinecaRTS.Resource.Update*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.Update*
        name: Update
        nameWithType: Resource.Update
        qualifiedName: MinecaRTS.Resource.Update
      VB:
      - id: MinecaRTS.Resource.Update*
        name: Update
        nameWithType: Resource.Update
        qualifiedName: MinecaRTS.Resource.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.Update
  MinecaRTS.Resource.Render*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.Render*
        name: Render
        nameWithType: Resource.Render
        qualifiedName: MinecaRTS.Resource.Render
      VB:
      - id: MinecaRTS.Resource.Render*
        name: Render
        nameWithType: Resource.Render
        qualifiedName: MinecaRTS.Resource.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.Render
  MinecaRTS.Resource.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.HandleMessage*
        name: HandleMessage
        nameWithType: Resource.HandleMessage
        qualifiedName: MinecaRTS.Resource.HandleMessage
      VB:
      - id: MinecaRTS.Resource.HandleMessage*
        name: HandleMessage
        nameWithType: Resource.HandleMessage
        qualifiedName: MinecaRTS.Resource.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.HandleMessage
  MinecaRTS.Resource.ExitState*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.ExitState*
        name: ExitState
        nameWithType: Resource.ExitState
        qualifiedName: MinecaRTS.Resource.ExitState
      VB:
      - id: MinecaRTS.Resource.ExitState*
        name: ExitState
        nameWithType: Resource.ExitState
        qualifiedName: MinecaRTS.Resource.ExitState
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.ExitState
  MinecaRTS.Resource.RenderDebug*:
    name:
      CSharp:
      - id: MinecaRTS.Resource.RenderDebug*
        name: RenderDebug
        nameWithType: Resource.RenderDebug
        qualifiedName: MinecaRTS.Resource.RenderDebug
      VB:
      - id: MinecaRTS.Resource.RenderDebug*
        name: RenderDebug
        nameWithType: Resource.RenderDebug
        qualifiedName: MinecaRTS.Resource.RenderDebug
    isDefinition: true
    commentId: Overload:MinecaRTS.Resource.RenderDebug
  MinecaRTS.State`1.Enter*:
    name:
      CSharp:
      - id: MinecaRTS.State`1.Enter*
        name: Enter
        nameWithType: State<T>.Enter
        qualifiedName: MinecaRTS.State<T>.Enter
      VB:
      - id: MinecaRTS.State`1.Enter*
        name: Enter
        nameWithType: State(Of T).Enter
        qualifiedName: MinecaRTS.State(Of T).Enter
    isDefinition: true
    commentId: Overload:MinecaRTS.State`1.Enter
  MinecaRTS.State`1.Exit*:
    name:
      CSharp:
      - id: MinecaRTS.State`1.Exit*
        name: Exit
        nameWithType: State<T>.Exit
        qualifiedName: MinecaRTS.State<T>.Exit
      VB:
      - id: MinecaRTS.State`1.Exit*
        name: Exit
        nameWithType: State(Of T).Exit
        qualifiedName: MinecaRTS.State(Of T).Exit
    isDefinition: true
    commentId: Overload:MinecaRTS.State`1.Exit
  MinecaRTS.State`1.Execute*:
    name:
      CSharp:
      - id: MinecaRTS.State`1.Execute*
        name: Execute
        nameWithType: State<T>.Execute
        qualifiedName: MinecaRTS.State<T>.Execute
      VB:
      - id: MinecaRTS.State`1.Execute*
        name: Execute
        nameWithType: State(Of T).Execute
        qualifiedName: MinecaRTS.State(Of T).Execute
    isDefinition: true
    commentId: Overload:MinecaRTS.State`1.Execute
  MinecaRTS.State`1.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.State`1.HandleMessage*
        name: HandleMessage
        nameWithType: State<T>.HandleMessage
        qualifiedName: MinecaRTS.State<T>.HandleMessage
      VB:
      - id: MinecaRTS.State`1.HandleMessage*
        name: HandleMessage
        nameWithType: State(Of T).HandleMessage
        qualifiedName: MinecaRTS.State(Of T).HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.State`1.HandleMessage
  MinecaRTS.State{{T}}:
    name:
      CSharp:
      - id: MinecaRTS.State`1
        name: State
        nameWithType: State
        qualifiedName: MinecaRTS.State
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: MinecaRTS.State`1
        name: State
        nameWithType: State
        qualifiedName: MinecaRTS.State
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: MinecaRTS.State`1
    parent: MinecaRTS
    commentId: T:MinecaRTS.State{`0}
  MinecaRTS.StateMachine`1.CurrentState*:
    name:
      CSharp:
      - id: MinecaRTS.StateMachine`1.CurrentState*
        name: CurrentState
        nameWithType: StateMachine<T>.CurrentState
        qualifiedName: MinecaRTS.StateMachine<T>.CurrentState
      VB:
      - id: MinecaRTS.StateMachine`1.CurrentState*
        name: CurrentState
        nameWithType: StateMachine(Of T).CurrentState
        qualifiedName: MinecaRTS.StateMachine(Of T).CurrentState
    isDefinition: true
    commentId: Overload:MinecaRTS.StateMachine`1.CurrentState
  MinecaRTS.StateMachine`1.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.StateMachine`1.#ctor*
        name: StateMachine
        nameWithType: StateMachine<T>.StateMachine
        qualifiedName: MinecaRTS.StateMachine<T>.StateMachine
      VB:
      - id: MinecaRTS.StateMachine`1.#ctor*
        name: StateMachine
        nameWithType: StateMachine(Of T).StateMachine
        qualifiedName: MinecaRTS.StateMachine(Of T).StateMachine
    isDefinition: true
    commentId: Overload:MinecaRTS.StateMachine`1.#ctor
  MinecaRTS.StateMachine`1.Execute*:
    name:
      CSharp:
      - id: MinecaRTS.StateMachine`1.Execute*
        name: Execute
        nameWithType: StateMachine<T>.Execute
        qualifiedName: MinecaRTS.StateMachine<T>.Execute
      VB:
      - id: MinecaRTS.StateMachine`1.Execute*
        name: Execute
        nameWithType: StateMachine(Of T).Execute
        qualifiedName: MinecaRTS.StateMachine(Of T).Execute
    isDefinition: true
    commentId: Overload:MinecaRTS.StateMachine`1.Execute
  MinecaRTS.StateMachine`1.ChangeState*:
    name:
      CSharp:
      - id: MinecaRTS.StateMachine`1.ChangeState*
        name: ChangeState
        nameWithType: StateMachine<T>.ChangeState
        qualifiedName: MinecaRTS.StateMachine<T>.ChangeState
      VB:
      - id: MinecaRTS.StateMachine`1.ChangeState*
        name: ChangeState
        nameWithType: StateMachine(Of T).ChangeState
        qualifiedName: MinecaRTS.StateMachine(Of T).ChangeState
    isDefinition: true
    commentId: Overload:MinecaRTS.StateMachine`1.ChangeState
  MinecaRTS.StateMachine`1.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.StateMachine`1.HandleMessage*
        name: HandleMessage
        nameWithType: StateMachine<T>.HandleMessage
        qualifiedName: MinecaRTS.StateMachine<T>.HandleMessage
      VB:
      - id: MinecaRTS.StateMachine`1.HandleMessage*
        name: HandleMessage
        nameWithType: StateMachine(Of T).HandleMessage
        qualifiedName: MinecaRTS.StateMachine(Of T).HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.StateMachine`1.HandleMessage
  MinecaRTS.SteeringBehaviours.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.SteeringBehaviours.#ctor*
        name: SteeringBehaviours
        nameWithType: SteeringBehaviours.SteeringBehaviours
        qualifiedName: MinecaRTS.SteeringBehaviours.SteeringBehaviours
      VB:
      - id: MinecaRTS.SteeringBehaviours.#ctor*
        name: SteeringBehaviours
        nameWithType: SteeringBehaviours.SteeringBehaviours
        qualifiedName: MinecaRTS.SteeringBehaviours.SteeringBehaviours
    isDefinition: true
    commentId: Overload:MinecaRTS.SteeringBehaviours.#ctor
  MinecaRTS.SteeringBehaviours.Calculate*:
    name:
      CSharp:
      - id: MinecaRTS.SteeringBehaviours.Calculate*
        name: Calculate
        nameWithType: SteeringBehaviours.Calculate
        qualifiedName: MinecaRTS.SteeringBehaviours.Calculate
      VB:
      - id: MinecaRTS.SteeringBehaviours.Calculate*
        name: Calculate
        nameWithType: SteeringBehaviours.Calculate
        qualifiedName: MinecaRTS.SteeringBehaviours.Calculate
    isDefinition: true
    commentId: Overload:MinecaRTS.SteeringBehaviours.Calculate
  MinecaRTS.SteeringBehaviours.Separation*:
    name:
      CSharp:
      - id: MinecaRTS.SteeringBehaviours.Separation*
        name: Separation
        nameWithType: SteeringBehaviours.Separation
        qualifiedName: MinecaRTS.SteeringBehaviours.Separation
      VB:
      - id: MinecaRTS.SteeringBehaviours.Separation*
        name: Separation
        nameWithType: SteeringBehaviours.Separation
        qualifiedName: MinecaRTS.SteeringBehaviours.Separation
    isDefinition: true
    commentId: Overload:MinecaRTS.SteeringBehaviours.Separation
  MinecaRTS.SteeringBehaviours.UnpassableCellAvoidance*:
    name:
      CSharp:
      - id: MinecaRTS.SteeringBehaviours.UnpassableCellAvoidance*
        name: UnpassableCellAvoidance
        nameWithType: SteeringBehaviours.UnpassableCellAvoidance
        qualifiedName: MinecaRTS.SteeringBehaviours.UnpassableCellAvoidance
      VB:
      - id: MinecaRTS.SteeringBehaviours.UnpassableCellAvoidance*
        name: UnpassableCellAvoidance
        nameWithType: SteeringBehaviours.UnpassableCellAvoidance
        qualifiedName: MinecaRTS.SteeringBehaviours.UnpassableCellAvoidance
    isDefinition: true
    commentId: Overload:MinecaRTS.SteeringBehaviours.UnpassableCellAvoidance
  MinecaRTS.SteeringBehaviours.ZeroOverlapCells*:
    name:
      CSharp:
      - id: MinecaRTS.SteeringBehaviours.ZeroOverlapCells*
        name: ZeroOverlapCells
        nameWithType: SteeringBehaviours.ZeroOverlapCells
        qualifiedName: MinecaRTS.SteeringBehaviours.ZeroOverlapCells
      VB:
      - id: MinecaRTS.SteeringBehaviours.ZeroOverlapCells*
        name: ZeroOverlapCells
        nameWithType: SteeringBehaviours.ZeroOverlapCells
        qualifiedName: MinecaRTS.SteeringBehaviours.ZeroOverlapCells
    isDefinition: true
    commentId: Overload:MinecaRTS.SteeringBehaviours.ZeroOverlapCells
  MinecaRTS.SteeringBehaviours.ZeroOverlapUnits*:
    name:
      CSharp:
      - id: MinecaRTS.SteeringBehaviours.ZeroOverlapUnits*
        name: ZeroOverlapUnits
        nameWithType: SteeringBehaviours.ZeroOverlapUnits
        qualifiedName: MinecaRTS.SteeringBehaviours.ZeroOverlapUnits
      VB:
      - id: MinecaRTS.SteeringBehaviours.ZeroOverlapUnits*
        name: ZeroOverlapUnits
        nameWithType: SteeringBehaviours.ZeroOverlapUnits
        qualifiedName: MinecaRTS.SteeringBehaviours.ZeroOverlapUnits
    isDefinition: true
    commentId: Overload:MinecaRTS.SteeringBehaviours.ZeroOverlapUnits
  MinecaRTS.SteeringBehaviours:
    name:
      CSharp:
      - id: MinecaRTS.SteeringBehaviours
        name: SteeringBehaviours
        nameWithType: SteeringBehaviours
        qualifiedName: MinecaRTS.SteeringBehaviours
      VB:
      - id: MinecaRTS.SteeringBehaviours
        name: SteeringBehaviours
        nameWithType: SteeringBehaviours
        qualifiedName: MinecaRTS.SteeringBehaviours
    isDefinition: true
    parent: MinecaRTS
    commentId: T:MinecaRTS.SteeringBehaviours
  MinecaRTS.ProductionBuilding.MAX_HEALTH:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.MAX_HEALTH
        name: MAX_HEALTH
        nameWithType: ProductionBuilding.MAX_HEALTH
        qualifiedName: MinecaRTS.ProductionBuilding.MAX_HEALTH
      VB:
      - id: MinecaRTS.ProductionBuilding.MAX_HEALTH
        name: MAX_HEALTH
        nameWithType: ProductionBuilding.MAX_HEALTH
        qualifiedName: MinecaRTS.ProductionBuilding.MAX_HEALTH
    isDefinition: true
    parent: MinecaRTS.ProductionBuilding
    commentId: F:MinecaRTS.ProductionBuilding.MAX_HEALTH
  MinecaRTS.ProductionBuilding.MAX_QUEUE_LENGTH:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.MAX_QUEUE_LENGTH
        name: MAX_QUEUE_LENGTH
        nameWithType: ProductionBuilding.MAX_QUEUE_LENGTH
        qualifiedName: MinecaRTS.ProductionBuilding.MAX_QUEUE_LENGTH
      VB:
      - id: MinecaRTS.ProductionBuilding.MAX_QUEUE_LENGTH
        name: MAX_QUEUE_LENGTH
        nameWithType: ProductionBuilding.MAX_QUEUE_LENGTH
        qualifiedName: MinecaRTS.ProductionBuilding.MAX_QUEUE_LENGTH
    isDefinition: true
    parent: MinecaRTS.ProductionBuilding
    commentId: F:MinecaRTS.ProductionBuilding.MAX_QUEUE_LENGTH
  MinecaRTS.ProductionBuilding.productionTimes:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.productionTimes
        name: productionTimes
        nameWithType: ProductionBuilding.productionTimes
        qualifiedName: MinecaRTS.ProductionBuilding.productionTimes
      VB:
      - id: MinecaRTS.ProductionBuilding.productionTimes
        name: productionTimes
        nameWithType: ProductionBuilding.productionTimes
        qualifiedName: MinecaRTS.ProductionBuilding.productionTimes
    isDefinition: true
    parent: MinecaRTS.ProductionBuilding
    commentId: F:MinecaRTS.ProductionBuilding.productionTimes
  MinecaRTS.ProductionBuilding.ProductionTypes:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.ProductionTypes
        name: ProductionTypes
        nameWithType: ProductionBuilding.ProductionTypes
        qualifiedName: MinecaRTS.ProductionBuilding.ProductionTypes
      VB:
      - id: MinecaRTS.ProductionBuilding.ProductionTypes
        name: ProductionTypes
        nameWithType: ProductionBuilding.ProductionTypes
        qualifiedName: MinecaRTS.ProductionBuilding.ProductionTypes
    isDefinition: true
    parent: MinecaRTS.ProductionBuilding
    commentId: P:MinecaRTS.ProductionBuilding.ProductionTypes
  MinecaRTS.ProductionBuilding.rallyPoint:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.rallyPoint
        name: rallyPoint
        nameWithType: ProductionBuilding.rallyPoint
        qualifiedName: MinecaRTS.ProductionBuilding.rallyPoint
      VB:
      - id: MinecaRTS.ProductionBuilding.rallyPoint
        name: rallyPoint
        nameWithType: ProductionBuilding.rallyPoint
        qualifiedName: MinecaRTS.ProductionBuilding.rallyPoint
    isDefinition: true
    parent: MinecaRTS.ProductionBuilding
    commentId: F:MinecaRTS.ProductionBuilding.rallyPoint
  MinecaRTS.ProductionBuilding.Data:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.Data
        name: Data
        nameWithType: ProductionBuilding.Data
        qualifiedName: MinecaRTS.ProductionBuilding.Data
      VB:
      - id: MinecaRTS.ProductionBuilding.Data
        name: Data
        nameWithType: ProductionBuilding.Data
        qualifiedName: MinecaRTS.ProductionBuilding.Data
    isDefinition: true
    parent: MinecaRTS.ProductionBuilding
    commentId: P:MinecaRTS.ProductionBuilding.Data
  MinecaRTS.ProductionBuilding.BeingProduced:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.BeingProduced
        name: BeingProduced
        nameWithType: ProductionBuilding.BeingProduced
        qualifiedName: MinecaRTS.ProductionBuilding.BeingProduced
      VB:
      - id: MinecaRTS.ProductionBuilding.BeingProduced
        name: BeingProduced
        nameWithType: ProductionBuilding.BeingProduced
        qualifiedName: MinecaRTS.ProductionBuilding.BeingProduced
    isDefinition: true
    parent: MinecaRTS.ProductionBuilding
    commentId: P:MinecaRTS.ProductionBuilding.BeingProduced
  MinecaRTS.ProductionBuilding.ResetRallyPoint:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.ResetRallyPoint
        name: ResetRallyPoint
        nameWithType: ProductionBuilding.ResetRallyPoint
        qualifiedName: MinecaRTS.ProductionBuilding.ResetRallyPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.ProductionBuilding.ResetRallyPoint
        name: ResetRallyPoint
        nameWithType: ProductionBuilding.ResetRallyPoint
        qualifiedName: MinecaRTS.ProductionBuilding.ResetRallyPoint
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.ProductionBuilding
    commentId: M:MinecaRTS.ProductionBuilding.ResetRallyPoint
  MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex(System.Int32):
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex(System.Int32)
        name: QueueUpProductionAtIndex
        nameWithType: ProductionBuilding.QueueUpProductionAtIndex
        qualifiedName: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex(System.Int32)
        name: QueueUpProductionAtIndex
        nameWithType: ProductionBuilding.QueueUpProductionAtIndex
        qualifiedName: MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.ProductionBuilding
    commentId: M:MinecaRTS.ProductionBuilding.QueueUpProductionAtIndex(System.Int32)
  MinecaRTS.ProductionBuilding.Update:
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.Update
        name: Update
        nameWithType: ProductionBuilding.Update
        qualifiedName: MinecaRTS.ProductionBuilding.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.ProductionBuilding.Update
        name: Update
        nameWithType: ProductionBuilding.Update
        qualifiedName: MinecaRTS.ProductionBuilding.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.ProductionBuilding
    commentId: M:MinecaRTS.ProductionBuilding.Update
  MinecaRTS.ProductionBuilding.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch):
    name:
      CSharp:
      - id: MinecaRTS.ProductionBuilding.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: ProductionBuilding.Render
        qualifiedName: MinecaRTS.ProductionBuilding.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: MinecaRTS.ProductionBuilding.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
        name: Render
        nameWithType: ProductionBuilding.Render
        qualifiedName: MinecaRTS.ProductionBuilding.Render
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Microsoft.Xna.Framework.Graphics.SpriteBatch
        name: SpriteBatch
        nameWithType: SpriteBatch
        qualifiedName: Microsoft.Xna.Framework.Graphics.SpriteBatch
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: MinecaRTS.ProductionBuilding
    commentId: M:MinecaRTS.ProductionBuilding.Render(Microsoft.Xna.Framework.Graphics.SpriteBatch)
  MinecaRTS.TownHall.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.TownHall.#ctor*
        name: TownHall
        nameWithType: TownHall.TownHall
        qualifiedName: MinecaRTS.TownHall.TownHall
      VB:
      - id: MinecaRTS.TownHall.#ctor*
        name: TownHall
        nameWithType: TownHall.TownHall
        qualifiedName: MinecaRTS.TownHall.TownHall
    isDefinition: true
    commentId: Overload:MinecaRTS.TownHall.#ctor
  MinecaRTS.TownHall.AcceptResources*:
    name:
      CSharp:
      - id: MinecaRTS.TownHall.AcceptResources*
        name: AcceptResources
        nameWithType: TownHall.AcceptResources
        qualifiedName: MinecaRTS.TownHall.AcceptResources
      VB:
      - id: MinecaRTS.TownHall.AcceptResources*
        name: AcceptResources
        nameWithType: TownHall.AcceptResources
        qualifiedName: MinecaRTS.TownHall.AcceptResources
    isDefinition: true
    commentId: Overload:MinecaRTS.TownHall.AcceptResources
  MinecaRTS.Unit.Speed*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Speed*
        name: Speed
        nameWithType: Unit.Speed
        qualifiedName: MinecaRTS.Unit.Speed
      VB:
      - id: MinecaRTS.Unit.Speed*
        name: Speed
        nameWithType: Unit.Speed
        qualifiedName: MinecaRTS.Unit.Speed
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.Speed
  MinecaRTS.Unit.Team*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Team*
        name: Team
        nameWithType: Unit.Team
        qualifiedName: MinecaRTS.Unit.Team
      VB:
      - id: MinecaRTS.Unit.Team*
        name: Team
        nameWithType: Unit.Team
        qualifiedName: MinecaRTS.Unit.Team
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.Team
  MinecaRTS.Unit.Data*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Data*
        name: Data
        nameWithType: Unit.Data
        qualifiedName: MinecaRTS.Unit.Data
      VB:
      - id: MinecaRTS.Unit.Data*
        name: Data
        nameWithType: Unit.Data
        qualifiedName: MinecaRTS.Unit.Data
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.Data
  MinecaRTS.Unit.Steering*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Steering*
        name: Steering
        nameWithType: Unit.Steering
        qualifiedName: MinecaRTS.Unit.Steering
      VB:
      - id: MinecaRTS.Unit.Steering*
        name: Steering
        nameWithType: Unit.Steering
        qualifiedName: MinecaRTS.Unit.Steering
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.Steering
  MinecaRTS.Unit.FollowPath*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.FollowPath*
        name: FollowPath
        nameWithType: Unit.FollowPath
        qualifiedName: MinecaRTS.Unit.FollowPath
      VB:
      - id: MinecaRTS.Unit.FollowPath*
        name: FollowPath
        nameWithType: Unit.FollowPath
        qualifiedName: MinecaRTS.Unit.FollowPath
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.FollowPath
  MinecaRTS.Unit.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.#ctor*
        name: Unit
        nameWithType: Unit.Unit
        qualifiedName: MinecaRTS.Unit.Unit
      VB:
      - id: MinecaRTS.Unit.#ctor*
        name: Unit
        nameWithType: Unit.Unit
        qualifiedName: MinecaRTS.Unit.Unit
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.#ctor
  MinecaRTS.Unit.Update*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Update*
        name: Update
        nameWithType: Unit.Update
        qualifiedName: MinecaRTS.Unit.Update
      VB:
      - id: MinecaRTS.Unit.Update*
        name: Update
        nameWithType: Unit.Update
        qualifiedName: MinecaRTS.Unit.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.Update
  MinecaRTS.Unit.Stop*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Stop*
        name: Stop
        nameWithType: Unit.Stop
        qualifiedName: MinecaRTS.Unit.Stop
      VB:
      - id: MinecaRTS.Unit.Stop*
        name: Stop
        nameWithType: Unit.Stop
        qualifiedName: MinecaRTS.Unit.Stop
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.Stop
  MinecaRTS.Unit.MoveTowards*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.MoveTowards*
        name: MoveTowards
        nameWithType: Unit.MoveTowards
        qualifiedName: MinecaRTS.Unit.MoveTowards
      VB:
      - id: MinecaRTS.Unit.MoveTowards*
        name: MoveTowards
        nameWithType: Unit.MoveTowards
        qualifiedName: MinecaRTS.Unit.MoveTowards
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.MoveTowards
  MinecaRTS.Unit.Render*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.Render*
        name: Render
        nameWithType: Unit.Render
        qualifiedName: MinecaRTS.Unit.Render
      VB:
      - id: MinecaRTS.Unit.Render*
        name: Render
        nameWithType: Unit.Render
        qualifiedName: MinecaRTS.Unit.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.Render
  MinecaRTS.Unit.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.HandleMessage*
        name: HandleMessage
        nameWithType: Unit.HandleMessage
        qualifiedName: MinecaRTS.Unit.HandleMessage
      VB:
      - id: MinecaRTS.Unit.HandleMessage*
        name: HandleMessage
        nameWithType: Unit.HandleMessage
        qualifiedName: MinecaRTS.Unit.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.HandleMessage
  MinecaRTS.Unit.RenderDebug*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.RenderDebug*
        name: RenderDebug
        nameWithType: Unit.RenderDebug
        qualifiedName: MinecaRTS.Unit.RenderDebug
      VB:
      - id: MinecaRTS.Unit.RenderDebug*
        name: RenderDebug
        nameWithType: Unit.RenderDebug
        qualifiedName: MinecaRTS.Unit.RenderDebug
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.RenderDebug
  MinecaRTS.Unit.ExitState*:
    name:
      CSharp:
      - id: MinecaRTS.Unit.ExitState*
        name: ExitState
        nameWithType: Unit.ExitState
        qualifiedName: MinecaRTS.Unit.ExitState
      VB:
      - id: MinecaRTS.Unit.ExitState*
        name: ExitState
        nameWithType: Unit.ExitState
        qualifiedName: MinecaRTS.Unit.ExitState
    isDefinition: true
    commentId: Overload:MinecaRTS.Unit.ExitState
  MinecaRTS.Utils.Swap*:
    name:
      CSharp:
      - id: MinecaRTS.Utils.Swap*
        name: Swap
        nameWithType: Utils.Swap
        qualifiedName: MinecaRTS.Utils.Swap
      VB:
      - id: MinecaRTS.Utils.Swap*
        name: Swap
        nameWithType: Utils.Swap
        qualifiedName: MinecaRTS.Utils.Swap
    isDefinition: true
    commentId: Overload:MinecaRTS.Utils.Swap
  MinecaRTS.Utils.VectorToDir*:
    name:
      CSharp:
      - id: MinecaRTS.Utils.VectorToDir*
        name: VectorToDir
        nameWithType: Utils.VectorToDir
        qualifiedName: MinecaRTS.Utils.VectorToDir
      VB:
      - id: MinecaRTS.Utils.VectorToDir*
        name: VectorToDir
        nameWithType: Utils.VectorToDir
        qualifiedName: MinecaRTS.Utils.VectorToDir
    isDefinition: true
    commentId: Overload:MinecaRTS.Utils.VectorToDir
  MinecaRTS.Utils:
    name:
      CSharp:
      - id: MinecaRTS.Utils
        name: Utils
        nameWithType: Utils
        qualifiedName: MinecaRTS.Utils
      VB:
      - id: MinecaRTS.Utils
        name: Utils
        nameWithType: Utils
        qualifiedName: MinecaRTS.Utils
    isDefinition: true
    commentId: T:MinecaRTS.Utils
  System.Collections.Generic.Dictionary{MinecaRTS.WkrAnim,MinecaRTS.SpriteSheet}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.WkrAnim
        name: WkrAnim
        nameWithType: WkrAnim
        qualifiedName: MinecaRTS.WkrAnim
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.SpriteSheet
        name: SpriteSheet
        nameWithType: SpriteSheet
        qualifiedName: MinecaRTS.SpriteSheet
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.WkrAnim
        name: WkrAnim
        nameWithType: WkrAnim
        qualifiedName: MinecaRTS.WkrAnim
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.SpriteSheet
        name: SpriteSheet
        nameWithType: SpriteSheet
        qualifiedName: MinecaRTS.SpriteSheet
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{MinecaRTS.WkrAnim,MinecaRTS.SpriteSheet}
  ? System.Collections.Generic.Dictionary{MinecaRTS.WkrAnim,System.Collections.Generic.Dictionary{MinecaRTS.Dir,System.Collections.Generic.List{MinecaRTS.Frame}}}
  : name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.WkrAnim
        name: WkrAnim
        nameWithType: WkrAnim
        qualifiedName: MinecaRTS.WkrAnim
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Dir
        name: Dir
        nameWithType: Dir
        qualifiedName: MinecaRTS.Dir
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Frame
        name: Frame
        nameWithType: Frame
        qualifiedName: MinecaRTS.Frame
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.WkrAnim
        name: WkrAnim
        nameWithType: WkrAnim
        qualifiedName: MinecaRTS.WkrAnim
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Dir
        name: Dir
        nameWithType: Dir
        qualifiedName: MinecaRTS.Dir
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Frame
        name: Frame
        nameWithType: Frame
        qualifiedName: MinecaRTS.Frame
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{MinecaRTS.WkrAnim,System.Collections.Generic.Dictionary{MinecaRTS.Dir,System.Collections.Generic.List{MinecaRTS.Frame}}}
  System.Collections.Generic.Dictionary{MinecaRTS.WkrAnim,Microsoft.Xna.Framework.Vector2}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.WkrAnim
        name: WkrAnim
        nameWithType: WkrAnim
        qualifiedName: MinecaRTS.WkrAnim
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Xna.Framework.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Microsoft.Xna.Framework.Vector2
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.WkrAnim
        name: WkrAnim
        nameWithType: WkrAnim
        qualifiedName: MinecaRTS.WkrAnim
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Microsoft.Xna.Framework.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Microsoft.Xna.Framework.Vector2
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{MinecaRTS.WkrAnim,Microsoft.Xna.Framework.Vector2}
  MinecaRTS.StateMachine{MinecaRTS.Worker}:
    name:
      CSharp:
      - id: MinecaRTS.StateMachine`1
        name: StateMachine
        nameWithType: StateMachine
        qualifiedName: MinecaRTS.StateMachine
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Worker
        name: Worker
        nameWithType: Worker
        qualifiedName: MinecaRTS.Worker
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: MinecaRTS.StateMachine`1
        name: StateMachine
        nameWithType: StateMachine
        qualifiedName: MinecaRTS.StateMachine
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Worker
        name: Worker
        nameWithType: Worker
        qualifiedName: MinecaRTS.Worker
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: MinecaRTS.StateMachine`1
    parent: MinecaRTS
    commentId: T:MinecaRTS.StateMachine{MinecaRTS.Worker}
  MinecaRTS.Worker.FSM*:
    name:
      CSharp:
      - id: MinecaRTS.Worker.FSM*
        name: FSM
        nameWithType: Worker.FSM
        qualifiedName: MinecaRTS.Worker.FSM
      VB:
      - id: MinecaRTS.Worker.FSM*
        name: FSM
        nameWithType: Worker.FSM
        qualifiedName: MinecaRTS.Worker.FSM
    isDefinition: true
    commentId: Overload:MinecaRTS.Worker.FSM
  MinecaRTS.Worker.TargetResource*:
    name:
      CSharp:
      - id: MinecaRTS.Worker.TargetResource*
        name: TargetResource
        nameWithType: Worker.TargetResource
        qualifiedName: MinecaRTS.Worker.TargetResource
      VB:
      - id: MinecaRTS.Worker.TargetResource*
        name: TargetResource
        nameWithType: Worker.TargetResource
        qualifiedName: MinecaRTS.Worker.TargetResource
    isDefinition: true
    commentId: Overload:MinecaRTS.Worker.TargetResource
  MinecaRTS.Worker.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.Worker.#ctor*
        name: Worker
        nameWithType: Worker.Worker
        qualifiedName: MinecaRTS.Worker.Worker
      VB:
      - id: MinecaRTS.Worker.#ctor*
        name: Worker
        nameWithType: Worker.Worker
        qualifiedName: MinecaRTS.Worker.Worker
    isDefinition: true
    commentId: Overload:MinecaRTS.Worker.#ctor
  MinecaRTS.Worker.DepositResources*:
    name:
      CSharp:
      - id: MinecaRTS.Worker.DepositResources*
        name: DepositResources
        nameWithType: Worker.DepositResources
        qualifiedName: MinecaRTS.Worker.DepositResources
      VB:
      - id: MinecaRTS.Worker.DepositResources*
        name: DepositResources
        nameWithType: Worker.DepositResources
        qualifiedName: MinecaRTS.Worker.DepositResources
    isDefinition: true
    commentId: Overload:MinecaRTS.Worker.DepositResources
  MinecaRTS.Worker.Update*:
    name:
      CSharp:
      - id: MinecaRTS.Worker.Update*
        name: Update
        nameWithType: Worker.Update
        qualifiedName: MinecaRTS.Worker.Update
      VB:
      - id: MinecaRTS.Worker.Update*
        name: Update
        nameWithType: Worker.Update
        qualifiedName: MinecaRTS.Worker.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.Worker.Update
  MinecaRTS.Worker.MoveTowards*:
    name:
      CSharp:
      - id: MinecaRTS.Worker.MoveTowards*
        name: MoveTowards
        nameWithType: Worker.MoveTowards
        qualifiedName: MinecaRTS.Worker.MoveTowards
      VB:
      - id: MinecaRTS.Worker.MoveTowards*
        name: MoveTowards
        nameWithType: Worker.MoveTowards
        qualifiedName: MinecaRTS.Worker.MoveTowards
    isDefinition: true
    commentId: Overload:MinecaRTS.Worker.MoveTowards
  MinecaRTS.Worker.GoConstructBuilding*:
    name:
      CSharp:
      - id: MinecaRTS.Worker.GoConstructBuilding*
        name: GoConstructBuilding
        nameWithType: Worker.GoConstructBuilding
        qualifiedName: MinecaRTS.Worker.GoConstructBuilding
      VB:
      - id: MinecaRTS.Worker.GoConstructBuilding*
        name: GoConstructBuilding
        nameWithType: Worker.GoConstructBuilding
        qualifiedName: MinecaRTS.Worker.GoConstructBuilding
    isDefinition: true
    commentId: Overload:MinecaRTS.Worker.GoConstructBuilding
  MinecaRTS.Worker.ChangeAnimation*:
    name:
      CSharp:
      - id: MinecaRTS.Worker.ChangeAnimation*
        name: ChangeAnimation
        nameWithType: Worker.ChangeAnimation
        qualifiedName: MinecaRTS.Worker.ChangeAnimation
      VB:
      - id: MinecaRTS.Worker.ChangeAnimation*
        name: ChangeAnimation
        nameWithType: Worker.ChangeAnimation
        qualifiedName: MinecaRTS.Worker.ChangeAnimation
    isDefinition: true
    commentId: Overload:MinecaRTS.Worker.ChangeAnimation
  MinecaRTS.Worker.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.Worker.HandleMessage*
        name: HandleMessage
        nameWithType: Worker.HandleMessage
        qualifiedName: MinecaRTS.Worker.HandleMessage
      VB:
      - id: MinecaRTS.Worker.HandleMessage*
        name: HandleMessage
        nameWithType: Worker.HandleMessage
        qualifiedName: MinecaRTS.Worker.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.Worker.HandleMessage
  MinecaRTS.Worker.ExitState*:
    name:
      CSharp:
      - id: MinecaRTS.Worker.ExitState*
        name: ExitState
        nameWithType: Worker.ExitState
        qualifiedName: MinecaRTS.Worker.ExitState
      VB:
      - id: MinecaRTS.Worker.ExitState*
        name: ExitState
        nameWithType: Worker.ExitState
        qualifiedName: MinecaRTS.Worker.ExitState
    isDefinition: true
    commentId: Overload:MinecaRTS.Worker.ExitState
  MinecaRTS.Worker.RenderDebug*:
    name:
      CSharp:
      - id: MinecaRTS.Worker.RenderDebug*
        name: RenderDebug
        nameWithType: Worker.RenderDebug
        qualifiedName: MinecaRTS.Worker.RenderDebug
      VB:
      - id: MinecaRTS.Worker.RenderDebug*
        name: RenderDebug
        nameWithType: Worker.RenderDebug
        qualifiedName: MinecaRTS.Worker.RenderDebug
    isDefinition: true
    commentId: Overload:MinecaRTS.Worker.RenderDebug
  MinecaRTS.World.GameTime*:
    name:
      CSharp:
      - id: MinecaRTS.World.GameTime*
        name: GameTime
        nameWithType: World.GameTime
        qualifiedName: MinecaRTS.World.GameTime
      VB:
      - id: MinecaRTS.World.GameTime*
        name: GameTime
        nameWithType: World.GameTime
        qualifiedName: MinecaRTS.World.GameTime
    isDefinition: true
    commentId: Overload:MinecaRTS.World.GameTime
  MinecaRTS.World.ID*:
    name:
      CSharp:
      - id: MinecaRTS.World.ID*
        name: ID
        nameWithType: World.ID
        qualifiedName: MinecaRTS.World.ID
      VB:
      - id: MinecaRTS.World.ID*
        name: ID
        nameWithType: World.ID
        qualifiedName: MinecaRTS.World.ID
    isDefinition: true
    commentId: Overload:MinecaRTS.World.ID
  System.Collections.Generic.Dictionary{System.Type,MinecaRTS.Cost}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Cost
        name: Cost
        nameWithType: Cost
        qualifiedName: MinecaRTS.Cost
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Type
        name: Type
        nameWithType: Type
        qualifiedName: System.Type
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Cost
        name: Cost
        nameWithType: Cost
        qualifiedName: MinecaRTS.Cost
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{System.Type,MinecaRTS.Cost}
  System.Collections.Generic.List{MinecaRTS.Building}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Building
        name: Building
        nameWithType: Building
        qualifiedName: MinecaRTS.Building
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Building
        name: Building
        nameWithType: Building
        qualifiedName: MinecaRTS.Building
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{MinecaRTS.Building}
  System.Collections.Generic.Dictionary{MinecaRTS.Cell,MinecaRTS.Resource}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Resource
        name: Resource
        nameWithType: Resource
        qualifiedName: MinecaRTS.Resource
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Resource
        name: Resource
        nameWithType: Resource
        qualifiedName: MinecaRTS.Resource
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{MinecaRTS.Cell,MinecaRTS.Resource}
  System.Collections.Generic.Dictionary{MinecaRTS.Cell,MinecaRTS.Track}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Track
        name: Track
        nameWithType: Track
        qualifiedName: MinecaRTS.Track
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: MinecaRTS.Cell
        name: Cell
        nameWithType: Cell
        qualifiedName: MinecaRTS.Cell
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: MinecaRTS.Track
        name: Track
        nameWithType: Track
        qualifiedName: MinecaRTS.Track
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{MinecaRTS.Cell,MinecaRTS.Track}
  MinecaRTS.World.#ctor*:
    name:
      CSharp:
      - id: MinecaRTS.World.#ctor*
        name: World
        nameWithType: World.World
        qualifiedName: MinecaRTS.World.World
      VB:
      - id: MinecaRTS.World.#ctor*
        name: World
        nameWithType: World.World
        qualifiedName: MinecaRTS.World.World
    isDefinition: true
    commentId: Overload:MinecaRTS.World.#ctor
  MinecaRTS.World.Setup*:
    name:
      CSharp:
      - id: MinecaRTS.World.Setup*
        name: Setup
        nameWithType: World.Setup
        qualifiedName: MinecaRTS.World.Setup
      VB:
      - id: MinecaRTS.World.Setup*
        name: Setup
        nameWithType: World.Setup
        qualifiedName: MinecaRTS.World.Setup
    isDefinition: true
    commentId: Overload:MinecaRTS.World.Setup
  MinecaRTS.World.HandleMessage*:
    name:
      CSharp:
      - id: MinecaRTS.World.HandleMessage*
        name: HandleMessage
        nameWithType: World.HandleMessage
        qualifiedName: MinecaRTS.World.HandleMessage
      VB:
      - id: MinecaRTS.World.HandleMessage*
        name: HandleMessage
        nameWithType: World.HandleMessage
        qualifiedName: MinecaRTS.World.HandleMessage
    isDefinition: true
    commentId: Overload:MinecaRTS.World.HandleMessage
  MinecaRTS.World.HandleInput*:
    name:
      CSharp:
      - id: MinecaRTS.World.HandleInput*
        name: HandleInput
        nameWithType: World.HandleInput
        qualifiedName: MinecaRTS.World.HandleInput
      VB:
      - id: MinecaRTS.World.HandleInput*
        name: HandleInput
        nameWithType: World.HandleInput
        qualifiedName: MinecaRTS.World.HandleInput
    isDefinition: true
    commentId: Overload:MinecaRTS.World.HandleInput
  MinecaRTS.World.Update*:
    name:
      CSharp:
      - id: MinecaRTS.World.Update*
        name: Update
        nameWithType: World.Update
        qualifiedName: MinecaRTS.World.Update
      VB:
      - id: MinecaRTS.World.Update*
        name: Update
        nameWithType: World.Update
        qualifiedName: MinecaRTS.World.Update
    isDefinition: true
    commentId: Overload:MinecaRTS.World.Update
  MinecaRTS.World.TeamCanSeeCell*:
    name:
      CSharp:
      - id: MinecaRTS.World.TeamCanSeeCell*
        name: TeamCanSeeCell
        nameWithType: World.TeamCanSeeCell
        qualifiedName: MinecaRTS.World.TeamCanSeeCell
      VB:
      - id: MinecaRTS.World.TeamCanSeeCell*
        name: TeamCanSeeCell
        nameWithType: World.TeamCanSeeCell
        qualifiedName: MinecaRTS.World.TeamCanSeeCell
    isDefinition: true
    commentId: Overload:MinecaRTS.World.TeamCanSeeCell
  MinecaRTS.World.Render*:
    name:
      CSharp:
      - id: MinecaRTS.World.Render*
        name: Render
        nameWithType: World.Render
        qualifiedName: MinecaRTS.World.Render
      VB:
      - id: MinecaRTS.World.Render*
        name: Render
        nameWithType: World.Render
        qualifiedName: MinecaRTS.World.Render
    isDefinition: true
    commentId: Overload:MinecaRTS.World.Render
  MinecaRTS.World.AddUnit*:
    name:
      CSharp:
      - id: MinecaRTS.World.AddUnit*
        name: AddUnit
        nameWithType: World.AddUnit
        qualifiedName: MinecaRTS.World.AddUnit
      VB:
      - id: MinecaRTS.World.AddUnit*
        name: AddUnit
        nameWithType: World.AddUnit
        qualifiedName: MinecaRTS.World.AddUnit
    isDefinition: true
    commentId: Overload:MinecaRTS.World.AddUnit
  MinecaRTS.World.AddBuilding*:
    name:
      CSharp:
      - id: MinecaRTS.World.AddBuilding*
        name: AddBuilding
        nameWithType: World.AddBuilding
        qualifiedName: MinecaRTS.World.AddBuilding
      VB:
      - id: MinecaRTS.World.AddBuilding*
        name: AddBuilding
        nameWithType: World.AddBuilding
        qualifiedName: MinecaRTS.World.AddBuilding
    isDefinition: true
    commentId: Overload:MinecaRTS.World.AddBuilding
  MinecaRTS.World.AddResourceToCell*:
    name:
      CSharp:
      - id: MinecaRTS.World.AddResourceToCell*
        name: AddResourceToCell
        nameWithType: World.AddResourceToCell
        qualifiedName: MinecaRTS.World.AddResourceToCell
      VB:
      - id: MinecaRTS.World.AddResourceToCell*
        name: AddResourceToCell
        nameWithType: World.AddResourceToCell
        qualifiedName: MinecaRTS.World.AddResourceToCell
    isDefinition: true
    commentId: Overload:MinecaRTS.World.AddResourceToCell
  MinecaRTS.World.RemoveResourceFromCell*:
    name:
      CSharp:
      - id: MinecaRTS.World.RemoveResourceFromCell*
        name: RemoveResourceFromCell
        nameWithType: World.RemoveResourceFromCell
        qualifiedName: MinecaRTS.World.RemoveResourceFromCell
      VB:
      - id: MinecaRTS.World.RemoveResourceFromCell*
        name: RemoveResourceFromCell
        nameWithType: World.RemoveResourceFromCell
        qualifiedName: MinecaRTS.World.RemoveResourceFromCell
    isDefinition: true
    commentId: Overload:MinecaRTS.World.RemoveResourceFromCell
  MinecaRTS.World.CellHasResource*:
    name:
      CSharp:
      - id: MinecaRTS.World.CellHasResource*
        name: CellHasResource
        nameWithType: World.CellHasResource
        qualifiedName: MinecaRTS.World.CellHasResource
      VB:
      - id: MinecaRTS.World.CellHasResource*
        name: CellHasResource
        nameWithType: World.CellHasResource
        qualifiedName: MinecaRTS.World.CellHasResource
    isDefinition: true
    commentId: Overload:MinecaRTS.World.CellHasResource
  MinecaRTS.World.CellHasTrack*:
    name:
      CSharp:
      - id: MinecaRTS.World.CellHasTrack*
        name: CellHasTrack
        nameWithType: World.CellHasTrack
        qualifiedName: MinecaRTS.World.CellHasTrack
      VB:
      - id: MinecaRTS.World.CellHasTrack*
        name: CellHasTrack
        nameWithType: World.CellHasTrack
        qualifiedName: MinecaRTS.World.CellHasTrack
    isDefinition: true
    commentId: Overload:MinecaRTS.World.CellHasTrack
  MinecaRTS.World.GetResourceFromCell*:
    name:
      CSharp:
      - id: MinecaRTS.World.GetResourceFromCell*
        name: GetResourceFromCell
        nameWithType: World.GetResourceFromCell
        qualifiedName: MinecaRTS.World.GetResourceFromCell
      VB:
      - id: MinecaRTS.World.GetResourceFromCell*
        name: GetResourceFromCell
        nameWithType: World.GetResourceFromCell
        qualifiedName: MinecaRTS.World.GetResourceFromCell
    isDefinition: true
    commentId: Overload:MinecaRTS.World.GetResourceFromCell
  MinecaRTS.World.GetTrackFromCell*:
    name:
      CSharp:
      - id: MinecaRTS.World.GetTrackFromCell*
        name: GetTrackFromCell
        nameWithType: World.GetTrackFromCell
        qualifiedName: MinecaRTS.World.GetTrackFromCell
      VB:
      - id: MinecaRTS.World.GetTrackFromCell*
        name: GetTrackFromCell
        nameWithType: World.GetTrackFromCell
        qualifiedName: MinecaRTS.World.GetTrackFromCell
    isDefinition: true
    commentId: Overload:MinecaRTS.World.GetTrackFromCell
  MinecaRTS.World.RenderDebug*:
    name:
      CSharp:
      - id: MinecaRTS.World.RenderDebug*
        name: RenderDebug
        nameWithType: World.RenderDebug
        qualifiedName: MinecaRTS.World.RenderDebug
      VB:
      - id: MinecaRTS.World.RenderDebug*
        name: RenderDebug
        nameWithType: World.RenderDebug
        qualifiedName: MinecaRTS.World.RenderDebug
    isDefinition: true
    commentId: Overload:MinecaRTS.World.RenderDebug
  MinecaRTS.WorldEditor.HandleInput*:
    name:
      CSharp:
      - id: MinecaRTS.WorldEditor.HandleInput*
        name: HandleInput
        nameWithType: WorldEditor.HandleInput
        qualifiedName: MinecaRTS.WorldEditor.HandleInput
      VB:
      - id: MinecaRTS.WorldEditor.HandleInput*
        name: HandleInput
        nameWithType: WorldEditor.HandleInput
        qualifiedName: MinecaRTS.WorldEditor.HandleInput
    isDefinition: true
    commentId: Overload:MinecaRTS.WorldEditor.HandleInput
  MinecaRTS.WorldEditor:
    name:
      CSharp:
      - id: MinecaRTS.WorldEditor
        name: WorldEditor
        nameWithType: WorldEditor
        qualifiedName: MinecaRTS.WorldEditor
      VB:
      - id: MinecaRTS.WorldEditor
        name: WorldEditor
        nameWithType: WorldEditor
        qualifiedName: MinecaRTS.WorldEditor
    isDefinition: true
    commentId: T:MinecaRTS.WorldEditor

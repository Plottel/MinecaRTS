### YamlMime:ManagedReference
items:
- uid: MinecaRTS.MsgHandlerRegistry
  commentId: T:MinecaRTS.MsgHandlerRegistry
  id: MsgHandlerRegistry
  parent: MinecaRTS
  children:
  - MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID(System.UInt64)
  - MinecaRTS.MsgHandlerRegistry.NextID
  - MinecaRTS.MsgHandlerRegistry.Register(MinecaRTS.IHandleMessages)
  - MinecaRTS.MsgHandlerRegistry.RemoveEntity(MinecaRTS.IHandleMessages)
  langs:
  - csharp
  - vb
  name: MsgHandlerRegistry
  nameWithType: MsgHandlerRegistry
  fullName: MinecaRTS.MsgHandlerRegistry
  type: Class
  source:
    remote:
      path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
      branch: master
      repo: https://github.com/Plottel/MinecaRTS.git
    id: MsgHandlerRegistry
    path: ../MinecaRTS/Messaging/MsgHandlerRegistry.cs
    startLine: 10
  assemblies:
  - MinecaRTS
  namespace: MinecaRTS
  syntax:
    content: public static class MsgHandlerRegistry
    content.vb: Public Module MsgHandlerRegistry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: MinecaRTS.MsgHandlerRegistry.NextID
  commentId: P:MinecaRTS.MsgHandlerRegistry.NextID
  id: NextID
  parent: MinecaRTS.MsgHandlerRegistry
  langs:
  - csharp
  - vb
  name: NextID
  nameWithType: MsgHandlerRegistry.NextID
  fullName: MinecaRTS.MsgHandlerRegistry.NextID
  type: Property
  source:
    remote:
      path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
      branch: master
      repo: https://github.com/Plottel/MinecaRTS.git
    id: NextID
    path: ../MinecaRTS/Messaging/MsgHandlerRegistry.cs
    startLine: 19
  assemblies:
  - MinecaRTS
  namespace: MinecaRTS
  syntax:
    content: public static ulong NextID { get; }
    parameters: []
    return:
      type: System.UInt64
    content.vb: Public Shared ReadOnly Property NextID As ULong
  overload: MinecaRTS.MsgHandlerRegistry.NextID*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: MinecaRTS.MsgHandlerRegistry.Register(MinecaRTS.IHandleMessages)
  commentId: M:MinecaRTS.MsgHandlerRegistry.Register(MinecaRTS.IHandleMessages)
  id: Register(MinecaRTS.IHandleMessages)
  parent: MinecaRTS.MsgHandlerRegistry
  langs:
  - csharp
  - vb
  name: Register(IHandleMessages)
  nameWithType: MsgHandlerRegistry.Register(IHandleMessages)
  fullName: MinecaRTS.MsgHandlerRegistry.Register(MinecaRTS.IHandleMessages)
  type: Method
  source:
    remote:
      path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
      branch: master
      repo: https://github.com/Plottel/MinecaRTS.git
    id: Register
    path: ../MinecaRTS/Messaging/MsgHandlerRegistry.cs
    startLine: 24
  assemblies:
  - MinecaRTS
  namespace: MinecaRTS
  syntax:
    content: public static void Register(IHandleMessages msgHandler)
    parameters:
    - id: msgHandler
      type: MinecaRTS.IHandleMessages
    content.vb: Public Shared Sub Register(msgHandler As IHandleMessages)
  overload: MinecaRTS.MsgHandlerRegistry.Register*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MinecaRTS.MsgHandlerRegistry.RemoveEntity(MinecaRTS.IHandleMessages)
  commentId: M:MinecaRTS.MsgHandlerRegistry.RemoveEntity(MinecaRTS.IHandleMessages)
  id: RemoveEntity(MinecaRTS.IHandleMessages)
  parent: MinecaRTS.MsgHandlerRegistry
  langs:
  - csharp
  - vb
  name: RemoveEntity(IHandleMessages)
  nameWithType: MsgHandlerRegistry.RemoveEntity(IHandleMessages)
  fullName: MinecaRTS.MsgHandlerRegistry.RemoveEntity(MinecaRTS.IHandleMessages)
  type: Method
  source:
    remote:
      path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
      branch: master
      repo: https://github.com/Plottel/MinecaRTS.git
    id: RemoveEntity
    path: ../MinecaRTS/Messaging/MsgHandlerRegistry.cs
    startLine: 29
  assemblies:
  - MinecaRTS
  namespace: MinecaRTS
  syntax:
    content: public static void RemoveEntity(IHandleMessages msgHandler)
    parameters:
    - id: msgHandler
      type: MinecaRTS.IHandleMessages
    content.vb: Public Shared Sub RemoveEntity(msgHandler As IHandleMessages)
  overload: MinecaRTS.MsgHandlerRegistry.RemoveEntity*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID(System.UInt64)
  commentId: M:MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID(System.UInt64)
  id: GetMsgHandlerFromID(System.UInt64)
  parent: MinecaRTS.MsgHandlerRegistry
  langs:
  - csharp
  - vb
  name: GetMsgHandlerFromID(UInt64)
  nameWithType: MsgHandlerRegistry.GetMsgHandlerFromID(UInt64)
  fullName: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID(System.UInt64)
  type: Method
  source:
    remote:
      path: MinecaRTS/Messaging/MsgHandlerRegistry.cs
      branch: master
      repo: https://github.com/Plottel/MinecaRTS.git
    id: GetMsgHandlerFromID
    path: ../MinecaRTS/Messaging/MsgHandlerRegistry.cs
    startLine: 34
  assemblies:
  - MinecaRTS
  namespace: MinecaRTS
  syntax:
    content: public static IHandleMessages GetMsgHandlerFromID(ulong id)
    parameters:
    - id: id
      type: System.UInt64
    return:
      type: MinecaRTS.IHandleMessages
    content.vb: Public Shared Function GetMsgHandlerFromID(id As ULong) As IHandleMessages
  overload: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: MinecaRTS
  commentId: N:MinecaRTS
  isExternal: false
  name: MinecaRTS
  nameWithType: MinecaRTS
  fullName: MinecaRTS
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: MinecaRTS.MsgHandlerRegistry.NextID*
  commentId: Overload:MinecaRTS.MsgHandlerRegistry.NextID
  isExternal: false
  name: NextID
  nameWithType: MsgHandlerRegistry.NextID
  fullName: MinecaRTS.MsgHandlerRegistry.NextID
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: MinecaRTS.MsgHandlerRegistry.Register*
  commentId: Overload:MinecaRTS.MsgHandlerRegistry.Register
  isExternal: false
  name: Register
  nameWithType: MsgHandlerRegistry.Register
  fullName: MinecaRTS.MsgHandlerRegistry.Register
- uid: MinecaRTS.IHandleMessages
  commentId: T:MinecaRTS.IHandleMessages
  parent: MinecaRTS
  isExternal: false
  name: IHandleMessages
  nameWithType: IHandleMessages
  fullName: MinecaRTS.IHandleMessages
- uid: MinecaRTS.MsgHandlerRegistry.RemoveEntity*
  commentId: Overload:MinecaRTS.MsgHandlerRegistry.RemoveEntity
  isExternal: false
  name: RemoveEntity
  nameWithType: MsgHandlerRegistry.RemoveEntity
  fullName: MinecaRTS.MsgHandlerRegistry.RemoveEntity
- uid: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID*
  commentId: Overload:MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID
  isExternal: false
  name: GetMsgHandlerFromID
  nameWithType: MsgHandlerRegistry.GetMsgHandlerFromID
  fullName: MinecaRTS.MsgHandlerRegistry.GetMsgHandlerFromID
